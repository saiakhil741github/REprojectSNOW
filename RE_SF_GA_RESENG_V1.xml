<?xml version="1.0" encoding="UTF-8"?><unload unload_date="2022-05-18 10:19:19">
<sys_remote_update_set action="INSERT_OR_UPDATE">
<application display_value="Resource Engine">8d85ea9b1b5e8910d96475de034bcb5f</application>
<application_name>Resource Engine</application_name>
<application_scope>x_dnll4_reseng</application_scope>
<application_version>1.0.0</application_version>
<collisions/>
<commit_date/>
<deleted/>
<description>Google Analytics.</description>
<inserted/>
<name>RE_SF_GA_RESENG_V1</name>
<origin_sys_id/>
<parent display_value=""/>
<release_date/>
<remote_base_update_set display_value=""/>
<remote_parent_id/>
<remote_sys_id>df9fc05b1b53c9541237ddbcdd4bcbaa</remote_sys_id>
<state>loaded</state>
<summary/>
<sys_class_name>sys_remote_update_set</sys_class_name>
<sys_created_by>souravdas</sys_created_by>
<sys_created_on>2022-05-18 10:19:18</sys_created_on>
<sys_id>cf83f395876f0910b7640f6c8bbb3523</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>souravdas</sys_updated_by>
<sys_updated_on>2022-05-18 10:19:18</sys_updated_on>
<u_deloitte_application display_value=""/>
<update_set display_value=""/>
<update_source display_value=""/>
<updated/>
</sys_remote_update_set>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Resource Engine">8d85ea9b1b5e8910d96475de034bcb5f</application>
<category>customer</category>
<comments/>
<name>sp_widget_9fd265d287aac1104ad14007cebb35e7</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, $rootScope, $window, $location, $uibModal, spUtil, $http, $sce) {
    var c = this;
	
	var today_date = new Date();
    var today_date_str = formatDate(today_date, g_user_date_format); 
	var name,id,tracking,action;
	if($scope.user.name){
		name = $scope.user.name;
		id = $scope.user.sys_id;
		console.log("id found"+$scope.user.name);
		console.log("No id found"+$location.$$search.keyword);
	}
	else{
		name = "guest";
		id =  "guest_id";
		console.log("No id found"+$scope.user.name);
		console.log("No id found"+$location.$$search.keyword);
	}
		
	if($location.$$search.keyword){
		tracking = $location.$$search.keyword;
		action ="Search";
		console.log("id found"+tracking);
	}
	else{
		tracking = c.data.typename;
		action ="archetype";
		console.log("No id foundss"+c.data.typename);
	}
	
	
    if (c.data.isloggedIn &amp;&amp; window.NOW &amp;&amp; window.NOW.portal_id &amp;&amp; window.NOW.portal_id.trim() != '') {
        var url = "/" + c.data.portal_url_suffix + "?id=" + c.data.landing_page;
        $location.url(url);
    }

    if (c.data.has_extrnl_plugin) {
        $scope.emailPattern = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
        $scope.phoneNumbr = /^\s*(?:\+?(\d{1,3}))?[-. (]*(\d{3})[-. )]*(\d{3})[-. ]*(\d{4})(?: *x(\d+))?\s*$/;
        $scope.inputType = 'password';
        c.data.emailInvalid = false;
        c.data.emailError = false;
        c.policy = false;
        c.captchaVerified = false;
        var oldEmail = '';
        $scope.$on('captchaVerified', function(event, obj) {
            c.captchaVerified = obj.captchaVerified;
            c.grc = obj.grc;
            scope.$apply();
        });

        jQuery(document).on('click', '.resend-link', function() {
            c.data.resend_link = true;
            c.data.email = c.email;
            c.server.get({
                'email': c.data.email,
                'resend_link': c.data.resend_link
            }).then(
                function(response) {
                    $window.location.href = "/" + c.data.portal_url_suffix + "?id=" + c.data.landing_page + "&amp;register_response=" + response.data.message;
                });
        });
        $(document).on('click', '.comm-login', function() {
            $location.url("/" + c.data.portal_url_suffix + "?id=" + c.data.portal_login);
        });
        c.triggerEmailCheck = function(userForm) {
            c.data.email = userForm.email.$viewValue;
            c.data.emailError = false;
            if (c.data.email &amp;&amp; $scope.emailPattern.test(c.data.email)) {
                c.data.validate_email = true;
                if (c.data.whitelist_array &amp;&amp; c.data.whitelist_array.length &gt; 0 &amp;&amp; c.data.whitelist_array != '') {
                    var domain = c.data.email.substring(c.data.email.lastIndexOf("@") + 1);
                    c.data.isWhiteListed = c.data.whitelist_array.indexOf(domain) &gt; -1;
                } else if (c.data.whitelist_array == '')
                    c.data.isWhiteListed = true;
                if (c.data.isWhiteListed) {					
                    userForm.email.$setValidity('emailWhitelist', true);
                } else
                    userForm.email.$setValidity('emailWhitelist', false);
            }
        };
        c.checkConfirmPassword = function(userForm) {
            if (!userForm.confirm_password.$viewValue) return;
            if (userForm.password.$viewValue == userForm.confirm_password.$viewValue)
                userForm.confirm_password.$setValidity('c.confirm_password', true);
            else
                userForm.confirm_password.$setValidity('c.confirm_password', false);
        };
        c.validatePassword = function(userForm) {
            c.data.validatePassword = true;
            c.data.password = userForm.password.$viewValue;
            var checkPwd = new Function("password", 'var myFunc =  ' + c.data.pwdRule + '; return myFunc;')();
            var pwdStrength = checkPwd(c.data.password);
            if (pwdStrength == 0)
                userForm.password.$setValidity('c.password', false);
            else
                userForm.password.$setValidity('c.password', true);
        };
        //        c.showSubmit = function() {
        //             if (c.data.enableCaptcha == 'true')
        //                 return (c.userid == '' || c.email == '' || c.first_name == '' || c.last_name == '' || c.password == '' || c.confirm_password == '' || c.policy == false || c.captchaVerified == false || c.grc == '');
        //             else
        //                 return (c.userid == '' || c.email == '' || c.first_name == '' || c.last_name == '' || c.password == '' || c.confirm_password == '' || c.policy == false);
        //         };
        c.showSubmit = function() {
            if (c.data.enableCaptcha == 'true')
                return (c.userid == '' || c.email == '' || c.first_name == '' || c.last_name == '' || c.password == '' || c.confirm_password == '' || c.captchaVerified == false || c.grc == '');
            else
                return (c.userid == '' || c.email == '' || c.first_name == '' || c.last_name == '' || c.password == '' || c.confirm_password == '');
        };
        c.action = function() {
            // 			alert($rootScope.selecteditem);
            var inputObj = {};
            inputObj.grc = c.grc;
            inputObj.userid = (c.userid == null) ? '' : c.userid;
            inputObj.first_name = (c.first_name == null) ? '' : c.first_name;
            inputObj.last_name = (c.last_name == null) ? '' : c.last_name;
            inputObj.middle_name = (c.middle_name == null) ? '' : c.middle_name;
            inputObj.email = (c.email == null) ? '' : c.email;
            if (!inputObj.userid) {
                inputObj.userid = inputObj.email;
            }
            // 			alert("c.password= "+c.password);
            inputObj.phone_number = (c.phone_number == null) ? '' : c.phone_number;
            inputObj.password = (c.password == null) ? '' : c.password;
            // 			inputObj.password = "Welcome@123";
            inputObj.portal_id = c.data.portal_id;
            inputObj._tc_number = c.data._tc_number;

            inputObj.info = c.data.infomsg; //Added By Sourav
            c.data.info = c.data.infomsg;
			
            c.data.userDetails = c.first_name + ',' + c.last_name + ',' + c.phone_number + ',' + c.email;

            c.data.catSysId = $rootScope.selecteditem; // getting the sysID of selected catalog item by non logged in user
			c.data.email = c.email;
            
            // 			alert("input.password= "+inputObj.password);

				dataLayer.push(
				{ event:"gtm.click",
				  event: "ju_test",
				  event: "ga_test",
					 'sf_user_type' :name,
					 'sf_unique-userid':id,
					 'tracking_category':tracking,
					 'user_action':"connect-clicked",
					  'resource_id':c.data.catSysId.toString(),
					 'Current_Date':today_date_str
				 });
			
            var resourceUrl = '/api/now/externaluser/register';
            $http.post(resourceUrl, inputObj)
                .then(function(resp) {
                    console.log(resp);
						$window.location.href = "/" + c.data.portal_url_suffix + "?id=" + c.data.landing_page + "&amp;register_response=" + resp.data.result.message;
                }, function(error) {
                    if (error.data.result &amp;&amp; error.data.result.message &amp;&amp; error.data.result.message === 'invalidGRC') {
                        c.data.captcha_error = true;
                    } else {
                        c.data.error = true;
                    }
                });
			c.server.update();
        };

        $scope.$on('$locationChangeStart', function(event, next, current) {
            var nextPage = next + '';
            if (nextPage.indexOf(c.data.login_page) &gt; 0)
                $window.sessionStorage.setItem('navToUri', '?id=' + c.data.landing_page);
        });
        c.login = function() {
            $location.url("/" + c.data.portal_url_suffix + "?id=" + c.data.portal_login);
        };
    }
    $scope.cancelConnect = function() {
        $rootScope.$broadcast("closeModal", "test");
        //$scope.$parent.$parent.buttonClicked({ label: "Cancel", cancel: true });
    }
	$scope.userAlreadyExist = false;
	$scope.existUser = function(email){
		c.data.userEmail = email;
		 c.server.get({
			 'action':'userExistEmail',
                'userEmail': c.data.userEmail,				 
            }).then(
                function(response) {
                    if(response.data.existUser){						
						//spUtil.addErrorMessage("User already Exist");
						$scope.userAlreadyExist = true;
					}
					else 
						$scope.userAlreadyExist = false;
                });
	}


}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.text-muted {&amp;#13;
     font-weight 500px;&amp;#13;
  	color:#51545C;&amp;#13;
}&amp;#13;
a{&amp;#13;
  color : $link-color !important;&amp;#13;
}&amp;#13;
&amp;#13;
 input[type=text]::-ms-clear {&amp;#13;
     display: none;&amp;#13;
}&amp;#13;
 input::-ms-clear {&amp;#13;
     display: none;&amp;#13;
}&amp;#13;
 .panel-body {&amp;#13;
     padding: 20px;&amp;#13;
}&amp;#13;
 .exiting-username {&amp;#13;
     padding: 10px;&amp;#13;
     margin-bottom: 10px;&amp;#13;
}&amp;#13;
 #reg-form{&amp;#13;
    background-color: white;&amp;#13;
     .reg-header {&amp;#13;
         height: 27px;&amp;#13;
         font-size: 25px;&amp;#13;
         font-weight: 100;&amp;#13;
         line-height: 27px;&amp;#13;
         margin-bottom: 28px;&amp;#13;
    }&amp;#13;
     .registration-label {&amp;#13;
         font-size: 15px;&amp;#13;
         line-height: 15px;&amp;#13;
    }&amp;#13;
     .inpt-fields {&amp;#13;
         position: relative;&amp;#13;
         padding: 5px;&amp;#13;
         padding-left: 0px;&amp;#13;
    }&amp;#13;
     .inner-addon .glyphicon {&amp;#13;
         position: absolute;&amp;#13;
         padding: 10px;&amp;#13;
         pointer-events: none;&amp;#13;
         padding-right: 15px;&amp;#13;
         right: 0px;&amp;#13;
    }&amp;#13;
     .inpt-fields input {&amp;#13;
         padding-right: 30px;&amp;#13;
    }&amp;#13;
     .glyphicon {&amp;#13;
         top: inherit;&amp;#13;
    }&amp;#13;
     .glyphicon-ok {&amp;#13;
         color:$text-success;&amp;#13;
    }&amp;#13;
     .glyphicon-remove {&amp;#13;
         color:$text-danger;&amp;#13;
    }&amp;#13;
     .has-success .form-control {&amp;#13;
         border-color:$text-success;&amp;#13;
    }&amp;#13;
     .has-error .form-control {&amp;#13;
         border-color:$text-danger;&amp;#13;
    }&amp;#13;
     .form-validation-rules{&amp;#13;
         padding:15px;&amp;#13;
         padding-bottom:10px;&amp;#13;
         font-size: 14px;&amp;#13;
       	 background-color: white;&amp;#13;
    }&amp;#13;
     .icon {&amp;#13;
         display: table-cell;&amp;#13;
         vertical-align: middle;&amp;#13;
    }&amp;#13;
     .rules-outer{&amp;#13;
         padding-left:10px;&amp;#13;
         padding-bottom:5px;&amp;#13;
    }&amp;#13;
     .rules-text {&amp;#13;
         padding-left:10px;&amp;#13;
         padding-right: 10px;&amp;#13;
         display: table-cell;&amp;#13;
         vertical-align: top;&amp;#13;
         font-size: 14px;&amp;#13;
         line-height: 19px;&amp;#13;
    }&amp;#13;
     .form-group{&amp;#13;
         padding-bottom:5px;&amp;#13;
    }&amp;#13;
     .account-existing{&amp;#13;
         padding-top:10px;&amp;#13;
         text-align: center;&amp;#13;
         vertical-align: middle;&amp;#13;
    }&amp;#13;
     .form-link .icon{&amp;#13;
         position:absolute;&amp;#13;
    }&amp;#13;
     .policy-check{&amp;#13;
         font-size:14px;&amp;#13;
         padding-top: 3px;&amp;#13;
         padding-left: 15px;&amp;#13;
    }&amp;#13;
     .form-link{&amp;#13;
         display:table;&amp;#13;
         padding-left:5px;&amp;#13;
         margin-bottom:0px;&amp;#13;
         font-size: 16px;&amp;#13;
         line-height: 24px;&amp;#13;
    }&amp;#13;
     .link-text{&amp;#13;
         padding-left:5px;&amp;#13;
    }&amp;#13;
     #password-rule .fa{&amp;#13;
         font-size:7px;&amp;#13;
    }&amp;#13;
     input.ng-pristine{&amp;#13;
         -webkit-box-shadow: none;&amp;#13;
         -ms-box-shadow: none;&amp;#13;
         box-shadow:none;&amp;#13;
    }&amp;#13;
     .form_link a {&amp;#13;
         color: -webkit-link;&amp;#13;
         text-decoration: underline &amp;#13;
    }&amp;#13;
    .form_link a:focus {&amp;#13;
        outline: auto -webkit-focus-ring-color !important &amp;#13;
    }&amp;#13;
    input[type="checkbox"]:focus{&amp;#13;
       outline:5px solid $input-border-focus !important;&amp;#13;
    }&amp;#13;
   .terms-and-conditions-text{&amp;#13;
     margin-left: 10px;&amp;#13;
   }}&amp;#13;
 #html_element{&amp;#13;
     transform:scale(1.05);&amp;#13;
     -webkit-transform:scale(1.05);&amp;#13;
     transform-origin:0 5;&amp;#13;
     -webkit-transform-origin:0 0;&amp;#13;
}&amp;#13;
 @media (max-width: 375px) {&amp;#13;
     #html_element{&amp;#13;
         transform:scale(0.8);&amp;#13;
         -webkit-transform:scale(0.8);&amp;#13;
         transform-origin:0 0;&amp;#13;
         -webkit-transform-origin:0 0;&amp;#13;
    }&amp;#13;
   }&amp;#13;
 .g-recaptcha{&amp;#13;
     padding-bottom: 10px;&amp;#13;
}&amp;#13;
 #captcha_form_group{&amp;#13;
     margin-bottom:0px;&amp;#13;
   #captchaVerified{&amp;#13;
     display:none;&amp;#13;
   }&amp;#13;
}&amp;#13;
&amp;#13;
   .slds-hide {&amp;#13;
    display: none!important;&amp;#13;
}&amp;#13;
a {&amp;#13;
    cursor: pointer;&amp;#13;
}&amp;#13;
.slds-show {&amp;#13;
    display: block;&amp;#13;
}&amp;#13;
td {&amp;#13;
    text-align: left;&amp;#13;
 	display: table-cell;&amp;#13;
    vertical-align: inherit;&amp;#13;
}&amp;#13;
&amp;#13;
.btn-secondary{&amp;#13;
padding: 9px 8px !important;&amp;#13;
font-size: 10px !important;&amp;#13;
background-color: transparent;&amp;#13;
color: #009aff !important;&amp;#13;
border: none;&amp;#13;
&amp;#13;
}&amp;#13;
.form-button{&amp;#13;
  float:right;&amp;#13;
}&amp;#13;
     &lt;/css&gt;&lt;data_table&gt;sp_rectangle&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;reseng_registration_connect&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;RESENG_Registration Connect&lt;/name&gt;&lt;option_schema&gt;[{"name":"landing_page","default_value":"","section":"other","label":"Landing Page","type":"string"},{"name":"captcha_prop_name","default_value":"sn_ext_usr_reg.captchaEnabled","section":"other","label":"Captcha property name","type":"string"},{"name":"login_page","default_value":"","section":"other","label":"Login Page","type":"string"},{"name":"cred_sysid","default_value":"","section":"other","label":"Credential Sysid","type":"string"}]&lt;/option_schema&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles&gt;snc_external&lt;/roles&gt;&lt;script&gt;&lt;![CDATA[(function() {
	data.infomsg = '';
	data.userDetails = '';
	
	data.portal = $sp.getPortalRecord();
	data.portal_url_suffix = data.portal.getValue("url_suffix")+'';
	data.landing_page = $sp.getPortalRecord().homepage.id+'';
	if(gs.isLoggedIn()){
		data.isloggedIn = true;
		return;	
	}
	data.has_extrnl_plugin = GlidePluginManager.isActive('com.sn_external_user_register');
	if (data.has_extrnl_plugin) {
// 		data.portal_id= data.portal.getUniqueValue();
		data.portal_id = "2086b814c3221200f3897bfaa2d3aea8";// added the csp sys_id as per requirement.
		data.portal_name = data.portal.getValue("title")+'';
		data.portal_login = data.portal.login_page.id+'' || 'csm_login';
		data.login_page = options.login_page || '';
		data.communityUser = false;
		data.emailError = true;
		data.captcha_prop = options.captcha_prop_name;
		data.captch_url = 'https://www.google.com/recaptcha/api.js?onload=onloadCallback&amp;render=explicit&amp;hl=' + gs.getSession().getLanguage();
		data.enableCaptcha = gs.getProperty(data.captcha_prop, 'true');
		data.captchaSiteKey = gs.getProperty('google.captcha.site_key');
		data.cred_sysid = options.cred_sysid || gs.getProperty("sn_customerservice.csm_portal.pwd_cred_store", '6e51033fbf020100710071a7bf0739e0');
		var session = gs.getSession();
		var external_utils = new sn_ext_usr_reg.ExternalUserManagmentUtils(data.portal_id);
		
		var whitelist = gs.getProperty('sn_ext_usr_reg.allowed_email_domains');
		data.whitelist_array = "";
		if (whitelist)
			data.whitelist_array = whitelist.replace(/\s/g, '').split(",");
		data.sysuser_email_exists = false;
		data.temprec_email_exists = false;
		var privayPolicy = gs.getMessage('Privacy Policy');
		var customerTerms = gs.getMessage('Customer Service Terms and Conditions');
		privayPolicy = '&lt;a href=/sn_customerservice_registration_privacy_policy_doc.do target=_blank&gt;&amp;nbsp;'+privayPolicy+'&lt;/a&gt;';
		customerTerms = '&lt;a href=/sn_customerservice_registration_terms_doc.do target=_blank&gt;&amp;nbsp;'+customerTerms+'&lt;/a&gt;';
		var termsConditions = gs.getMessage("I agree to the {0} and the {1}",[privayPolicy, customerTerms]);
		var here = gs.getMessage("here");
		data.termsConditions = termsConditions;
		data.pwdRule = "";
		data.pwdHints_array = [];
		var liStartTagString = '&lt;li class="rules-outer"&gt;&lt;div class="icon"&gt;&lt;i class="fa fa-circle"&gt;&lt;/i&gt;&lt;/div&gt; &lt;div class="rules-text"&gt;';
	    var liEndTagString = '&lt;/li&gt;';
		if(options.cred_sysid){
		var credGr = new GlideRecord('pwd_cred_store');
		if (credGr.get(data.cred_sysid)) {
			data.pwdHints = credGr.getDisplayValue('pwd_rule_hint');
			data.pwdRule = credGr.getValue('strength_rule');
			data.pwdHints = data.pwdHints.replaceAll('-', '');
			data.pwdHints = data.pwdHints.replaceAll('&lt;p&gt;', liStartTagString);
			data.pwdHints = data.pwdHints.replaceAll('&lt;/p&gt;', '&lt;/li&gt;&lt;/li&gt;');
		}
		}
		else{
		data.procId = gs.getProperty('glide.service_portal.default_password_process', 'c6b0c20667100200a5a0f3b457415ad5');
        var credMgr = new SNC.PwdCredentialStoreManager();
		
		var enable_pp = credMgr.getEnablePasswordPolicy(data.procId);
		var policy = SNC.PasswordPolicyEvaluator;
		var pwdRuleHints;
		
	    if(enable_pp) {
		var pwdPolicy = credMgr.getPasswordPolicyId(data.procId);
		data.pwdRule = policy.getPasswordStrengthScript(pwdPolicy);
		pwdRuleHints = policy.getPasswordRuleHints(pwdPolicy);
		if(pwdRuleHints){
		var jsonParsedPwdRule = JSON.parse(pwdRuleHints);
	    var hints = liStartTagString+ jsonParsedPwdRule[0].hint + liEndTagString ;
		for (var j = 1; j &lt; jsonParsedPwdRule.length; j++) {
                    hints = hints.concat(liStartTagString+ jsonParsedPwdRule[j].hint+liEndTagString);
                }
		data.pwdHints = hints;
		}
	}
	else {
		pwdRuleHints = credMgr.getPasswordRuleDesc(data.procId);
		if(pwdRuleHints)
		data.pwdHints = pwdRuleHints.replaceAll('-', '').replaceAll('&lt;p&gt;', liStartTagString).replaceAll('&lt;/p&gt;', '&lt;/li&gt;&lt;/li&gt;');
		data.pwdRule = credMgr.getStrengthRule(data.procId);
		
	}
		}
		if (input &amp;&amp; input.email &amp;&amp; input.resend_link &amp;&amp; input.action != 'register'){
				var resendResponse = external_utils.resendLink(input.email);
				data.message_txt = resendResponse.message_txt;
				data.message = resendResponse.message || "";
				data.status = resendResponse.status || "";
				gs.getSession().putClientData("reg_resp_message", data.message_txt);
				gs.getSession().putClientData("reg_resp_status", data.status);
				gs.getSession().putClientData("reg_email", input.email);
		}
		data.catSysId='';
		if(input &amp;&amp; input.catSysId){
			
// 			var userEmail = input.email;
// // 			var catSysId = input.catSysId;
// 			var user = new GlideRecord("user_registration_request");
// 			user.addEncodedQuery("email="+userEmail);
// 			user.query();
// 			if(user.next()){
// 				user.state = 2;
// // 				user.setWorkflow(false);
// 				user.update();
// 			}
			
			
			var resourceSys = new x_dnll4_reseng.Reseng_ConnectUtils().createReferralForNonLoggedIn(input.catSysId, input.email, input.info, input.userDetails);
			
// 			var str = JSON.stringify(input.userDetails);
//          var parser = new JSONParser();
//          var result = parser.parse(str);
//          gs.log("line 102 Attribute: " + result.firstName + ' ' + result.lastName);
			
		}	
	}
	data.existUser = false;
	if(input &amp;&amp; input.action == 'userExistEmail'){
// 		var existUser = external_utils.isExistingUser(input.userEmail);
		var usr = new GlideRecord("sys_user");
		if(usr.get("email",input.userEmail)){
			data.existUser = true;
		}
	}
// 	if(input &amp;&amp; input.email){
		
		
// // 			gs.addInfoMessage("inside input email= "+input.email);
// 			gs.eventQueue("Re.resident.registration", '','',input.email);
// 		}
	
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;souravdas&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-04-01 09:18:18&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;9fd265d287aac1104ad14007cebb35e7&lt;/sys_id&gt;&lt;sys_mod_count&gt;22&lt;/sys_mod_count&gt;&lt;sys_name&gt;RESENG_Registration Connect&lt;/sys_name&gt;&lt;sys_package display_value="Resource Engine" source="x_dnll4_reseng"&gt;8d85ea9b1b5e8910d96475de034bcb5f&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Resource Engine"&gt;8d85ea9b1b5e8910d96475de034bcb5f&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_9fd265d287aac1104ad14007cebb35e7&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;jecherian&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-05-12 12:20:28&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;!--panel-body reg-body--&gt;
&lt;!--&lt;div ng-if="data.has_extrnl_plugin"&gt;--&gt;
&lt;div id="reg-form" class=" panel-body" ng-if="::!c.data.isloggedIn"&gt;
   &lt;div class="reg-header"&gt;
     &lt;h1&gt; ${Let's connect you to help right away} &lt;/h1&gt;
   &lt;/div&gt;
  
    
   &lt;form name="userForm" ng-submit="$event.preventDefault()" novalidate&gt;
    &lt;!-- &lt;div ng-if="data.captcha_error == true" class="alert alert-danger" role="alert"&gt;
       &lt;div ng-if="data.captcha_error == true" &gt;${Please verify the security code}&lt;/div&gt;
     &lt;/div&gt;
      &lt;div ng-if="data.error == true" class="alert alert-danger" role="alert"&gt;
       &lt;div ng-if="data.error == true" &gt;${Error processing request}&lt;/div&gt;
     &lt;/div&gt;--&gt;
       &lt;div&gt;
       &lt;h5&gt; ${Share your contact details so that the organization can get in touch.} &lt;/h5&gt;&lt;br/&gt; 
      &lt;/div&gt;
    &lt;div&gt;
      
       &lt;!-- first_name input--&gt;
        &lt;div class="form-group" ng-class="{ 'has-error' : userForm.first_name.$invalid &amp;&amp; userForm.first_name.$dirty, 'has-success': !userForm.first_name.$invalid &amp;&amp; userForm.first_name.$dirty}"&gt;
           &lt;label class="registration-label" for="first_name"&gt;${First Name}&lt;/label&gt;
           &lt;div class="inpt-fields inner-addon"&gt;
              &lt;i  ng-class="{'glyphicon glyphicon-remove text-danger' :userForm.first_name.$invalid &amp;&amp; userForm.first_name.$dirty , 'glyphicon glyphicon-ok text-success': !userForm.first_name.$invalid &amp;&amp; userForm.first_name.$dirty}" aria-hidden="true"&gt;&lt;/i&gt;
              &lt;!--ng-blur="c.triggerfirst_nameCheck(userForm)" --&gt;
              &lt;input ng-model="c.first_name" id="first_name" name="first_name" type="first_name" class="form-control" ng-minlength="1" aria-required="true" required /&gt;
           &lt;/div&gt;
       &lt;!-- &lt;/div&gt; --&gt;
       &lt;!-- last_name input--&gt;
        &lt;!-- &lt;div class="form-group" ng-class="{ 'has-error' : userForm.last_name.$invalid &amp;&amp; userForm.last_name.$dirty, 'has-success': !userForm.last_name.$invalid &amp;&amp; userForm.last_name.$dirty}"&gt; --&gt;
           &lt;label class="registration-label" for="last_name"&gt;${Last Name}&lt;/label&gt;
           &lt;div class="inpt-fields inner-addon"&gt;
              &lt;i  ng-class="{'glyphicon glyphicon-remove text-danger' :userForm.last_name.$invalid &amp;&amp; userForm.last_name.$dirty , 'glyphicon glyphicon-ok text-success': !userForm.last_name.$invalid &amp;&amp; userForm.last_name.$dirty}" aria-hidden="true"&gt;&lt;/i&gt;
              &lt;!--ng-blur="c.triggerlast_nameCheck(userForm)" --&gt;
              &lt;input ng-model="c.last_name" id="last_name" name="last_name" type="last_name" class="form-control" ng-minlength="1" aria-required="true" required /&gt;
           &lt;/div&gt;
        &lt;/div&gt;
       
     
      &lt;!--- Gender 
      &lt;div class="form-group"&gt;
       &lt;label for="gender" class="registration-label"&gt;Gender&lt;/label&gt;
        &lt;br&gt;
  &lt;select name="gender" id="gender" class="form-control"&gt;
    &lt;option value="null"&gt; &lt;/option&gt;
    &lt;option value="male"&gt;Male&lt;/option&gt;
    &lt;option value="female"&gt;Female&lt;/option&gt;
    &lt;option value="ipnta"&gt;I prefer not to answer&lt;/option&gt;
  &lt;/select&gt;
      &lt;/div&gt;--&gt;
  
      &lt;!-- Mobile Phone Number --&gt;
       &lt;div class="form-group" ng-class="{ 'has-error' :userForm.phone_number.$invalid &amp;&amp; userForm.phone_number.$dirty, 'has-success': !userForm.phone_number.$invalid &amp;&amp; userForm.phone_number.$dirty &amp;&amp;  c.phone_number.length &gt; 0}"&gt;
           &lt;label class="registration-label" for="phone_number"&gt;${Best phone to reach you}&lt;/label&gt;
           &lt;br&gt;
           &lt;div class="inpt-fields inner-addon"&gt;
              &lt;i  ng-class="{'glyphicon glyphicon-remove text-danger' :userForm.phone_number.$invalid &amp;&amp; userForm.phone_number.$dirty , 'glyphicon glyphicon-ok text-success': !userForm.phone_number.$invalid &amp;&amp; userForm.phone_number.$dirty &amp;&amp;  c.phone_number.length &gt; 0}" aria-hidden="true"&gt;&lt;/i&gt;
              &lt;input maxlength="10" ng-pattern="phoneNumbr" ng-model="c.phone_number" id="phone_number" name="phone_number" type="tel" class="form-control" &gt;
              &lt;ul class="form-validation-rules" ng-show="userForm.phone_number.$dirty &amp;&amp; userForm.phone_number.$invalid" style="list-style: none;"&gt;
                 &lt;li class="rules-outer" ng-class="{ 'text-color' :(userForm.phone_number.$dirty &amp;&amp; userForm.phone_number.$error.required) || userForm.phone_number.$error.pattern , 'text-success': userForm.phone_number.$dirty &amp;&amp; !userForm.phone_number.$error.required &amp;&amp; !userForm.phone_number.$error.pattern  }" &gt;
                    &lt;div class="icon"&gt;&lt;i ng-class="{ 'fa fa-times-circle-o' :(userForm.phone_number.$dirty &amp;&amp; userForm.phone_number.$error.required) || userForm.phone_number.$error.pattern , 'fa fa-check-circle': userForm.phone_number.$dirty &amp;&amp; !userForm.phone_number.$error.required &amp;&amp; !userForm.phone_number.$error.pattern  }" aria-hidden="true"&gt;&lt;/i&gt;&lt;/div&gt;
                    &lt;div class="rules-text" &gt;${Phone number is invalid}&lt;/div&gt;
                 &lt;/li&gt;
              &lt;/ul&gt;
           &lt;/div&gt;
        &lt;/div&gt;
 
      
        &lt;!-- Email input--&gt;
      &lt;div class="form-group" ng-class="{ 'has-error' : userForm.email.$invalid &amp;&amp; userForm.email.$dirty, 'has-success': !userForm.email.$invalid &amp;&amp; userForm.email.$dirty}"&gt;
         &lt;label class="registration-label" for="email"&gt;${Email}&lt;/label&gt;
         &lt;div class="inpt-fields inner-addon"&gt;
            &lt;i  ng-class="{'glyphicon glyphicon-remove text-danger' :userForm.email.$invalid &amp;&amp; userForm.email.$dirty , 'glyphicon glyphicon-ok text-success': !userForm.email.$invalid &amp;&amp; userForm.email.$dirty}" aria-hidden="true"&gt;&lt;/i&gt;
            &lt;!--ng-blur="c.triggerEmailCheck(userForm)" --&gt;
            &lt;input  ng-pattern='emailPattern' ng-blur="c.triggerEmailCheck(userForm)" ng-change = "existUser(c.email)"  ng-model="c.email" id="email" name="email" type="email" class="form-control" ng-maxlength="100"  aria-required="true"  required &gt;
            &lt;div class= "bg-danger exiting-username" ng-if="userForm.$pending.emailWhitelist || userForm.$error.emailWhitelist"&gt;
               &lt;p class= "text-danger" ng-if="userForm.$pending.emailWhitelist"&gt;checking....&lt;/p&gt;
               &lt;p class= "text-danger" style="margin-bottom:0px;" ng-if="userForm.$error.emailWhitelist"&gt;${The email address domain is not allowed}&lt;/p&gt;
            &lt;/div&gt;
           &lt;div&gt;
              &lt;p class= "text-danger" ng-if="userAlreadyExist"&gt;Email Id already exists&lt;/p&gt;
           &lt;/div&gt;
            &lt;ul class="form-validation-rules" ng-show="userForm.email.$dirty &amp;&amp; userForm.email.$invalid &amp;&amp; !c.data.emailError" style="list-style: none;"&gt;
               &lt;li class="rules-outer" ng-class="{ 'text-color' :  (userForm.email.$dirty &amp;&amp; userForm.email.$error.required) || userForm.email.$error.pattern ,  'text-success': userForm.email.$dirty &amp;&amp; !userForm.email.$error.required &amp;&amp; !userForm.email.$error.pattern }" &gt;
                  &lt;div class="icon"&gt;&lt;i ng-class="{ 'fa fa-times-circle-o' :(userForm.email.$dirty &amp;&amp; userForm.email.$error.required) || userForm.email.$error.pattern , 'fa fa-check-circle': userForm.email.$dirty &amp;&amp; !userForm.email.$error.required &amp;&amp; !userForm.email.$error.pattern }" aria-hidden="true"&gt;&lt;/i&gt;&lt;/div&gt;
                  &lt;div class="rules-text" &gt;${Email address is valid}&lt;/div&gt;
               &lt;/li&gt;
               &lt;li class="rules-outer" ng-class="{'text-color' :(userForm.email.$dirty &amp;&amp; userForm.email.$error.required) || userForm.email.$error.maxlength , 'text-success': userForm.email.$dirty &amp;&amp; !userForm.email.$error.required &amp;&amp; !userForm.email.$error.maxlength }" &gt;
                  &lt;div class="icon"&gt;&lt;i ng-class="{ 'fa fa-times-circle-o' :(userForm.email.$dirty &amp;&amp; userForm.email.$error.required) || userForm.email.$error.maxlength , 'fa fa-check-circle': userForm.email.$dirty &amp;&amp; !userForm.email.$error.required &amp;&amp; !userForm.email.$error.maxlength }" aria-hidden="true"&gt;&lt;/i&gt;&lt;/div&gt;
                  &lt;div class="rules-text" &gt;${Email address is less than 100 characters}&lt;/div&gt;
               &lt;/li&gt;
            &lt;/ul&gt;
         &lt;/div&gt;
     &lt;/div&gt;
      
      &lt;!-- Password --&gt;

       &lt;div class="form-group" ng-class="{'has-error' :userForm.password.$invalid &amp;&amp; userForm.password.$dirty , 'has-success': !userForm.password.$invalid &amp;&amp; userForm.password.$dirty}" &gt;
           &lt;label class="registration-label" for="password"&gt;
           ${Password}
           &lt;/label&gt;
           &lt;div class="inpt-fields inner-addon"&gt;
              &lt;i ng-class="{'glyphicon glyphicon-remove text-danger' :userForm.password.$invalid &amp;&amp; userForm.password.$dirty , 'glyphicon glyphicon-ok text-success': !userForm.password.$invalid &amp;&amp; userForm.password.$dirty}" aria-hidden="true"&gt;&lt;/i&gt;
              &lt;input  ng-model-options="{updateOn: 'blur'}"  ng-keyup="c.checkConfirmPassword(userForm);c.validatePassword(userForm)" ng-model="c.password" id="password" name="password" type="{{inputType}}" aria-required="true"  class="form-control" &gt;
              &lt;div id="password-rule" class="form-validation-rules" ng-show="userForm.password.$dirty &amp;&amp; userForm.password.$invalid" &gt;
                 &lt;p&gt;${Your password requires: }&lt;br&gt;&lt;/p&gt;
                 &lt;ul class="rules-outer text-color" ng-bind-html="data.pwdHints" style="list-style: none;"&gt;&lt;/ul&gt;
              &lt;/div&gt;
           &lt;/div&gt;
        &lt;/div&gt;

       &lt;!-- Confirm password --&gt;

    	&lt;div class="form-group password-input" ng-class="{'has-error' :userForm.confirm_password.$invalid &amp;&amp; userForm.confirm_password.$dirty , 'has-success': userForm.confirm_password.$invalid}" &gt;
         &lt;label class="registration-label" for="confirm_password"&gt;
         ${Confirm Password}
         &lt;/label&gt;
         &lt;div class="inpt-fields inner-addon"&gt;
            &lt;i  ng-class="{'glyphicon glyphicon-remove text-danger' :userForm.confirm_password.$invalid &amp;&amp; userForm.confirm_password.$dirty , 'glyphicon glyphicon-ok text-success': !userForm.confirm_password.$invalid &amp;&amp; userForm.confirm_password.$dirty}" aria-hidden="true" &gt;&lt;/i&gt;
            &lt;input  ng-model="c.confirm_password" ng-keyup="c.checkConfirmPassword(userForm)"
               type="{{inputType}}" id="confirm_password" name="confirm_password" class="form-control" ng-focus="match_highlight=true" ng-blur="match_highlight=false" aria-required="true"&gt;
            &lt;ul class="form-validation-rules" ng-show="userForm.confirm_password.$dirty &amp;&amp; userForm.confirm_password.$invalid" style="list-style: none;"&gt;
               &lt;li class="rules-outer" ng-class="{'text-color' :(userForm.confirm_password.$dirty &amp;&amp; userForm.confirm_password.$error.required) || userForm.confirm_password.$error , 'text-success':userForm.confirm_password.$dirty &amp;&amp; !userForm.confirm_password.$error.required &amp;&amp; !userForm.confirm_password.$error  }" &gt;
                  &lt;div class="icon"&gt;&lt;i ng-class="{ 'fa fa-times-circle-o' :(userForm.confirm_password.$dirty &amp;&amp; userForm.confirm_password.$error.required) || userForm.confirm_password.$error  , 'fa fa-check-circle':  userForm.confirm_password.$dirty &amp;&amp; !userForm.confirm_password.$error.required &amp;&amp; !userForm.confirm_password.$error  }" aria-hidden="true"&gt;&lt;/i&gt;&lt;/div&gt;
                  &lt;div class="rules-text" &gt;${Password does not match}
                  &lt;/div&gt;
               &lt;/li&gt;
            &lt;/ul&gt;
         &lt;/div&gt;
      &lt;/div&gt;    
    &lt;/div&gt;
     
     &lt;div class="form-group"&gt;
           &lt;label class="registration-label" for="extra_info"&gt;${Any other info you'd like to share?}&lt;/label&gt;
           &lt;div class="inpt-fields inner-addon"&gt;
              &lt;!--&lt;input id="extra_info" name="extra_info" type="extra_info" class="form-control" ng-minlength="1" /&gt;--&gt;
             &lt;textarea ng-model="data.infomsg" id="extra_info" name="extra_info" type="extra_info" class="form-control"&gt;&lt;/textarea&gt;
           &lt;/div&gt;
     
     &lt;!-- reCaptcha --&gt;
      &lt;input id="sitekey" type="hidden" value={{c.data.captchaSiteKey}}&gt;
      &lt;script&gt;
         (function(){ 
           var e = $('.password-input');
           var lang = g_lang || window.NOW.language;
           var d = document.createElement("script");
           d.src = "https://www.google.com/recaptcha/api.js?onload=onloadCallback&amp;render=explicit";
           if(lang)
             d.src +='&amp;hl='+lang;
           d.type = "text/javascript"; 
           d.async = true;
           d.defer = true;
           e.after(d);
         })();
         var onloadCallback = function() {
           jQuery('#g-recaptcha-response').attr('aria-hidden', true);
           jQuery('#g-recaptcha-response').attr('aria-label', true);
           var captchaVerified;
           var captchaWidget;
           var verifyCallback = function(grc) {
             if ((grc == "") || (grc == undefined))
               captchaVerified = false;
             else 
               captchaVerified = true;
             jQuery("#captchaVerified").attr("value",captchaVerified);
             angular.element('#captchaVerified').scope().$root.$broadcast('captchaVerified',{captchaVerified:captchaVerified,grc:grc});
           };
           var sitekey = jQuery("#sitekey").val();
            /*if check has been added so that the recaptcha render will not happen 
            second time even with the element present resulting in 
            'recaptch has been already rendered' console error */                
           if($('#html_element').html() == ''){
             captchaWidget = grecaptcha.render('html_element', {
               'sitekey' : sitekey,
               'callback' : verifyCallback,
               'theme' : 'light',
               'expired-callback' :  captchaExpired
             });
           }
         };
         var captchaExpired = function(){
           captchaVerified = false;
           jQuery("#captchaVerified").attr("value",captchaVerified);
           angular.element('#captchaVerified').scope().$root.$broadcast('captchaVerified',{captchaVerified:captchaVerified,grc:null});
         };
      &lt;/script&gt;
      &lt;!-- Google Recaptcha ng-if="data.enableCaptcha == 'true'" ng-if="c.data.enableCaptcha == true"--&gt;
      &lt;div  ng-if="c.data.enableCaptcha == 'true' ||c.data.enableCaptcha == true" id="captcha_form_group"  class="form-group"&gt;
        &lt;input ng-model="c.captchaVerified" type="checkbox" name="captchaVerified" id="captchaVerified" style="" class="form-control" aria-label="captcha-verify"&gt;
   &lt;form action="?" method="POST"&gt;
   &lt;div class="g-recaptcha" id="html_element"&gt;&lt;/div&gt; 
   &lt;/form&gt;
   &lt;/div&gt;
   &lt;!-- Legal COPA conditions --&gt;
     &lt;div style="clear:both"&gt;
   &lt;/div&gt;
     &lt;!-- google recaptcha --&gt;
   &lt;!-- Privacy Policy &amp; Terms conditions --&gt;
    &lt;!-- &lt;div class="form-group form_link"&gt;
       &lt;label style="font-size: 15px;"&gt;
         &lt;input ng-model="c.policy" id="checkbox_agree" type="checkbox" name="policy"&gt;
          &lt;span class="terms-and-conditions-text" ng-bind-html="c.data.termsConditions" /&gt;
       &lt;/label&gt;
     &lt;/div&gt;
   &lt;div style="clear:both"&gt;
   &lt;/div&gt;--&gt;
      
      
     
      
      
        &lt;!--- Preferred Language ---&gt;
    
      
       &lt;div class="headingL4" data-aura-rendered-by="464:0"&gt;By clicking SUBMIT, I consent to receive emails and text messages from the community partner and to help me connect to this resource.
         &amp;nbsp;
                
         &lt;div class="slds-show" data-aura-rendered-by="473:0"&gt;I consent to receive emails and text messages from the Community Partner and to help me connect to this resource.&lt;br data-aura-rendered-by="475:0"&gt;&lt;br data-aura-rendered-by="476:0"&gt;I understand that the following email messages will be sent:&lt;br data-aura-rendered-by="478:0"&gt;
           &lt;table data-aura-rendered-by="479:0"&gt;
             
            &lt;tr data-aura-rendered-by="480:0"&gt;
              &lt;td style="vertical-align: top;" data-aura-rendered-by="481:0"&gt;1. &lt;/td&gt;
              &lt;td data-aura-rendered-by="483:0"&gt; A first email message will be sent immediately instructions for next steps.&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr data-aura-rendered-by="485:0"&gt;&lt;td style="vertical-align: top;" data-aura-rendered-by="486:0"&gt;2. &lt;/td&gt;
               &lt;td data-aura-rendered-by="488:0"&gt;A follow up email will be sent within 7-10 days to confirm that I have received the help that I need.&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr data-aura-rendered-by="490:0"&gt;&lt;td style="vertical-align: top;" data-aura-rendered-by="491:0"&gt;3. &lt;/td&gt;
               &lt;td data-aura-rendered-by="493:0"&gt;Emails, calls, or text messages from the community partner directly to coordinate next steps.&lt;/td&gt;
             &lt;/tr&gt;
           &lt;/table&gt;
         &lt;/div&gt;
       &lt;/div&gt;
      
       
    &lt;/div&gt;

     
 
     &lt;!-- Signup Button --&gt;
     &lt;div class = "form-button"&gt;
       &lt;button class="btn btn-default" ng-click="cancelConnect()"&gt;${Cancel}&lt;/button&gt;
   &lt;button type="submit" ng-disabled="c.showSubmit() || userForm.userid.$invalid || userForm.email.$invalid  || userForm.first_name.$invalid || userForm.first_name.$pristine || userForm.last_name.$invalid || userForm.last_name.$pristine || userAlreadyExist"
      ng-click="c.action()"
      class=" btn btn-primary"&gt; ${Submit}
   &lt;/button&gt;
     &lt;/div&gt;
   
     &lt;!--&lt;div class="form-group account-existing"&gt;
      &lt;span&gt; ${Already have an account?}&lt;/span&gt;&lt;br&gt;
      &lt;a href ng-click="c.login()"&gt; ${Log in}&lt;/a&gt;
   &lt;/div&gt;--&gt;
   &lt;/form&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>1836407030</payload_hash>
<remote_update_set display_value="RE_SF_GA_RESENG_V1">cf83f395876f0910b7640f6c8bbb3523</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>souravdas</sys_created_by>
<sys_created_on>2022-05-18 10:19:18</sys_created_on>
<sys_id>0383f395876f0910b7640f6c8bbb3525</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>180b8369c190000001</sys_recorded_at>
<sys_updated_by>souravdas</sys_updated_by>
<sys_updated_on>2022-05-18 10:19:18</sys_updated_on>
<table/>
<target_name>RESENG_Registration Connect</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>d3b59da3f997c5d039737c3eaccbe750</update_guid>
<update_guid_history>d3b59da3f997c5d039737c3eaccbe750:1836407030,a473b79f6e57499496bd3a4147b32e05:1557192512,4f8967d3641f099415f502aabfbae30d:1836407030,0b56bdca1e8301d05f2b4b92e7deb3ba:367950349,5b902a01a6438990b4a83b08a7c0e272:-2098786165,9abfda8d0c038990e81f8c3155c92675:-2034426845,431f1a4d36038990826965d268248e56:1416335889,907ed20da003899061a901be51921a62:462074723,0f7d5689bd03899031139a4d33b0d347:-974081831,28af6d8517cb49905adf5af64434b8ec:-929230482,55b29d30768fc59062e2990a89624391:-2098786165,fd9111fc744fc59065618566353d0240:-1564332874,ee61d9bc704fc5908432338363828bbd:-1052421882,ba8d8df4144fc5907e2e28116d8e78c9:1504828514,6f9ccd742c4fc5905a7d9add947571b3:1250095453,7efbc5341f4fc590b5ac1031c3a8ba4d:1021671766,1b3acd702c4fc5903545364e717f28be:1738176724,2e8649f86b0fc59007ade04d10759c02:-16816638,dbc48178f90fc590cca361b9347cdbea:430473901,c213c5b45d0fc5905d3877a763f0d7ff:-1332946005,14720574f00fc590e6b7e7e5040c28f0:-1310486174,396105f0cd0fc590628ff1fc72509deb:-1679034682,c5536b9cbc8745909cdbeaa00b8edada:2020615857,016c90a65d76891056af106f247ef3ba:-999400495,842675e4443a851096dce6c6fe53ece9:176093695,8fe535e4f73a8510eda02896f446dea1:-1511476107,7b4de9a8ddf6851070523cc34547ba9d:176093695,fd74251679aac110934ecde80fad5589:-752626447,1fd265d2b5aac110a931c29d3881bbe9:1162613569</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Resource Engine">8d85ea9b1b5e8910d96475de034bcb5f</application>
<category>customer</category>
<comments/>
<name>sp_widget_80f35a678762c1104ad14007cebb35b2</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;sc&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, $uibModal, $http, spScUtil, spUtil, nowAttachmentHandler, $rootScope, $sanitize, $window, $sce, i18n, $timeout, $log, spAriaUtil, $document, spModal, $q, spAtf, $location, spAriaFocusManager, spSCNavStateManager, cabrillo, snAnalytics) {
   
	
	var c = this;
	var today_date = new Date();
    var today_date_str = formatDate(today_date, g_user_date_format); 
	
	var name,id,tracking,action;
	if($scope.user.name){
		name = 'user name';
		id = 'user id';
		console.log("id found"+$scope.user.name);
		console.log("No id found"+$location.$$search.keyword);
	}
	else{
		name = "guest";
		id =  "guest_id";
		console.log("No id found"+$scope.user.name);
		console.log("No id found"+$location.$$search.keyword);
	}
		
	if($location.$$search.keyword){
		tracking = $location.$$search.keyword;
		action ="Search";
		//console.log("id found"+tracking);
	}
	else{
		tracking = "resources";
		action ="archetype";
		//console.log("No id found"+tracking);
	}
		
dataLayer.push(
 {    event: "gtm.click",
	  event: "ju_test",
	  event: "ga_test",
	'sf_user_type' :name, //Dl-sf_user_type
	 'sf_unique-userid':id,  //Dl-sf_unique-userid
	  'resource_id':$scope.data.sc_cat_item.sys_id, //Dl-resource_id
	 'tracking_category':$scope.data.sc_cat_item.name, // DL-tracking_category
	 'user_action':'expand-view',
	 'Current_Date':today_date_str //Dl-Current_Date
	 
 });

    c.isNative = cabrillo.isNative() &amp;&amp; c.data.isMEE == 'true';
    var webAnalyticsMsgSuffix = c.isNative ? " - NOW Mobile" : "";
    if (c.data.sc_cat_item &amp;&amp; $scope.data.hasOwnProperty("_generatedItemGUID")) {
        c.data.sc_cat_item._attachmentGUID = $scope.data._generatedItemGUID;
    }

    $scope.setDefaultValue = !$scope.data.is_cart_item &amp;&amp; !$scope.data.is_wishlist_item;

    $scope.disableControls = function() {
        return $scope.submitting || $scope.submitted || c.data.isPreview;
    }

    if (c.data.isPreview) {
        spUtil.recordWatch($scope, "sc_item_produced_record", "record_key=" + c.data.sys_id, function(response, data) {
            $window.location.reload();
        });
    }

    $scope.getFocus = function(field) {
        var focusVar = (field.type == "reference") ? "sp_formfield_reference_" : "sp_formfield_";
        focusVar += (field.name.startsWith("IO:") ? field._children[0] : field.name);
        var elem = document.getElementById(focusVar);
        if (field.type == "url" &amp;&amp; elem.style.display == "none")
            elem = document.getElementById(focusVar + "_unlock");
        else if (field.type == "sc_multi_row")
            elem = document.getElementById(field.sys_id + "_add_row");
        elem.focus();
    }



    c.inplanvalue = false;
    c.createCase = function(cat_sysid) {
			dataLayer.push(
		 { event:"gtm.click",
		   event: "ju_test",
		   event: "ga_test",
			 'sf_user_type' :name,
			 'sf_unique-userid':id,
			 'resource_id':$scope.data.sc_cat_item.sys_id,
			 'tracking_category':$scope.data.sc_cat_item.name,
			 'user_action':'connect-clicked',
			 'Current_Date':today_date_str

		 });
		
		console.log("connect button clicked");
    
		
		
        c.server.get({
            method: "referral"
        });
        c.inplanvalue = true;

    };
    c.addOrRemove = false;
    c.addToFavorites = function(cat_sysid) {
        c.server.get({
            method: "addfavorite"
        });
        c.data.addOrRemove = true;
    };
    c.removeFromFavorites = function(cat_sysid) {
        c.server.get({
            method: "removefavorite"
        });
        c.data.addOrRemove = false;
    };



    c.quantity = c.data.quantity ? c.data.quantity + "" : "1";
    c.mandatory = [];
    $scope.stickyHeaderTop = '0px';
    c.widget._debugContextMenu = [
        [i18n.getMessage("Open") + " sc_cat_item", function() {
            var item = c.data.sc_cat_item;
            $window.open("/sp_config?id=form&amp;table=" + item.table + "&amp;sys_id=" + item.sys_id);
        }]
    ];

    spUtil.recordWatch($scope, "sys_attachment", "table_sys_id=" + $scope.data._generatedItemGUID, function(response, data) {
        $scope.attachmentHandler.getAttachmentList();
        if (response.data) {
            var options = {};
            options.operation = response.data.operation;
            options.filename = response.data.display_value;
            options.state = (response.data.record &amp;&amp; response.data.record.state) ? response.data.record.state.value : "";
            if (options.operation === 'update' &amp;&amp; options.state === 'not_available')
                $rootScope.$broadcast("$$uiNotification", {
                    type: 'error',
                    message: i18n.getMessage('Upload file scan failed').withValues([options.filename])
                });
        }
    });

    $rootScope.$on('spModel.gForm.rendered', function() {
        $timeout(function() {
            spAtf.init().then(function(atf) {
                $scope._atf = atf;
                atf.expose('catalog_util', catalogUtil);
            });
        }, 10);
    });

    //	ATF helper object
    var catalogUtil = {
        updateGform: function() {
            $scope._atf.expose('g_form', spAtf.augmentForm(g_form));
        },

        addRow: function(fieldId, timeoutInMS) {
            if (timeoutInMS &lt;= 0)
                timeoutInMS = 1000;
            var deferred = $q.defer();
            $scope.$broadcast("$sp.sc_multi_row.create_row", fieldId, $scope.data.sc_cat_item.sys_id);
            $scope.$on('spModel.gForm.initialized', function(e, gFormInstance) {
                if (gFormInstance.getSysId() == fieldId)
                    deferred.resolve();
            });
            $timeout(function() {
                deferred.reject();
            }, timeoutInMS);
            return deferred.promise;
        },

        submit: function(timeout) {
            var deferred = $q.defer();
            $scope.triggerOnSubmit(timeout);
            var cleanup = $scope.$on('$sp.service_catalog.form_submit_failed', function() {
                cleanup();
                deferred.reject("Can't submit form");
            });
            if (g_form) {
                g_form.$private.events.on('submitted', function() {
                    var cleanUp = $scope.$on('$sp.sc_cat_item.submitted', function(o, result) {
                        $timeout(function() {
                            cleanUp();
                            deferred.resolve(result);
                        }, 10);
                    });
                });
            } else
                deferred.reject('g_form not initialized');

            return deferred.promise;
        },

        addToCart: function(timeout) {
            var defer = $q.defer();
            $scope.triggerAddToCart(timeout);
            var cleanup = $scope.$on('$sp.service_catalog.form_submit_failed', function() {
                cleanup();
                defer.reject("Can't submit form");
            });
            if (g_form) {
                g_form.$private.events.on('submitted', function() {
                    var cleanup = $scope.$on('$sp.sc_cat_item.add_to_cart', function(o, result) {
                        $timeout(function() {
                            cleanup();
                            defer.resolve(result);
                        }, 10);
                    });
                });
            } else
                defer.reject('g_form not initialized');
            return defer.promise;
        },

        submitCatItem: function(timeout) {
            var defer = $q.defer();
            $scope.triggerOnSubmit(timeout);
            var cleanup = $scope.$on('$sp.service_catalog.form_submit_failed', function() {
                cleanup();
                defer.reject("Can't submit form");
            });
            if (g_form) {
                g_form.$private.events.on('submitted', function() {
                    if ($scope.data.sys_properties.twostep &amp;&amp; $scope.data.sc_cat_item.request_method != "submit") {
                        defer.resolve();
                    } else { //When not two step, if reached this step means the form validation is done and it is the item submission that should be monitored
                        if (cleanup &amp;&amp; typeof cleanup === 'function')
                            cleanup();

                        var cleanUp = $scope.$on('$sp.sc_cat_item.submitted', function(o, result) {
                            $timeout(function() {
                                cleanUp();
                                result.single_step = true;
                                defer.resolve(result);
                            }, 10);
                        });

                        var failedSubmitCleanUp = $scope.$on('$sp.sc_cat_item.submit_failed', function() {
                            failedSubmitCleanUp();
                            defer.reject("Can't submit form");
                        });
                    }
                });
            } else
                defer.reject('g_form not initialized');

            return defer.promise;
        },

        setQuantity: function(quantity) {
            if ($scope.c.data.sc_cat_item.sys_class_name !== "sc_cat_item_producer" &amp;&amp; $scope.c.data.sc_cat_item.sys_class_name !== "std_change_record_producer") {
                $scope.c.quantity = quantity;
                $scope.$apply();
            }
        },

        getQuantity: function() {
            return $scope.c.quantity;
        },

        getPrice: function() {
            var obj = {};
            obj.price = $scope.data.sc_cat_item.price_display;
            obj.recurring_price = $scope.data.sc_cat_item.recurring_price_display;
            obj.recurring_frequency = $scope.data.sc_cat_item.recurring_frequency;
            return obj;
        }
    }

    c.showAddCartBtn = function() {
        return !$scope.submitted &amp;&amp;
            c.options.show_add_cart_button &amp;&amp;
            c.data.sc_cat_item.sys_class_name !== "sc_cat_item_producer" &amp;&amp;
            c.data.sc_cat_item.sys_class_name !== "std_change_record_producer" &amp;&amp;
            !c.data.sc_cat_item.no_cart &amp;&amp; !c.data.is_cart_item;
    }

    c.showPrice = function() {
        return c.data.showPrices &amp;&amp;
            ((c.data.sc_cat_item.price ? true : false) ||
                (c.data.sc_cat_item.recurring_price ? true : false));
    }

    c.showDeliveryTime = function() {
        return !c.data.hideDeliveryTime &amp;&amp;
            !c.data.sc_cat_item.no_delivery_time &amp;&amp;
            (c.data.sc_cat_item.estimated_delivery_time ? true : false);
    }
    c.showQuantitySelector = function() {
        // Following if block is code for hard-setting an aria-label on the quantity select box
        // for displaying the label "quantity"
        if ($('#catItemQuantity') != null) {
            var quantityElement = $('#catItemQuantity');
            quantityElement.prev().find(".select2-offscreen").removeAttr("aria-labelledby").attr("aria-label", "Quantity " + c.quantity);
        }

        return c.data.sc_cat_item.sys_class_name !== "sc_cat_item_producer" &amp;&amp;
            c.data.sc_cat_item.sys_class_name !== "std_change_record_producer" &amp;&amp;
            !c.data.sc_cat_item.no_quantity &amp;&amp; !c.data.sc_cat_item.read_only_quantity &amp;&amp;
            (c.data.sc_cat_item.cart_guide === undefined || c.data.sc_cat_item.cart_guide === null) &amp;&amp;
            (!c.data.sc_cat_item.no_order_now || !c.data.sc_cat_item.no_cart);
    }
    c.showOrderNowButton = function() {
        return !$scope.data.is_cart_item &amp;&amp; (c.data.sc_cat_item.use_sc_layout || !c.data.sc_cat_item.no_order_now);
    }
    c.showAddToWishlist = function() {
        return !$scope.submitted &amp;&amp;
            (c.data.showWishlist &amp;&amp;
                !c.data.sc_cat_item.no_wishlist &amp;&amp;
                !c.data.is_cart_item &amp;&amp;
                c.options.show_add_to_wishlist_button === 'true');
    }
    c.allowOrder = function() {
        if (c.data.sc_cat_item.use_sc_layout)
            return true;
        if (c.data.sc_cat_item.no_order)
            return false;
        if (c.data.sc_cat_item.no_order_now &amp;&amp; c.data.sc_cat_item.no_cart)
            return false;
        return true;
    }

    c.showCart = function() {
        return c.data.can_create_cart_item &amp;&amp; (c.data.is_cart_item ||
            c.showPrice() || c.showDeliveryTime() || c.showAddCartBtn() ||
            c.showOrderNowButton() || c.showAddToWishlist());
    }

    c.hideCartMsg = function() {
        $scope.data.showMsg = false;
    }

    c.showAttachments = function() {
        return !$scope.submitted &amp;&amp;
            !c.data.sc_cat_item.no_attachments &amp;&amp;
            c.data.sc_cat_item.sys_class_name !== "std_change_record_producer";
    };
    $scope.$on('dialog.upload_too_large.show', function(e) {
        $log.error($scope.m.largeAttachmentMsg);
        spUtil.addErrorMessage($scope.m.largeAttachmentMsg);
    });
    $scope.m = $scope.data.msgs;
    var ah = $scope.attachmentHandler = new nowAttachmentHandler(setAttachments, appendError);

    function appendError(error) {
        spUtil.addErrorMessage(error.msg + error.fileName);
    }
    ah.setParams($scope.data._attachmentTable, $scope.data._generatedItemGUID, 1024 * 1024 * $scope.data.maxAttachmentSize);

    function setAttachments(attachments, action) {
        if (!angular.equals($scope.attachments, attachments))
            $scope.attachments = attachments;
        if (action === "added") {
            $scope.setFocusToAttachment();
            if ($scope.attachments.length &gt; 0)
                $scope.data.sc_cat_item.attachment_submitted = true;
        }
        if (action === "renamed")
            spAriaUtil.sendLiveMessage($scope.m.renameSuccessMsg);
        if (action === "deleted") {
            spAriaUtil.sendLiveMessage($scope.m.deleteSuccessMsg);
            if ($scope.attachments.length == 0)
                $scope.data.sc_cat_item.attachment_submitted = false;
        }
        $scope.data.sc_cat_item.attachment_action_in_progress = false;
        spUtil.get($scope, {
            action: "from_attachment"
        });
    }
    $scope.attachmentHandler.getAttachmentList();
    $scope.confirmDeleteAttachment = function(attachment) {
        if (c.isNative) {
            if (confirm($scope.data.msgs.delete_attachment)) {
                $scope.data.sc_cat_item.attachment_action_in_progress = true;
                $scope.attachmentHandler.deleteAttachment(attachment);
                $scope.setFocusToAttachmentButton();
            }
        } else {
            spModal.confirm($scope.data.msgs.delete_attachment).then(function() {
                $scope.data.sc_cat_item.attachment_action_in_progress = true;
                $scope.attachmentHandler.deleteAttachment(attachment);
                $scope.setFocusToAttachmentButton();
            });
        }
    }
    $scope.dismissWishListMessage = function() {
        $scope.is_update_wishlist = false;
    }

    if ($scope.data.sc_cat_item) {

        /*if ($scope.data.sc_cat_item.content_type == 'external') {
        	$window.location.href = $scope.data.sc_cat_item.url;
        	return;
        }
		
        if ($scope.data.sc_cat_item.content_type == 'kb') {
        	$location.search("id=kb_article&amp;sys_id=" + $scope.data.sc_cat_item.kb_article);
        	return;
        }*/

        $scope.data.sc_cat_item.trusted_description = $sce.trustAsHtml($scope.data.sc_cat_item.description);
        if (!$scope.data.sc_cat_item._fields || angular.equals($scope.data.sc_cat_item._fields, {}))
            $scope.data.no_fields = true;
        if ($scope.data.sc_cat_item.sys_class_name !== "sc_cat_item_producer" &amp;&amp;
            $scope.data.sc_cat_item.sys_class_name !== "std_change_record_producer") {
            if ($scope.data.sc_cat_item.request_method == "request")
                $scope.submitButtonMsg = $scope.m.requestMsg;
            else if ($scope.data.sc_cat_item.request_method == "submit")
                $scope.submitButtonMsg = $scope.m.submitMsg;
            else
                $scope.submitButtonMsg = $scope.m.orderNowMsg;
        } else {
            if ($scope.data.sc_cat_item.sys_class_name == "sc_cat_item_producer" &amp;&amp; $scope.data.record_producer_label)
                $scope.submitButtonMsg = $scope.data.record_producer_label;
            else
                $scope.submitButtonMsg = $scope.m.submitMsg;
        }

        // Breadcrumbs
        if (!$scope.data.categories)
            $scope.data.categories = [];
        $scope.data.categories.forEach(function(category, index, categories) {
            categories[index].url = category.url + '&amp;catalog_id=' + $scope.data.catalog_id;
        });
        if ($scope.data.is_wishlist_item) {
            $scope.data.categories.unshift({
                label: $scope.m.wishlistMsg,
                url: '?id=sc_wishlist'
            });
            $scope.data.categories.push({
                label: $scope.data.sc_cat_item.name,
                url: '#'
            });
        } else if ($scope.data.is_cart_item) {
            $scope.data.categories.unshift({
                label: $scope.m.cartMsg,
                url: '?id=sc_cart'
            });
            $scope.data.categories.push({
                label: $scope.data.sc_cat_item.name,
                url: '#'
            });
        } else if ($scope.data.categories.length &gt; 0) {
            $scope.data.categories.unshift({
                label: $scope.data.sc_catalog || $scope.page.title,
                url: '?id=' + $scope.data.sc_category_page + "&amp;catalog_id=" + $scope.data.catalog_id
            });
            $scope.data.categories.push({
                label: $scope.data.sc_cat_item.name,
                url: '#'
            });
            if ($scope.data.all_catalog_msg) {
                $scope.data.categories.unshift({
                    label: $scope.data.all_catalog_msg,
                    url: '?id=' + $scope.data.sc_category_page + "&amp;catalog_id=-1"
                });
            }
        } else {
            $scope.data.categories.push({
                label: $scope.data.sc_cat_item.name,
                url: '#'
            });
        }

        $timeout(function() {
            $scope.$emit('sp.update.breadcrumbs', $scope.data.categories);
        });
        spUtil.setSearchPage('sc');

        // Set Title in Mobile
        if (c.isNative)
            cabrillo.viewLayout.setTitle($scope.data.sc_cat_item.name);

        // Set Title in Workspace
        else if ($scope.options.isServiceWorkspace)
            $window.postMessage({
                msg: 'CATALOG_ITEM_SET_TITLE',
                title: $scope.data.sc_cat_item.name
            }, $location.origin);

    } else {
        var notFoundBC = [{
            label: $scope.page.title,
            url: '?id=' + $scope.data.sc_catalog_page
        }];
        $timeout(function() {
            $scope.$emit('sp.update.breadcrumbs', notFoundBC);
        });
        spUtil.setSearchPage('sc');
    }
    c.getItemId = function() {
        return $scope.data.sc_cat_item ? $scope.data.sc_cat_item.sys_id : -1;
    };

    function showNativeMobileButtons() {
        if ($scope.data.sc_cat_item.sys_class_name == 'sc_cat_item_content')
            return;
        if (c.isNative) {
            cabrillo.viewLayout.setTitle($scope.data.sc_cat_item.name);
            if ($scope.data.sc_cat_item.sys_class_name == "sc_cat_item_producer" || $scope.data.sc_cat_item.sys_class_name == "std_change_record_producer")
                addRPButton();
            else if ($scope.data.is_cart_item)
                addUpdateButton();
            else
                addOrderButtons();
        }
    }

    function nativeGoBackToCart() {
        cabrillo.viewLayout.setNavigationBarButtons();
        var button = [{
            imageName: 'back',
            buttonStyle: cabrillo.viewLayout.REPLACE_BACK_BUTTON_STYLE,
            enabled: true
        }];

        cabrillo.viewLayout.setNavigationBarButtons(button, function() {
            $location.search('id=sc_cart');
        });
    }

    function displayNativeButtons() {
        if (c.isNative &amp;&amp; !$scope.orderConfirmation) {
            cabrillo.viewLayout.setTitle($scope.data.sc_cat_item.name);
            showNativeMobileButtons();
            cabrillo.viewLayout.showBackButton();

            if ($scope.data.is_cart_item) {
                cabrillo.viewLayout.hideBackButton();
                cabrillo.viewLayout.setNavigationBarButtons();
                nativeGoBackToCart();
            }
        }
    }

    var mespClosePopupUnregister = $rootScope.$on("mesp.popup.close", function() {
        // Timeout is to give a better user experience otherwise when this popup opens,
        // the cabrillo buttons will be displayed immediately giving a bad user experience.
        $timeout(function() {
            displayNativeButtons();
        });
    });

    var mespOpenPopupUnregister = $rootScope.$on("mesp.popup.open", function() {
        // Timeout is to give a better user experience otherwise when this popup opens,
        // the cabrillo buttons will be displayed immediately giving a bad user experience.
        $timeout(function() {
            removeCabrilloButtons();
        });
    });

    if ($scope.options.isServiceWorkspace &amp;&amp; $window.frameElement) {
        var workspaceParams = {};
        workspaceParams.sysparm_parent_table = $window.frameElement.getAttribute('parent-table') || $window.frameElement.dataParentTable;
        workspaceParams.sysparm_parent_sys_id = $window.frameElement.getAttribute('parent-sys-id') || $window.frameElement.dataParentSysId;
        //Extract the query if there is one passed in
        var urlParams = new URLSearchParams($window.frameElement.src);
        var params = Object.fromEntries(urlParams);
        if (params.query)
            workspaceParams.target_query = params.query;
        $scope.data.workspaceParams = workspaceParams;
    }

    var g_form;
    $scope.$on('spModel.gForm.initialized', function(e, gFormInstance) {
        if (gFormInstance.getSysId() != -1 &amp;&amp; gFormInstance.getSysId() != c.getItemId())
            return;
        g_form = gFormInstance;
        spSCNavStateManager.register(g_form);
        spSCNavStateManager.isNative(c.isNative);
        spSCNavStateManager.isPreview(c.data.isPreview);

        if (c.isNative) {
            cabrillo.viewLayout.setTitle($scope.data.sc_cat_item.name);
            $rootScope.$on('spModel.gForm.showNativeMobileButtons', displayNativeButtons);
        }

        if ($scope.setDefaultValue &amp;&amp; c.options.requested_for_id &amp;&amp; c.options.requested_for_display &amp;&amp; $scope.data.sc_cat_item.requested_for_variable_name) {
            $scope.setDefaultValue = false;
            $scope.data.sc_cat_item.hideAlsoRequestFor = true;
            setValueInNextDigestCycle(g_form, c.options.requested_for_id, c.options.requested_for_display);
        } else if ($scope.setDefaultValue &amp;&amp; $scope.data.workspaceParams &amp;&amp; $scope.data.workspaceParams.sysparm_parent_table &amp;&amp; $scope.data.workspaceParams.sysparm_parent_sys_id) {
            $scope.setDefaultValue = false;
            $scope.data.sc_cat_item.hideAlsoRequestFor = true;
            $scope.server.get({
                action: 'get_requested_for',
                parentParams: $scope.data.workspaceParams
            }).then(function(response) {
                if (response.data.requested_for) {
                    $scope.data.requested_for = response.data.requested_for;
                    setValueInNextDigestCycle(g_form, response.data.requested_for.id, response.data.requested_for.displayValue);
                }
            });
        }

        $timeout(function() {
            $rootScope.$emit('spModel.gForm.rendered', g_form);
            showNativeMobileButtons();
        }, 175);

        // This runs after all onSubmit scripts have executed
        g_form.$private.events.on('submitted', function() {
            cleanFailedSubmit();
            $scope.submitting = true;
            if ($scope.data.sc_cat_item.item_action === "order")
                getOne();
            else if ($scope.data.sc_cat_item.item_action === "add_to_cart")
                addToCart();
            else if ($scope.data.sc_cat_item.item_action == "update_cart")
                updateCart();
        });
    });

    function setValueInNextDigestCycle(g_form, value, displayValue) {
        $timeout(function() {
            g_form.setValue($scope.data.sc_cat_item.requested_for_variable_name, value, displayValue);
        });
    }

    function getVarData(fields) {
        var reqData = {};
        for (var obj in fields)
            reqData[fields[obj].name] = fields[obj].value;
        return reqData;
    }

    function addLink(url, msg) {
        return "&lt;a class='link alert-link' href=" + url + "&gt;" + msg + "&lt;/a&gt;";
    }

    function getAlsoRequestForValue(fields) {
        if ($scope.data.sc_cat_item.requested_for_variable_name)
            return fields[$scope.data.sc_cat_item.requested_for_variable_name].also_request_for_value;
    }

    $scope.triggerAddToWishlist = function() {
        $scope.submitting = true;
        var alsoRequestFor = getAlsoRequestForValue($scope.data.sc_cat_item._fields);
        if (alsoRequestFor) {
            spModal.confirm($scope.m.addToWishlistConfirmMsg).then(addToWishlist, function() {
                $scope.submitting = false;
            });
        } else
            addToWishlist();
    }

    function addToWishlist() {
        spAriaUtil.sendLiveMessage($scope.m.submittingMsg);
        $scope.m.actionMsg = $scope.data.is_wishlist_item ? $scope.m.wishlistUpdateMsg : $scope.m.wishlistAddMsg;
        $scope.m.actionMsg += addLink('?id=sc_wishlist', $scope.m.viewWishListMsg);
        $scope.m.actionMsg += '&lt;i class="fa fa-close pull-right pointer close-notification" aria-label="${Close Notification}" tabindex="0" ng-click="c.hideCartMsg()"/&gt;';
        $scope.m.actionMsg = $sce.trustAsHtml($scope.m.actionMsg);
        $scope.is_update_wishlist = false;
        spScUtil.addToWishlist($scope.data.sc_cat_item.sys_id, c.quantity, getVarData($scope.data.sc_cat_item._fields), $scope.data._generatedItemGUID).then(function(response) {
            var cartItemId = "";
            for (var i = 0; i &lt; response.data.result.items.length; i++) {
                var item = response.data.result.items[i];
                if (item.catalog_item_id === $scope.data.sc_cat_item.sys_id) {
                    cartItemId = item.cart_item_id;
                    break;
                }
            }
            $rootScope.$broadcast("$sp.service_catalog.wishlist.add_item");
            $rootScope.$broadcast("$sp.service_catalog.wishlist.update", cartItemId);
            if (!$scope.data.is_wishlist_item)
                $scope.clearAttachmentFields();
            g_form.$private.userState.clearModifiedFields();
            $scope.data.showMsg = $scope.is_update_wishlist = true;
            $scope.data.is_wishlist_item = true;
            $scope.data.sc_cat_item.isCartItem = true;
            $scope.data.show_wishlist_msg = false;
            $scope.submitting = false;
            spUtil.scrollTo('#sc_cat_item', 300);
        }, function(response) {
            handleFailure(response);
        });
    }

    $scope.clearAttachmentFields = function() {
        var fields = $scope.data.sc_cat_item._fields;
        for (var x in fields) {
            if (fields[x].type == 'sc_attachment')
                g_form.clearValue(fields[x].name);
        }
    }

    $scope.triggerAddToCart = function(timeout) {
        $scope.data.sc_cat_item.item_action = "add_to_cart";
        $scope.data.sc_cat_item.quantity = c.quantity;
        $scope.$evalAsync(function() {
            if (g_form &amp;&amp; !$scope.submitting) {
                $scope.submitting = true;
                spAriaUtil.sendLiveMessage($scope.m.submittingMsg);
                if (!spScUtil.isRegexDone($scope.data.sc_cat_item._fields)) {
                    $scope.submitting = false;
                    $scope.validating = true;
                } else if (!g_form.submit()) {
                    timeout = timeout || 1000;
                    $timeout(function() {
                        $scope.$broadcast('$sp.service_catalog.form_submit_failed', {
                            action_name: 'submit'
                        });
                    }, timeout);
                }
                if (!$scope.data.is_wishlist_item)
                    window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Cart' + webAnalyticsMsgSuffix, 'Catalog Item Added to Cart', 0, 0);
                $scope.clearAttachmentFields();
            }
        })
    }

    $scope.triggerUpdateCart = function(timeout) {
        $scope.data.sc_cat_item.item_action = "update_cart";
        $scope.data.sc_cat_item.quantity = c.quantity;
        $scope.$evalAsync(function() {
            if (g_form &amp;&amp; !$scope.submitting) {
                $scope.submitting = true;
                if (!spScUtil.isRegexDone($scope.data.sc_cat_item._fields)) {
                    $scope.submitting = false;
                    $scope.validating = true;
                } else if (!g_form.submit()) {
                    timeout = timeout || 1000;
                    $timeout(function() {
                        $scope.$broadcast('$sp.service_catalog.form_submit_failed', {
                            action_name: 'submit'
                        });
                    }, timeout);
                }
            }
            window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Cart' + webAnalyticsMsgSuffix, 'Catalog Cart Updated', 0, 0);
        })
        return false;
    }

    $scope.triggerOnSubmit = function(timeout) {
        if (c.data.isPreview) return;

        $scope.data.sc_cat_item.item_action = "order";
        $scope.data.sc_cat_item.quantity = c.quantity;
        $scope.$evalAsync(function() {
            if (g_form &amp;&amp; !$scope.submitting) {
                $scope.submitting = true;
                spAriaUtil.sendLiveMessage($scope.m.submittingMsg);
                if (!spScUtil.isRegexDone($scope.data.sc_cat_item._fields)) {
                    $scope.submitting = false;
                    $scope.validating = true;
                } else if (!g_form.submit()) {
                    timeout = timeout || 1000;
                    $timeout(function() {
                        $scope.$broadcast('$sp.service_catalog.form_submit_failed', {
                            action_name: 'submit'
                        });
                    }, timeout);
                }
            }
        })
        return false;
    }

    function setFieldsReadonly() {
        var allFields = g_form.getFieldNames();
        for (var fieldName in allFields) {
            g_form.setReadonly(allFields[fieldName], true);
        }
    }
    // order / create request
    function getOne() {
        var requested_for_id = "";
        var requested_for_display = "";
        if ($scope.data.requested_for &amp;&amp; $scope.data.requested_for.id &amp;&amp; $scope.data.requested_for.displayValue) {
            requested_for_id = $scope.data.requested_for.id;
            requested_for_display = $scope.data.requested_for.displayValue;
        }
        //Required to pass as payload for usage as embeddedWidget
        var embeddedWidgetOptions = {
            "auto_redirect": "true",
            "requested_for_id": requested_for_id,
            "requested_for_display": requested_for_display
        };
        if ($scope.data.sc_cat_item.sys_class_name != "sc_cat_item_producer" &amp;&amp; $scope.data.sc_cat_item.sys_class_name != "std_change_record_producer") {
            if ($scope.data.sys_properties.twostep &amp;&amp; $scope.data.sc_cat_item.request_method != "submit") {
                var payload = {
                    cart: 'cart_' + $scope.data.sc_cat_item.sys_id,
                    itemDetails: {
                        sys_id: $scope.data.sc_cat_item.sys_id,
                        name: $scope.data.sc_cat_item.name,
                        sys_class_name: $scope.data.sc_cat_item.sys_class_name,
                        quantity: $scope.data.sc_cat_item.quantity,
                        fields: getVarData($scope.data.sc_cat_item._fields),
                        newRecordID: $scope.data._generatedItemGUID,
                        request_method: $scope.data.sc_cat_item.request_method
                    },
                    action: $scope.data.is_wishlist_item ? "order_wishlist_item" : "order_item",
                    workspaceParams: $scope.data.workspaceParams
                };
                for (var embeddedOption in embeddedWidgetOptions) {
                    payload[embeddedOption] = c.options[embeddedOption] || embeddedWidgetOptions[embeddedOption];
                }
                $scope.server.get(payload).then(function(response) {
                    var orderItemModalCtrl;
                    var unregister = $scope.$on('$sp.service_catalog.cart.cancel_order', function() {
                        $scope.submitting = false;
                        $scope.orderConfirmation = false;
                        registerSubmitListeners();
                        $timeout(function() {
                            orderItemModalCtrl.close();
                            displayNativeButtons();
                        });
                    });
                    var closeModalOnSubmit = $scope.$on('$sp.service_catalog.cart.submitted', function() {
                        orderItemModalCtrl.close();
                        setFieldsReadonly();
                        $scope.submitted = true;
                    });
                    var orderItemModal = angular.copy(response.data.orderItemModal);
                    orderItemModal.options.afterOpen = function(ctrl) {
                        orderItemModalCtrl = ctrl;
                    };
                    orderItemModal.options.afterClose = function() {
                        unregister();
                        closeModalOnSubmit();
                        c.orderItemModal = null;
                        orderItemModalCtrl = null;
                    };
                    c.orderItemModal = orderItemModal;
                });
                $scope.orderConfirmation = true;
            } else {
                var additionalParms = {};
                if ($scope.data.workspaceParams) {
                    additionalParms.sysparm_parent_sys_id = $scope.data.workspaceParams.sysparm_parent_sys_id;
                    additionalParms.sysparm_parent_table = $scope.data.workspaceParams.sysparm_parent_table;
                }
                additionalParms.engagement_channel = $scope.data.engagement_channel;
                additionalParms.referrer = $scope.data.referrer;
                $scope.submitting = true;
                showPageLoader();
                addOrderButtons();
                if ($scope.data.is_wishlist_item) {

                    spScUtil.orderWishlistedItem($scope.data.sc_cat_item.sys_id, $scope.data.sc_cat_item.quantity, getVarData($scope.data.sc_cat_item._fields), $scope.data._generatedItemGUID, additionalParms).then(function(response) {
                        $scope.server.get({
                            action: 'log_order_one_step',
                            itemDetails: {
                                sys_id: $scope.data.sc_cat_item.sys_id,
                                name: $scope.data.sc_cat_item.name,
                                sys_class_name: $scope.data.sc_cat_item.sys_class_name
                            }
                        });
                        var a = response.data.result;
                        $scope.$emit("$$uiNotification", a.$$uiNotification);
                        $scope.$emit("$sp.sc_cat_item.submitted", a);
                        $rootScope.$broadcast("$sp.service_catalog.wishlist.update");
                        if (c.options.auto_redirect == 'false') {
                            setFieldsReadonly();
                            $scope.submitting = false;
                            $scope.submitted = true;
                            $rootScope.$broadcast("$sp.service_catalog.cart.submitted", true);
                            spUtil.addInfoMessage($scope.m.requestSubmitted);
                            return;
                        } else
                            $location.search('id=sc_request&amp;is_new_order=true&amp;table=sc_request&amp;sys_id=' + a.sys_id);
                    });
                } else {
                    spScUtil.orderNow($scope.data.sc_cat_item.sys_id, $scope.data.sc_cat_item.quantity, getVarData($scope.data.sc_cat_item._fields), $scope.data._generatedItemGUID, additionalParms, getAlsoRequestForValue($scope.data.sc_cat_item._fields)).then(function(response) {
                        $scope.server.get({
                            action: 'log_order_one_step',
                            itemDetails: {
                                sys_id: $scope.data.sc_cat_item.sys_id,
                                name: $scope.data.sc_cat_item.name,
                                sys_class_name: $scope.data.sc_cat_item.sys_class_name
                            }
                        });
                        var a = response.data.result;
                        $scope.$emit("$$uiNotification", a.$$uiNotification);
                        $scope.$emit("$sp.sc_cat_item.submitted", a);
                        if (c.options.auto_redirect == 'false') {
                            setFieldsReadonly();
                            $scope.submitting = false;
                            $scope.submitted = true;
                            $rootScope.$broadcast("$sp.service_catalog.cart.submitted", true);
                            spUtil.addInfoMessage($scope.m.requestSubmitted);
                            return;
                        } else if (!$scope._atf) {
                            removeCabrilloButtons();
                            $location.search('id=sc_request&amp;is_new_order=true&amp;table=sc_request&amp;sys_id=' + a.sys_id);
                        }
                    }, function(response) {
                        $scope.$emit('$sp.sc_cat_item.submit_failed');
                        handleFailure(response);
                    });
                }
            }
        } else {
            postCatalogFormRequest().then(function(response) {
                $scope.server.get({
                    action: 'log_request_producer',
                    itemDetails: {
                        sys_id: $scope.data.sc_cat_item.sys_id,
                        name: $scope.data.sc_cat_item.name,
                        sys_class_name: $scope.data.sc_cat_item.sys_class_name
                    }
                });
                var a = response.data.result;
                if (!$scope.options.isServiceWorkspace)
                    $scope.$emit("$$uiNotification", a.$$uiNotification);
                $scope.$emit("$sp.sc_cat_item.submitted", a);
                if ($scope.data.is_wishlist_item)
                    $rootScope.$broadcast("$sp.service_catalog.wishlist.update");
                if (c.options.auto_redirect == 'false') {
                    setFieldsReadonly();
                    $scope.submitted = true;
                    $scope.submitting = false;
                    $scope.submitButtonMsg = $scope.m.submittedMsg;
                } else if (!$scope._atf)
                    handleRedirect(a.number, a.table, a.sys_id, a.redirect_to, a.redirect_portal_url);

            });
        }
    }

    function addToCart() {
        $scope.server.get({
            action: 'log_request_cart',
            itemDetails: {
                sys_id: $scope.data.sc_cat_item.sys_id,
                name: $scope.data.sc_cat_item.name,
                sys_class_name: $scope.data.sc_cat_item.sys_class_name
            }
        });

        postCatalogFormRequest().then(function(response) {
            $rootScope.$broadcast("$sp.service_catalog.cart.add_item");
            $rootScope.$broadcast("$sp.service_catalog.cart.update");
            $scope.$emit("$sp.sc_cat_item.add_to_cart", $scope.data._generatedItemGUID);
            g_form.$private.userState.clearModifiedFields();
            if ($scope.data.is_wishlist_item) {
                $rootScope.$broadcast("$sp.service_catalog.wishlist.update");
                $scope.data.is_wishlist_item = false;
                $scope.data.sc_cat_item.isCartItem = false;
                if ($location.$$search.edit === "wishlist") {
                    $location.search("id=sc_wishlist");
                    return;
                }
            }
            c.status = i18n.getMessage("Added item to shopping cart");
            var cartResponse = response;
            $scope.server.get({
                action: 'init_item'
            }).then(function(response) {
                $scope.data._generatedItemGUID = response.data._generatedItemGUID;
                $scope.data.sc_cat_item._attachmentGUID = response.data._generatedItemGUID;
                ah.setParams($scope.data._attachmentTable, $scope.data._generatedItemGUID, 1024 * 1024 * $scope.data.maxAttachmentSize);
                $scope.attachmentHandler.getAttachmentList();
                $scope.attachments = [];
                $scope.data.sc_cat_item.attachment_action_in_progress = false;
                $scope.data.sc_cat_item.attachment_submitted = false;

                if (!c.isNative) {
                    $scope.m.actionMsg = $scope.m.cartAddMsg + addLink('?id=sc_cart', $scope.m.viewCartMsg);
                    $scope.m.actionMsg += '&lt;i class="fa fa-close pull-right pointer close-notification" aria-label="${Close Notification}" tabindex="0" ng-click="c.hideCartMsg()"/&gt;';
                    $scope.m.actionMsg = $sce.trustAsHtml($scope.m.actionMsg);
                    $scope.data.showMsg = true;
                } else {
                    cabrillo.message.showMessage(cabrillo.message.SUCCESS_MESSAGE_STYLE, c.status);
                    if (cartResponse &amp;&amp; cartResponse.data &amp;&amp; cartResponse.data.result) {
                        var items = cartResponse.data.result.items || [];
                        $scope.showCabrilloCart = true;
                        $scope.cartItemCount = items.length;
                        showCartButton();
                    }
                }
                $scope.submitting = false;
                hidePageLoader();
                cleanFailedSubmit = $scope.$on('$sp.service_catalog.form_submit_failed', function() {
                    $scope.submitting = false;
                });
                spUtil.scrollTo('#sc_cat_item', 300);
            });
        });
    }

    function updateCart() {
        postCatalogFormRequest().then(function(response) {
            g_form.$private.userState.clearModifiedFields();
            c.status = i18n.getMessage("Updated Item to shopping cart");
            if (c.isNative)
                cabrillo.message.showMessage(cabrillo.message.SUCCESS_MESSAGE_STYLE, c.status);
            removeCabrilloButtons();
            $location.search('id=sc_cart');
        })
    }

    function postCatalogFormRequest() {
        $scope.submitting = true;
        showPageLoader();
        if ($scope.data.sc_cat_item.item_action !== "add_to_cart")
            addOrderButtons();

        var additionalParms = {};
        if ($scope.data.workspaceParams) {
            mergeMap($scope.data.workspaceParams, additionalParms);
        }
        additionalParms.engagement_channel = $scope.data.engagement_channel;
        additionalParms.referrer = $scope.data.referrer;

        if ($scope.data.is_wishlist_item) {
            $scope.is_update_wishlist = false;
            $scope.data.show_wishlist_msg = false;
            if ($scope.data.sc_cat_item.sys_class_name === "sc_cat_item_producer")
                return spScUtil.submitWishlistedProducer($scope.data.sc_cat_item.sys_id, getVarData($scope.data.sc_cat_item._fields), $scope.data._generatedItemGUID, additionalParms);
            else if ($scope.data.sc_cat_item.item_action === "add_to_cart") {
                if ($scope.data.sc_cat_item.sys_class_name == 'sc_cat_item_guide')
                    window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog Cart" + webAnalyticsMsgSuffix, "Order Guide Added to Cart", 0, 0);
                else if ($scope.data.sc_cat_item.sys_class_name == 'sc_cat_item_producer')
                    window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog Cart" + webAnalyticsMsgSuffix, "Record Producer Added to Cart", 0, 0);
                else if ($scope.data.sc_cat_item.sys_class_name == "sc_cat_item" || $scope.data.sc_cat_item.sys_class_name == "pc_hardware_cat_item" || $scope.data.sc_cat_item.sys_class_name == "pc_software_cat_item")
                    window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog Cart", "Catalog Item Added to Cart" + webAnalyticsMsgSuffix, 0, 0);
                return spScUtil.addWishlistedItemToCart($scope.data.sc_cat_item.sys_id, $scope.data.sc_cat_item.quantity, getVarData($scope.data.sc_cat_item._fields), $scope.data._generatedItemGUID).then(null, function(response) {
                    return handleFailure(response);
                });
            }
        } else if ($scope.data.is_cart_item) {
            return spScUtil.updateCart($scope.data._generatedItemGUID, $scope.data.sc_cat_item.quantity, getVarData($scope.data.sc_cat_item._fields)).then(null, function(response) {
                return handleFailure(response);
            });
        } else if ($scope.data.sc_cat_item.sys_class_name === "sc_cat_item_producer") {
            return spScUtil.submitProducer($scope.data.sc_cat_item.sys_id, getVarData($scope.data.sc_cat_item._fields), $scope.data._generatedItemGUID, additionalParms).then(null, function(response) {
                return handleFailure(response);
            });
        } else if ($scope.data.sc_cat_item.sys_class_name === "std_change_record_producer") {
            return spScUtil.submitStdChgProducer($scope.data.sc_cat_item.sys_id, $scope.data.stdChg.twoStep, $scope.data.stdChg.currentVersion, $scope.data._generatedItemGUID, $scope.portal.url_suffix, additionalParms, $scope.data.stdChg.chgModel);
        } else if ($scope.data.sc_cat_item.item_action === "add_to_cart") {
            return spScUtil.addToCart($scope.data.sc_cat_item.sys_id, $scope.data.sc_cat_item.quantity, getVarData($scope.data.sc_cat_item._fields), $scope.data._generatedItemGUID, getAlsoRequestForValue($scope.data.sc_cat_item._fields)).then(null, function(response) {
                return handleFailure(response);
            });
        }
    }
    // spModel populates mandatory - hasMandatory is called by the submit button
    $scope.hasMandatory = function() {
        return c.mandatory &amp;&amp; c.mandatory.length &gt; 0;
    };
    //	Listeners
    var cleanFailedSubmit;
    var validationComplete;

    function registerSubmitListeners() {
        cleanFailedSubmit = $scope.$on('$sp.service_catalog.form_submit_failed', function() {
            $scope.submitting = false;
        });
        validationComplete = $rootScope.$on('$sp.service_catalog.form_validation_complete', function() {
            $scope.validating = false;
        });
    }
    registerSubmitListeners();
    $scope.$on("$sp.sc_cat_item.submitted", function() {
        if ($scope.data.sc_cat_item.item_action == "order") {
            if ($scope.data.sc_cat_item.sys_class_name == "sc_cat_item" || $scope.data.sc_cat_item.sys_class_name == "pc_hardware_cat_item" || $scope.data.sc_cat_item.sys_class_name == "pc_software_cat_item")
                window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog Item Request" + webAnalyticsMsgSuffix, "Catalog Request Submitted", 1, 0);
            else if (scope.data.sc_cat_item.sys_class_name == "sc_cat_item_producer")
                window.GlideWebAnalytics.trackEvent("Service Catalog", "Record Producer Request" + webAnalyticsMsgSuffix, "Catalog Request Submitted", 0, 0);
        }
        g_form.$private.userState.clearModifiedFields();
        if (c.options.auto_redirect == 'false')
            spAriaUtil.sendLiveMessage($scope.m.formSubmittedMsg);
        var payload = {};
        payload.name = "Submit Record Producer Request";
        payload.data = {};
        payload.data["Record Item"] = $scope.data.sc_cat_item.name;
        payload.data["Record ID"] = $scope.data.sc_cat_item.sys_id;
        snAnalytics.addEvent(payload);
    });
    $scope.$on("$sp.service_catalog.wishlist.update", function(evt, item) {
        if (item === $scope.data.sys_id)
            $scope.data.show_wishlist_msg = false;
    });
    // switch catalog items
    var unregister = $scope.$on('$sp.list.click', onListClick);
    $scope.$on("$destroy", function() {
        $rootScope.$broadcast("$sp.service_catalog.item.close");
        unregister();
        mespClosePopupUnregister();
        mespOpenPopupUnregister();
        validationComplete();
    });
    $rootScope.$on('spModel.gForm.rendered', function() {
        spAriaUtil.sendLiveMessage($scope.m.catItemOpenedMsg);
    });

    function onListClick(evt, arg) {
        $scope.data.sys_id = arg.sys_id;
        spUtil.update($scope);
    }

    function formatRedirectUrl(page, table, sys_id) {
        var url;
        var paramObj = {
            page: page,
            table: table,
            sys_id: sys_id
        };
        url = spUtil.format(c.options.url, paramObj);
        return url;
    }

    function handleRedirect(n, table, sys_id, redirectTo, redirectUrl) {
        var page = 'form';
        if (table == 'sc_request')
            page = 'sc_request';
        else if (n)
            page = 'ticket';

        if (sys_id == -1)
            sys_id = undefined;

        if (redirectTo == 'catalog_home')
            page = 'sc_home';

        //For Standard change, always direct to form if not in Workspace
        if ($scope.data.sc_cat_item.sys_class_name === "std_change_record_producer") {
            if ($scope.options.isServiceWorkspace == 'true') {
                var params = {};
                params.msg = 'TARGET_RECORD_SELECTED';
                params.target_table = table;
                params.target_sys_id = '-1';
                if (sys_id)
                    params.target_sys_id = sys_id;

                if ($scope.data.stdChg.twoStep) {
                    var genURL = new URL($window.location.origin + "/" + redirectUrl).searchParams;
                    params.target_query = genURL.get("query");
                }

                window.postMessage(params, $window.location.origin);
                return;
            } else
                page = 'form';
        }
        removeCabrilloButtons();
        if (c.options.page) {
            page = c.options.page;
        }
        if (c.options.table) {
            table = c.options.table;
        }
        var url = formatRedirectUrl(page, table, sys_id);
        if ($scope.data.sc_cat_item.sys_class_name === "sc_cat_item_producer" || $scope.data.sc_cat_item.sys_class_name === "std_change_record_producer") {
            if (redirectUrl) {
                if (isPortalURL(redirectUrl))
                    $location.search(getQueryParams(redirectUrl))
                else
                    $window.location.href = redirectUrl;
            } else {
                var newURL = $location.search(url);
                spAriaFocusManager.navigateToLink(newURL.url());
            }
            return;
        }
        $location.search(formatRedirectUrl('sc_request', 'sc_request', sys_id));
        return;
    }

    function isPortalURL(url) {
        var currentPortalName = $location.path().replace('/', '');
        var paramIndex = getQueryParameterIndex(url)
        var redirectPortalName = url.substr(0, paramIndex).replace('/', '');
        return currentPortalName === redirectPortalName;
    }

    function getQueryParams(url) {
        var paramIndex = getQueryParameterIndex(url);
        return url.substr(paramIndex + 1, url.length);
    }

    function getQueryParameterIndex(url) {
        var paramIndex = url.search(/\?/);
        return paramIndex &gt; 0 ? paramIndex : url.length;
    }

    $timeout(function() {
        if ($document[0].getElementsByClassName('sc-sticky-item-header').length &gt; 0) {
            var titleHeight = $document[0].getElementsByClassName('sc-sticky-item-header')[0].clientHeight;
            $scope.stickyHeaderTop = '-' + (titleHeight - 20 - $document[0].getElementsByClassName('sc-cat-item-short-description')[0].clientHeight) + 'px;';
        }
    });

    function addOrderButtons() {
        if (!c.isNative) return;
        showCartButton();
        var buttons = [];
        if ($scope.c.data.sys_properties.cartEnabled &amp;&amp; $scope.c.showAddCartBtn()) {
            buttons.push({
                title: $scope.m.addToCart,
                enabled: !$scope.submitting,
                backgroundColor: '#f7f7f7',
                textColor: '#000000'
            });
        }
        buttons.push({
            title: $scope.submitting ? $scope.m.submittingMsg : $scope.submitButtonMsg,
            enabled: !$scope.submitting,
            backgroundColor: $scope.data.sys_properties.mobileNativeColor,
            textColor: '#FFFFFF'
        });
        cabrillo.viewLayout.setBottomButtons(buttons, function(buttonIndex) {
            if ($scope.c.data.sys_properties.cartEnabled &amp;&amp; $scope.c.showAddCartBtn()) {
                if (buttonIndex == 0) {
                    $timeout(function() {
                        $scope.triggerAddToCart();
                    }, 500);
                } else {
                    $timeout(function() {
                        $scope.triggerOnSubmit();
                    }, 500);
                }
            } else {
                $timeout(function() {
                    $scope.triggerOnSubmit();
                }, 500);
            }
        });
    }

    function addRPButton() {
        if (!c.isNative) return;
        var buttons = [{
            title: $scope.submitButtonMsg,
            enabled: true,
            backgroundColor: $scope.data.sys_properties.mobileNativeColor,
            textColor: '#FFFFFF'
        }];

        cabrillo.viewLayout.setBottomButtons(buttons, function(buttonIndex) {
            $timeout(function() {
                $scope.triggerOnSubmit();
            }, 500);
        });
    }

    function showCartButton() {
        if (!c.isNative || !$scope.showCabrilloCart) return;

        var button = [{
            imageName: 'cart',
            badgeCount: $scope.cartItemCount,
            backgroundColor: '#2ff5f9',
            textColor: '#FFFFFF',
            enabled: true
        }];

        cabrillo.viewLayout.setNavigationBarButtons(button, function(index) {
            $location.search('id=sc_cart');
        });

    }

    function addUpdateButton() {
        if (!c.isNative) return;
        var buttons = [{
            title: $scope.m.updateCart,
            enabled: !$scope.submitting,
            backgroundColor: $scope.data.sys_properties.mobileNativeColor,
            textColor: '#FFFFFF'
        }];

        cabrillo.viewLayout.setBottomButtons(buttons, function(buttonIndex) {
            $timeout(function() {
                $scope.triggerUpdateCart();
            }, 500);
        });
        nativeGoBackToCart();
    }

    function removeCabrilloButtons() {
        if (!c.isNative) return;
        cabrillo.viewLayout.setBottomButtons();
    }

    function showPageLoader() {
        if (!c.isNative) return;
        cabrillo.viewLayout.showSpinner();
    }

    function hidePageLoader() {
        if (!c.isNative) return;
        cabrillo.viewLayout.hideSpinner();
    }

    function handleFailure(response) {
        registerSubmitListeners();

        $scope.submitting = false;
        hidePageLoader();
        if ($scope.data.sc_cat_item.item_action !== "add_to_cart")
            addOrderButtons();
        if (response.data.result &amp;&amp; response.data.result.errMsg)
            spUtil.addErrorMessage(response.data.result.errMsg);

        return $q.reject(response);
    }

    function mergeMap(fromMap, toMap) {
        for (var key in fromMap) {
            toMap[key] = fromMap[key];
        }
    }

    $window.onpageshow = function() {
        if (c.isNative)
            $scope.$emit('spModel.gForm.showNativeMobileButtons');
    };




    c.connectNLogged = function(selecteditem) {
		 $rootScope.selecteditem = selecteditem;
        c.modalInstance1 = $uibModal.open({
            templateUrl: 'connectTemplateRDpage',
            scope: $scope
        });
    }
	
	$scope.$on("closeModal", function(evt, data) {
		// handler code here
		c.modalInstance1.close();
	});

	$rootScope.cancelConnect = function() {
		c.modalInstance.close();
	}

    c.createReferal = function() {
        window.location = "?id=sc_cat_item&amp;sys_id=9fd8d086dbd48510c6ae8809489619a8&amp;organization=" + c.data.org + "&amp;location=" + c.data.loc + "&amp;resource="+ c.data.resId + "&amp;page=resourceCard";
    }
    c.share = function() {
        window.location = "?id=share_resource_details&amp;resource=" + c.data.sysCatSysId;
    }

}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.btn-group.attachment-mobile &amp;gt; button {&amp;#13;
  padding: 1px 6px;&amp;#13;
}&amp;#13;
&amp;#13;
.panel-button {&amp;#13;
  float: none;&amp;#13;
}&amp;#13;
&amp;#13;
.sp-attachment-add {&amp;#13;
  padding: 5px;&amp;#13;
}&amp;#13;
&amp;#13;
.p-t-none {&amp;#13;
  padding-top: 0 !important;&amp;#13;
}&amp;#13;
&amp;#13;
.file-list-wrap {&amp;#13;
	margin-bottom: 10px;&amp;#13;
}&amp;#13;
&amp;#13;
.sc-btn {&amp;#13;
  color: $text-color;&amp;#13;
}&amp;#13;
&amp;#13;
.dismiss-button {&amp;#13;
  position: absolute;&amp;#13;
  top: 1rem;&amp;#13;
	right: 10px;&amp;#13;
	color: $text-color;&amp;#13;
	cursor: pointer;&amp;#13;
}&amp;#13;
&amp;#13;
.item-header {&amp;#13;
  padding-top: 10px !important;&amp;#13;
  padding-bottom: 10px !important;&amp;#13;
}&amp;#13;
&amp;#13;
.sc-item-description img {&amp;#13;
  max-width: 100%;&amp;#13;
  height: auto;&amp;#13;
}&amp;#13;
.sc-sticky-item-header {&amp;#13;
  position: sticky;&amp;#13;
  position: -webkit-sticky;&amp;#13;
  position: -ms-sticky;&amp;#13;
  top: -($font-size-h2 + $font-size-base);&amp;#13;
  z-index: 10;&amp;#13;
  background-color: $sp-homepage-bg;&amp;#13;
  border-radius: 4px 4px 0 0;&amp;#13;
}&amp;#13;
.sc-fixed {&amp;#13;
  position: fixed;&amp;#13;
  max-height: 100%;&amp;#13;
  width: 17.67777%;&amp;#13;
}&amp;#13;
.span-det{&amp;#13;
float:right;&amp;#13;
  color:black;&amp;#13;
}&amp;#13;
.no-margin {&amp;#13;
	margin: 0px; &amp;#13;
}&amp;#13;
.sc-item-error-messages {&amp;#13;
  max-height: 100%;&amp;#13;
  position: absolute;&amp;#13;
  overflow-y: auto;&amp;#13;
  overflow-x: hidden;&amp;#13;
  width: 100%; &amp;#13;
}&amp;#13;
.sc-field-error-label {&amp;#13;
  margin-right: .5em; &amp;#13;
  display: inline-block;&amp;#13;
  cursor: pointer;&amp;#13;
  background-color: $sc-field-error-color;&amp;#13;
  text-overflow: ellipsis;&amp;#13;
  overflow: hidden;&amp;#13;
  white-space: nowrap;&amp;#13;
}&amp;#13;
.image-gallery {&amp;#13;
  font-size: 8px;&amp;#13;
  color: #CECECE;&amp;#13;
  .active {&amp;#13;
    color: #717171;&amp;#13;
  }&amp;#13;
  i {&amp;#13;
    padding: 0 5px;&amp;#13;
  }&amp;#13;
}&amp;#13;
.relative {&amp;#13;
  position: relative;&amp;#13;
}&amp;#13;
.sc-order-widget-btn {&amp;#13;
   position: absolute;&amp;#13;
   left: 9%;&amp;#13;
}&amp;#13;
&amp;#13;
.close-notification {&amp;#13;
  	position: absolute;&amp;#13;
  	top: 10px;&amp;#13;
  	right: 18px;&amp;#13;
}&amp;#13;
.help-tag-icon {&amp;#13;
  	color: $sc-field-error-color;&amp;#13;
}&amp;#13;
@media only screen and (max-width : 992px) {&amp;#13;
  .sc-fixed {&amp;#13;
    position: relative;&amp;#13;
    width: 100%;&amp;#13;
  }&amp;#13;
  .wishlist-update-message {&amp;#13;
    display : block;&amp;#13;
  }&amp;#13;
  .sc-item-error-messages {&amp;#13;
    position: relative;&amp;#13;
  }&amp;#13;
  .read-more, .read-less {&amp;#13;
    font-size: 15px;&amp;#13;
    cursor: pointer;&amp;#13;
  }&amp;#13;
  .more-text {&amp;#13;
    display: none;&amp;#13;
  }&amp;#13;
  .inline-cart {&amp;#13;
    display: none;&amp;#13;
  }&amp;#13;
  .right-side-cart {&amp;#13;
    display: inherit !important;&amp;#13;
  }&amp;#13;
}&amp;#13;
@media only screen and (max-width : 768px) {&amp;#13;
  .sc-sticky-item-header {&amp;#13;
     position: inherit;&amp;#13;
  }&amp;#13;
  &amp;#13;
}&amp;#13;
.inline-cart {&amp;#13;
  .quantity-selector {&amp;#13;
    display: inline-block;&amp;#13;
    width: 65px;&amp;#13;
    padding-top: 2px;&amp;#13;
  }&amp;#13;
}&amp;#13;
.alert-success .link {&amp;#13;
    text-decoration: underline;&amp;#13;
}&amp;#13;
&amp;#13;
.alert-info-border {&amp;#13;
	border-color: $alert-info-border;&amp;#13;
}&amp;#13;
&amp;#13;
.native-mobile {&amp;#13;
  	.panel {&amp;#13;
      	border-left: 0;&amp;#13;
      	border-right: 0;&amp;#13;
    }&amp;#13;
}&amp;#13;
&amp;#13;
.flex-center {&amp;#13;
  	display: flex;&amp;#13;
  	justify-content: center;&amp;#13;
  	align-items: center;&amp;#13;
}&amp;#13;
&amp;#13;
.flex-end {&amp;#13;
  	display: flex;&amp;#13;
  	justify-content: flex-end;&amp;#13;
}&amp;#13;
&amp;#13;
.attachment-height {&amp;#13;
 		 height: 80px;&amp;#13;
}&amp;#13;
.reConnect{&amp;#13;
    font-size:17px;&amp;#13;
    border: 1px solid transparent;&amp;#13;
    white-space: nowrap;&amp;#13;
  	color:white;&amp;#13;
  	border-radius:5px;&amp;#13;
	padding:7px 50px; &amp;#13;
  	margin:8px;&amp;#13;
  	background:var(--c-REBlue,#1D7988);&amp;#13;
}&amp;#13;
.cpButton{&amp;#13;
  	margin-left: 55%;&amp;#13;
  	width: 45%;&amp;#13;
  	margin-top: 5px;&amp;#13;
}&amp;#13;
.row{&amp;#13;
	margin-top: 15px;&amp;#13;
}&amp;#13;
.column{&amp;#13;
    float:left;&amp;#13;
    width: 50%;&amp;#13;
    padding: 10px;&amp;#13;
    margin-top: -30px;&amp;#13;
 }&amp;#13;
.row:after {&amp;#13;
    content: "";&amp;#13;
    display: table;&amp;#13;
    clear: both;&amp;#13;
}&amp;#13;
.h2{&amp;#13;
   font-size:38px;&amp;#13;
}&amp;#13;
.text-muted{&amp;#13;
  font-size:20px;&amp;#13;
  font-weight: bold;&amp;#13;
}&amp;#13;
&amp;#13;
&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data&gt;{&amp;#13;
"options": {&amp;#13;
"sys_id": "04b7e94b4f7b4200086eeed18110c7fd"&amp;#13;
}&amp;#13;
}&lt;/demo_data&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list&gt;color&lt;/field_list&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id/&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function(scope, elem){
    scope.setFocusToAttachment = function () {
		setTimeout(function () {
			var inboxArray = elem.find("a.view-attachment");
			inboxArray.focus();
		}, 100);
	}
	scope.setFocusToAttachmentButton = function () {
		elem.find('.sp-attachment-add')[0].focus();
	}
}
	]]&gt;&lt;/link&gt;&lt;name&gt;Copy of RE Catalog Item&lt;/name&gt;&lt;option_schema&gt;[{"name":"show_add_cart_button","section":"other","label":"Show Add Cart Button","type":"boolean"},{"hint":"If you turn on this, you will be able to see field validation messages on right side","name":"show_field_validation_messages","default_value":"true","section":"other","label":"Show field validation messages","type":"boolean"},{"hint":"Show Add/Update Wish List buttons","name":"show_add_to_wishlist_button","default_value":"true","section":"other","label":"Show Add/Update Wish List buttons","type":"boolean"},{"hint":"Order item section on top. If you uncheck this, order section will be displayed at bottom of screen","name":"display_cart_on_right","default_value":"true","section":"other","label":"Order Item Section On Top","type":"boolean"},{"hint":"Show item description in few words with an option to read more","name":"show_less_description","default_value":"true","section":"other","label":"Enable Show More/Less for Item description on Mobile","type":"boolean"},{"hint":"Hide the Delivery Time in the widget","name":"hide_delivery_time","section":"other","default_value":"false","label":"Hide Delivery Time","type":"boolean"},{"hint":"Makes it a preview page","name":"is_preview","section":"other","default_value":"false","label":"Is preview","type":"boolean"}]&lt;/option_schema&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[// populate the 'data' variable with catalog item, variables, and variable view
(function() {
    var localInput = input; //to safeguard pullution of "input" via BR or other scripts
    data.sysCatSysId = $sp.getParameter("sys_id");
    data.engagement_channel = options.native_mobile ? 'mobile' : (options.isServiceWorkspace ? 'workspace' : 'sp');
    data.referrer = $sp.getParameter("referrer");

    var embeddedWidgetOptions = ['auto_redirect', 'requested_for_id', 'requested_for_display'];
    if (localInput &amp;&amp; localInput.action == "from_attachment")
        return;

    if (localInput &amp;&amp; localInput.action == "get_requested_for") {
        data.requested_for = new global.GlobalServiceCatalogUtil().getRequestedFor(localInput.parentParams);
        return;
    }


    //ADDED BY SOURAV


    if (input &amp;&amp; input.method == "referral") {
        //console.log(input.cat_sys_id);
        var resourceSys = new x_dnll4_reseng.Reseng_ConnectUtils().queryCatItem(data.sysCatSysId);
        gs.addInfoMessage(resourceSys);
    }
    if (input &amp;&amp; input.method == "addfavorite") {
        var addResource = new x_dnll4_reseng.RESENG_AddToFavouritesUtils().addToFavourites(data.sysCatSysId);
        gs.addInfoMessage(addResource);
    }
    if (input &amp;&amp; input.method == "removefavorite") {
        var removeResource = new x_dnll4_reseng.RESENG_AddToFavouritesUtils().removeFromFavourites(data.sysCatSysId);
        gs.addInfoMessage(removeResource);
    }



    if (localInput &amp;&amp; localInput.action == 'init_item') {
        data._generatedItemGUID = gs.generateGUID();
        return;
    } else if (localInput &amp;&amp; localInput.action === "order_one_step") {

    } else if (localInput &amp;&amp; localInput.action === "order_item") {
        //Minimum set of widget options supported for Embedded widget
        embeddedWidgetOptions.forEach(function(embeddedWidgetOption) {
            if (typeof localInput[embeddedWidgetOption] != 'undefined')
                options[embeddedWidgetOption] = localInput[embeddedWidgetOption];
        });
        data.orderItemModal = $sp.getWidget('widget-modal', {
            embeddedWidgetId: 'sc-checkout',
            embeddedWidgetOptions: {
                cart: {
                    name: localInput.cart
                },
                action: 'order_now',
                item: localInput.itemDetails,
                requested_for: {
                    id: options.requested_for_id,
                    displayValue: options.requested_for_display
                },
                auto_redirect: options.auto_redirect,
                parentParams: localInput.workspaceParams,
                native_mobile: options.native_mobile,
                isServiceWorkspace: options.isServiceWorkspace,
                referrer: data.referrer
            },
            backdrop: 'static',
            keyboard: false,
            size: 'md'
        });
        return;
    } else if (localInput &amp;&amp; localInput.action == "order_wishlist_item") {
        //Minimum set of widget options supported for Embedded widget
        embeddedWidgetOptions.forEach(function(embeddedWidgetOption) {
            if (typeof localInput[embeddedWidgetOption] != 'undefined')
                options[embeddedWidgetOption] = localInput[embeddedWidgetOption];
        });
        data.orderItemModal = $sp.getWidget('widget-modal', {
            embeddedWidgetId: 'sc-checkout',
            embeddedWidgetOptions: {
                cart: {
                    name: localInput.cart
                },
                action: 'order_now_wishlisted_item',
                item: localInput.itemDetails,
                requested_for: {
                    id: options.requested_for_id,
                    displayValue: options.requested_for_display
                },
                auto_redirect: options.auto_redirect,
                parentParams: localInput.workspaceParams,
                native_mobile: options.native_mobile,
                referrer: data.referrer
            },
            backdrop: 'static',
            keyboard: false,
            size: 'md'
        });
        return;
    } else if (localInput &amp;&amp; localInput.action === 'log_request_cart') {
        $sp.logStat('Add to Cart Request', localInput.itemDetails.sys_class_name, localInput.itemDetails.sys_id, localInput.itemDetails.name, $sp.getPortalRecord().getUniqueValue());
        return;
    } else if (localInput &amp;&amp; localInput.action === "log_order_one_step") {
        $sp.logStat('Order Now Request', localInput.itemDetails.sys_class_name, localInput.itemDetails.sys_id, localInput.itemDetails.name, $sp.getPortalRecord().getUniqueValue());
        $sp.logStat('Cat Item Request', localInput.itemDetails.sys_class_name, localInput.itemDetails.sys_id, localInput.itemDetails.name, $sp.getPortalRecord().getUniqueValue());
        return;
    } else if (localInput &amp;&amp; localInput.action === 'log_request_producer') {
        $sp.logStat('Cat Item Request', localInput.itemDetails.sys_class_name, localInput.itemDetails.sys_id, localInput.itemDetails.name, $sp.getPortalRecord().getUniqueValue());
        return;
    }

    // portal can specify a catalog and catalog category home page
    var catalogID = $sp.getParameter("catalog_id") ? $sp.getParameter("catalog_id") + "" : "-1";
    data.sc_catalog_page = $sp.getDisplayValue("sc_catalog_page") || "sc_home";
    data.sc_category_page = $sp.getDisplayValue("sc_category_page") || "sc_category";
    var edit_parm = $sp.getParameter('edit');
    data.is_cart_item = edit_parm == 'cart';
    data.is_wishlist_item = edit_parm == 'wishlist';
    data.isPreview = options.is_preview == 'true' || $sp.getParameter("is_preview") == 'true';
    data.show_wishlist_msg = false;
    data.recordFound = true;
    options.show_add_cart_button = (options.show_add_cart_button == "true");
    data.isMEE = options.native_mobile;

    var clGenerator = new GlideChoiceList();
    var choiceListQuantity = clGenerator.getChoiceList("sc_cart_item", "quantity");
    var choicelistQuantityData = [];
	
    for (var i = 0; i &lt; choiceListQuantity.size; i++) {
        var choice = choiceListQuantity.getChoice(i);
        if (!isNaN(choice.getValue()))
            choicelistQuantityData.push({
                value: parseInt(choice.getValue()),
                label: choice.getLabel()
            });
    }
    data.choiceListQuantity = choicelistQuantityData;
    data.quantity = choicelistQuantityData[0].value;
    if (options.page) {
        var pageGR = new GlideRecord("sp_page");
        options.page = (pageGR.get(options.page)) ? pageGR.getValue("id") : null;
    }
    if (options.table) {
        var tableGR = new GlideRecord("sys_db_object");
        options.table = (tableGR.get(options.table)) ? tableGR.getValue("name") : null;
    }
    options.url = options.url || "id={page}&amp;is_new_order=true&amp;table={table}&amp;sys_id={sys_id}";

    data.showPrices = $sp.showCatalogPrices();
    var m = data.msgs = {};
    m.submitMsg = gs.getMessage("Submit");
    m.requestMsg = gs.getMessage("Request");
    m.orderNowMsg = gs.getMessage("Order Now");
    m.submittedMsg = gs.getMessage("Submitted");
    m.formSubmittedMsg = gs.getMessage("Form submitted successfully");
    m.submittingMsg = gs.getMessage("Submitting");
    m.createdMsg = gs.getMessage("Created");
    m.trackMsg = gs.getMessage("track using 'Requests' in the header or");
    m.clickMsg = gs.getMessage("click here to view");
    m.dialogTitle = gs.getMessage("Delete Attachment");
    m.dialogMessage = gs.getMessage("Are you sure?");
    m.dialogOK = gs.getMessage("OK");
    m.dialogCancel = gs.getMessage("Cancel");
    m.addToCart = gs.getMessage("Add to Cart");
    m.updateCart = gs.getMessage("Update Cart");
    m.addToWishlistConfirmMsg = gs.getMessage("This will clear the values entered in 'Also requested for'. Do you want to proceed?");

    m.renameSuccessMsg = gs.getMessage("Attachment renamed successfully");
    m.deleteSuccessMsg = gs.getMessage("Attachment deleted successfully");
    m.wishlistMsg = gs.getMessage('Wish List');
    m.cartMsg = gs.getMessage('Cart');
    m.itemWishlistMsg = gs.getMessage('This item is already in your Wish List. If you attempt to add this item to your Wish List it will overwrite the existing item.');
    m.invalidRecordMsg = gs.getMessage('You are either not authorized or record is not valid.');
    m.wishlistUpdateMsg = gs.getMessage('Your Wish List has been updated.');
    m.wishlistAddMsg = gs.getMessage('Your item has been added to your Wish List.');
    m.cartAddMsg = gs.getMessage('Your item has been added to your Cart. To make changes to the items in your cart, click ');
    m.viewWishListMsg = gs.getMessage('View Wish List');
    m.viewCartMsg = gs.getMessage('View Cart');
    m.delete_attachment = gs.getMessage("Delete Attachment?");
    m.regexError = gs.getMessage("Item with invalid variable can't be saved");
    m.requestSubmitted = gs.getMessage("Thank you, your request has been submitted.");
    data.maxAttachmentSize = parseInt(gs.getProperty("com.glide.attachment.max_size", 1024));
    if (isNaN(data.maxAttachmentSize))
        data.maxAttachmentSize = 24;
    m.largeAttachmentMsg = gs.getMessage("Attached files must be smaller than {0} - please try again", "" + data.maxAttachmentSize + "MB");

    m.notForMobileMsg = gs.getMessage('Not viewable in mobile');

    if (options.record_producer_label)
        data.record_producer_label = gs.getMessage(options.record_producer_label);

    if (edit_parm) {
        var cartName = data.is_cart_item ? 'DEFAULT' : 'saved_items';
        var cart = new sn_sc.CartJS(cartName);

        var cart_item_id = $sp.getParameter("sys_id");
        var gr = new GlideRecord("sc_cart_item");
        if (!gr.get(cart_item_id) || gr.cart != cart.getCartID() ||
            (!new sn_sc.CatItem(gr.getValue('cat_item')).canView())) {
            data.recordFound = false;
            return;
        }
        data.showWishlist = data.is_wishlist_item;
        var catItemData = {};
        catItemData.sys_id = gr.getValue('cat_item');
        catItemData.cart_item_id = gr.getUniqueValue();
        catItemData.table = "sc_cart_item";
        catItemData.is_ordering = true;
        catItemData.from_guide = !!gr.getValue('order_guide');
        data.sc_cat_item = $sp.getCatalogItem(catItemData);
        data.sc_cat_item.isCartItem = true;
        data.sc_cat_item.cart_guide = gr.getValue('order_guide');
        data.sc_cat_item.native_mobile = data.isMEE == 'true';
        data.hideDeliveryTime = data.sc_cat_item.no_delivery_time;
        if (!data.hideDeliveryTime)
            data.hideDeliveryTime = (options.hide_delivery_time == "true" || data.sc_cat_item.sys_class_name == 'sc_cat_item_producer' || data.sc_cat_item.sys_class_name == 'sc_cat_item_guide' || data.sc_cat_item.sys_class_name == 'std_change_record_producer');


        var values = getValues(cart_item_id);
        for (var f in data.sc_cat_item._fields) {
            // Put the values into the cat item fields
            var field = data.sc_cat_item._fields[f];
            if (typeof values[f] != "undefined" &amp;&amp; typeof values[f].value != "undefined") {
                if (values[f].type == 9 || values[f].type == 10)
                    field.value = values[f].displayValue;
                else if (values[f].type == 25)
                    field.value = values[f].decrypted_value;
                else
                    field.value = values[f].value;
                field.displayValue = values[f].displayValue;
                field.display_value_list = values[f].display_value_list;
            }
            updatePriceOnField(field);

        }
        data._generatedItemGUID = cart_item_id;
        data.quantity = '' + gr.quantity;
    } else {

        if (localInput)
            data.sys_id = localInput.sys_id;
        else if (options.sys_id)
            data.sys_id = options.sys_id;
        else
            data.sys_id = $sp.getParameter("sys_id") || $sp.getParameter('sl_sys_id');

        if (!data.sys_id) {
            data.recordFound = false;
            return;
        }

        data._generatedItemGUID = gs.generateGUID();
        var validatedItem = new sn_sc.CatItem('' + data.sys_id);
        if (!data.isPreview) {
            if (!validatedItem.canView() || !validatedItem.isVisibleServicePortal()) {
                data.recordFound = false;
                return;
            }
        }

        data.sc_cat_item = $sp.getCatalogItem({
            sys_id: data.sys_id + '',
            is_ordering: true

        });

        if (options.native_mobile == 'true') {
            if (gs.getProperty('glide.sc.mobile.item_class_not_supported', '').split(',').indexOf(data.sc_cat_item.sys_class_name) &gt; -1) {
                data.not_for_mobile = true;
                data.sc_cat_item = {};
                return;
            }
            if (gs.getProperty('glide.sc.mobile.include_desktop_only_items', 'true') == 'false') {
                if (data.sc_cat_item.availability == 'on_desktop') {
                    data.not_for_mobile = true;
                    data.sc_cat_item = {};
                    return;
                }
            }
        }

        data.sc_cat_item.native_mobile = data.isMEE == 'true';
        data.hideDeliveryTime = data.sc_cat_item.no_delivery_time;
        if (!data.hideDeliveryTime)
            data.hideDeliveryTime = (options.hide_delivery_time == "true" || data.sc_cat_item.sys_class_name == 'sc_cat_item_producer' || data.sc_cat_item.sys_class_name == 'sc_cat_item_guide' || data.sc_cat_item.sys_class_name == 'std_change_record_producer');

        if (data.sc_cat_item.category) {
            var categoryJS;
            var categoryID = validatedItem.getFirstAccessibleCategoryForSearch((catalogID &amp;&amp; catalogID != "-1") ? catalogID : $sp.getCatalogs().value + "");
            if (GlideStringUtil.isEligibleSysID($sp.getParameter("sysparm_category"))) {
                categoryJS = new sn_sc.CatCategory($sp.getParameter("sysparm_category") + "");
                categoryID = $sp.getParameter("sysparm_category") + "";
            } else if (categoryID) {
                categoryJS = new sn_sc.CatCategory(categoryID);
            }
            if (categoryJS &amp;&amp; GlideStringUtil.isEligibleSysID(categoryJS.getID())) {
                if (categoryJS.getCatalog()) {
                    catalogID = categoryJS.getCatalog();
                    data.catalog_id = catalogID;
                    var catalogObj = new sn_sc.Catalog('' + catalogID);
                    data.sc_catalog = catalogObj.getTitle();
                    data.showWishlist = catalogObj.isWishlistEnabled();
                }
                data.category = {
                    name: categoryJS.getTitle(),
                    url: '?id=' + data.sc_category_page + '&amp;sys_id=' + categoryID
                }
                data.categories = [];
                data.categories.push({
                    label: categoryJS.getTitle(),
                    url: '?id=' + data.sc_category_page + '&amp;sys_id=' + categoryID
                });
                while (categoryJS.getParent()) {
                    var parentId = categoryJS.getParent();
                    categoryJS = new sn_sc.CatCategory(parentId);
                    var category = {
                        label: categoryJS.getTitle(),
                        url: '?id=' + data.sc_category_page + '&amp;sys_id=' + parentId
                    };
                    data.categories.unshift(category);
                }
                if ((($sp.getCatalogs().value + "").split(",")).length &gt; 1) {
                    data.all_catalog_msg = gs.getMessage("All Catalogs");
                }
            }
        }

        if (data.showWishlist) {
            var gr = new GlideRecord('sc_cart_item');
            gr.addQuery('cart', new sn_sc.CartJS('saved_items').getCartID());
            gr.addQuery('cat_item', data.sys_id);
            gr.query();
            if (gr.next() &amp;&amp; !options.isServiceWorkspace)
                data.show_wishlist_msg = true;
        }
    }

    data.sys_properties = {
        twostep: gs.getProperty("glide.sc.sp.twostep", "true") == 'true' &amp;&amp; !data.sc_cat_item.has_requested_for_variable,
        mobileNativeColor: gs.getProperty("glide.sc.mobile.primary_color", "#1f8476"),
        cartEnabled: gs.getProperty("glide.sc.cart.enabled", "false") == "true"
    };

    m.catItemOpenedMsg = gs.getMessage("Catalog item {0} opened", data.sc_cat_item.name);

    var className = data.sc_cat_item.sys_class_name;



    //ADDED BY SOURAV



    data.showCB = [];
    data.showCB = new x_dnll4_reseng.Reseng_ConnectUtils().connectInplan();

    if (data.showCB.indexOf(data.sc_cat_item.sys_id) === -1) {
        data.sc_cat_item.resourceItem = false;
    } else {
        data.sc_cat_item.resourceItem = true;
    }

    //ADDED BY SHWETHA
    data.addButton = [];
    data.addButton = new x_dnll4_reseng.RESENG_AddToFavouritesUtils().checkResource();
    if (data.addButton.indexOf(data.sc_cat_item.sys_id) === -1) {
        data.addOrRemove = false;
    } else {
        data.addOrRemove = true;
    }


    data.can_create_cart_item = canCreateCartItem(className) &amp;&amp; !gs.hasRole('snc_read_only');

    function canCreateCartItem(className) {
        var allowedClasses = ['sc_cat_item_producer', 'std_change_record_producer', 'sc_cat_item_producer_service'];
        if (allowedClasses.indexOf(className) &gt; -1)
            return true;

        var invalidClasses = ('sc_cat_item_content,' + gs.getProperty('glide.sc.item.not_normal_cart_item', '')).split(',');

        return invalidClasses.indexOf(className) &lt; 0;
    }

    var athTblName = 'sc_cart_item';
    if (!new global.CatalogItemTypeProcessor().canCreateNormalCartItem(className)) {
        if (className == 'sc_cat_item_producer' || className == 'std_change_record_producer') {
            var gr = new GlideRecord(className);
            gr.get(data.sc_cat_item.sys_id);
            if (gr.isValidRecord())
                athTblName = gr.getValue('table_name');
        }
    }

    data._attachmentTable = athTblName;
    data.stdChg = {};
    if (className === 'std_change_record_producer') {
        //Populate scope with the porperty for two step
        data.stdChg.twoStep = false;
        var twoStepProp = new global.StdChangeUtils().getValue('two_step') + '';
        if (twoStepProp)
            data.stdChg.twoStep = twoStepProp === '1';
        var stdChgProducerGr = new GlideRecord('std_change_record_producer');
        stdChgProducerGr.get(data.sc_cat_item.sys_id);
        if (stdChgProducerGr.isValidRecord())
            data.stdChg.currentVersion = stdChgProducerGr.getValue('current_version');
        if (gs.getProperty('com.snc.change_management.change_model.type_compatibility', 'false') !== 'true')
            data.stdChg.chgModel = 'e55d0bfec343101035ae3f52c1d3ae49';
    }

    if (data.sc_cat_item.sys_class_name !== 'sc_cat_item_content')
        $sp.logStat('Cat Item View', data.sc_cat_item.sys_class_name, data.sc_cat_item.sys_id, data.sc_cat_item.name, $sp.getPortalRecord().getUniqueValue());

    function getValues(sys_id) {
        var qs = new sn_sc.VariablePoolQuestionSetJS();
        qs.setCartID(sys_id);
        qs.load();
        var values = {};
        var questions = qs.getFlatQuestions();
        for (var i = 0; i &lt; questions.length; i++) {
            var qKey = questions[i].name;
            if (typeof qKey == 'undefined' || qKey == '')
                qKey = "IO:" + questions[i].sys_id;
            values[qKey] = questions[i];
        }
        return values;
    }

    function setPrice(field, p, rp) {
        if (p != undefined)
            field.price = p;
        if (rp != undefined)
            field.recurring_price = rp;
    }

    function updatePriceForReferenceTable(field) {
        var tableName = field.refTable + '';
        if (tableName != undefined &amp;&amp; tableName != null &amp;&amp; tableName != '') {
            var gr = new GlideRecord(tableName);
            if (gr.isValid()) {
                if (gr.get(field.value) &amp;&amp; gr.isValidRecord()) {
                    updatePrice(gr, field);
                    updateRecurringPrice(gr, field);
                }
            }
        }
    }

    function updatePriceForListCollector(field) {
        var tableName = field.refTable + '';
        if (tableName != undefined &amp;&amp; tableName != null &amp;&amp; tableName != '') {
            var gr = new GlideRecord(tableName);
            if (gr.isValid()) {
                var values = field.value.split(',');
                gr.addQuery('sys_id', values);
                gr.query();
                var p = 0.0;
                var rp = 0.0;
                var price_value_list = [];
                while (gr.next()) {
                    var price_field = {};
                    updatePrice(gr, price_field);
                    updateRecurringPrice(gr, price_field);
                    if (price_field.price)
                        p += Number(price_field.price);
                    else
                        price_field.price = 0.0;
                    if (price_field.recurring_price)
                        rp += Number(price_field.recurring_price);
                    else
                        price_field.recurring_price = 0.0;
                    price_value_list.push(price_field);
                }
                field.price = p;
                field.recurring_price = rp;
                field.price_value_list = price_value_list;
            }
        }
    }

    function updatePrice(gr, field) {
        if (gr.isValidField('price'))
            field.price = gr.getValue('price');
        else if (gr.isValidField('u_price'))
            field.price = gr.getValue('u_price');
    }

    function updateRecurringPrice(gr, field) {
        if (gr.isValidField('recurring_price'))
            field.recurring_price = gr.getValue('recurring_price');
        else if (gr.isValidField('u_recurring_price'))
            field.recurring_price = gr.getValue('u_recurring_price');
    }

    function updatePriceOnField(field) {
        if (field.type == 'boolean' || field.type == 'boolean_confirm') {
            if (field.value == 'true' || field.value == true)
                setPrice(field, field._pricing.price_if_checked, field._pricing.recurring_price_if_checked);
            else
                setPrice(field, 0, 0);
        } else if (field.choices) {
            field.choices.forEach(function(choice) {
                if (choice.value + '' == field.value + '')
                    setPrice(field, choice.price, choice.recurring_price);
            });
        } else if (field._pricing &amp;&amp; field._pricing.pricing_implications === true) {
            if (field.type == 'reference')
                updatePriceForReferenceTable(field);
            else if (field.type == 'glide_list')
                updatePriceForListCollector(field);
        }
    }

    data.loggedIn = gs.getUser().hasRole('sn_customerservice.consumer');
    data.cploggedIn = gs.getUser().hasRole('sn_customerservice.customer') &amp;&amp; !gs.getUser().hasRole('admin');
		data.showShareBtn = (!gs.getUser().hasRole('admin')) &amp;&amp; (gs.getUser().hasRole('sn_customerservice.customer') || !gs.isLoggedIn()); //Added By Sourav
    data.reg_widget = $sp.getWidget("reseng_registration_connect_global");

    var citem = new GlideRecord('sc_cat_item');
    citem.get(data.sysCatSysId);

    var res = new GlideRecord('u_resource');
    res.addQuery('u_catalog_item', citem.sys_id);
    res.query();
    if (res.next()) {
        data.acc = res.u_account.getDisplayValue();
		data.org = res.u_account.toString();
        var resSysID = res.sys_id.toString();

    }
    data.showButton = false;
    var locRes = new GlideRecord('u_location_resource');
    locRes.addQuery('u_resource', resSysID);
    locRes.addQuery('u_hide_connect', false);
    locRes.query();
    if (locRes.next()) {
        data.showButton = true;
    }
    var locResource = new GlideRecord('u_location_resource');
    locResource.addQuery('u_resource', resSysID);
    locResource.query();
    if (locResource.next()) {
        data.loc = locResource.u_location.toString();
		data.resId = locResource.sys_id.toString();
    }


})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;shalu3&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-04-05 10:05:07&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;80f35a678762c1104ad14007cebb35b2&lt;/sys_id&gt;&lt;sys_mod_count&gt;14&lt;/sys_mod_count&gt;&lt;sys_name&gt;Copy of RE Catalog Item&lt;/sys_name&gt;&lt;sys_package display_value="Resource Engine" source="x_dnll4_reseng"&gt;8d85ea9b1b5e8910d96475de034bcb5f&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Resource Engine"&gt;8d85ea9b1b5e8910d96475de034bcb5f&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_80f35a678762c1104ad14007cebb35b2&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;jecherian&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-05-12 12:18:28&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div id="sc_cat_item" ng-if="::(data.recordFound &amp;&amp; !data.not_for_mobile)" sn-atf-blacklist="IS_SERVICE_CATALOG"&gt;
&lt;sp-widget widget="c.orderItemModal" ng-if="c.orderItemModal"&gt;&lt;/sp-widget&gt;
&lt;div class="row" ng-if="::data.sc_cat_item" ng-class="{'native-mobile': options.native_mobile == 'true'}"&gt;
   &lt;div class="col-sm-12 col-md-12 " ng-class="{'col-md-9': options.display_cart_on_right === 'true', 'col-md-12': options.display_cart_on_right !== 'true', 'no-padder': options.native_mobile == 'true'}" id="catItemTop"&gt;
      &lt;!-- Info Message Box --&gt;
      &lt;div ng-if="data.show_wishlist_msg" class="alert alert-info"&gt;
         {{::m.itemWishlistMsg}}
      &lt;/div&gt;
      &lt;!--	Success Message Box	--&gt;
      &lt;div class="alert alert-success" ng-if="data.showMsg" sc-bind-html-compile="m.actionMsg"&gt;
      &lt;/div&gt;
      &lt;div class="panel panel-default"&gt;
         &lt;!-- Title Section --&gt;
         &lt;div role="region" aria-label="${Item Details}"&gt;
            &lt;div class="wrapper-md b-b break-word item-header" ng-class="{true: '', false: 'sc-sticky-item-header'}[!c.data.sc_cat_item.short_description]" style="top: {{stickyHeaderTop}}"&gt;
               &lt;div class="row"&gt;
                  &lt;div class="column"&gt;
                    &lt;h2 class="h2 m-t-none m-b-sm font-thin sdesc" style="font-family:Nunito Sans;" ng-if="::data.sc_cat_item.name &amp;&amp; options.native_mobile != 'true'"&gt;&lt;b&gt;{{::data.sc_cat_item.name}}&lt;/b&gt;&lt;/h2&gt;
                     &lt;div class="text-muted sc-cat-item-short-description" style="font-family:Nunito Sans;" ng-if="::data.sc_cat_item.short_description"&gt;{{::data.sc_cat_item.short_description}}&lt;/div&gt;
                  &lt;/div&gt;
                  
                  &lt;div class="column" ng-show="{{::data.showButton}}"&gt;
                     &lt;!-- ADDED BY SOURAV --&gt;
                     &lt;span class="span-det"&gt;
                     &lt;button ng-if="!data.loggedIn &amp;&amp; !data.cploggedIn" style="float: right;margin:0px 5px 5px 0px;width: 150px;background-color: var(--c-REBlue,#1D7988);" class="btn btn-primary cpButton" ng-click="c.connectNLogged(data.sc_cat_item.sys_id)"&gt;${Connect}&lt;/button&gt;
                     &lt;input type="button" ng-if="data.loggedIn &amp;&amp; (data.sc_cat_item.resourceItem || c.inplanvalue)" style="background-color:#d7d8d9;color:white; cursor:context-menu" class="btn btn-light"  value="In Plan" disabled&gt;
                     &lt;input type="button" ng-if="data.loggedIn &amp;&amp; !data.sc_cat_item.resourceItem &amp;&amp; !c.inplanvalue" ng-click="c.createCase(data.sc_cat_item.sys_id)" class="reConnect"  value="Connect"&gt;&lt;/span&gt;          
                     &lt;!--ADDEDD BY SHWETHA --&gt;
                     &lt;button ng-if="data.cploggedIn" style="float: right;margin:0px 5px 5px 0px;width: 150px;background-color: var(--c-REBlue,#1D7988);" class="btn btn-primary cpButton" ng-click="c.createReferal()"&gt;${Refer}&lt;/button&gt;
                     &lt;button ng-if="data.showShareBtn" style="background-color: white;color: var(--c-REBlue,#1D7988);border-color:#e6ebf2;" class="btn btn-light cpButton" ng-click="c.share()"&gt;${Share}&lt;/button&gt;
                     &lt;input ng-if="data.cploggedIn &amp;&amp; data.addOrRemove" style="background-color: white;color: var(--c-REBlue,#1D7988);border-color:#e6ebf2;" ng-click="c.removeFromFavorites(data.sc_cat_item.sys_id)" type="button" value="Remove from Favorites" class="btn btn-light cpButton"&gt;
                     &lt;input ng-if="data.cploggedIn &amp;&amp; !data.addOrRemove" style="background-color: white;color: var(--c-REBlue,#1D7988);border-color:#e6ebf2;" ng-click="c.addToFavorites(data.sc_cat_item.sys_id)" type="button" value="Add to Favorites" class="btn btn-light cpButton"&gt;
                  &lt;/div&gt;
               &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="row b-b no-margin" style="font-size:16px;font-family:Nunito Sans;" ng-if="c.data.sc_cat_item.picture || c.data.sc_cat_item.trusted_description" ng-class="{'wrapper-md': options.native_mobile != 'true', 'wrapper-sm': options.native_mobile == 'true'}"&gt;
               &lt;div class="col-sm-4 col-xs-12 no-padder" ng-if="c.data.sc_cat_item.picture"&gt;
                  &lt;div class="wrapper-md text-center"&gt;
                     &lt;i class="fa fa-chevron-left pointer" style="position:absolute; top:50%; left:4%; color:#CECECE" ng-if="options.image_gallery"&gt;&lt;/i&gt;
                     &lt;img class="img-responsive catalog-item-image" alt="{{::data.sc_cat_item.name}}" style="display: inline" ng-src="{{::data.sc_cat_item.picture}}?t=medium" /&gt;
                     &lt;i class="fa fa-chevron-right pointer" style="position:absolute; top:50%; right:4%; color:#CECECE" ng-if="options.image_gallery"&gt;&lt;/i&gt;
                     &lt;div class="image-gallery padding-top" ng-if="options.image_gallery"&gt;
                        &lt;i class="fa fa-circle active"&gt;&lt;/i&gt;
                        &lt;i class="fa fa-circle"&gt;&lt;/i&gt;
                        &lt;i class="fa fa-circle"&gt;&lt;/i&gt;
                     &lt;/div&gt;
                  &lt;/div&gt;
               &lt;/div&gt;
               &lt;div class="col-xs-12 break-word"
                  ng-class="{true: 'col-sm-12 no-padder', false: 'col-sm-8'}[!c.data.sc_cat_item.picture]"&gt;
                  &lt;div class="visible-md visible-lg" ng-class="{false : 'visible-xs visible-sm', true : 'hidden-xs hidden-sm'}[c.options.show_less_description === 'true']"&gt;
                     &lt;div ng-bind-html="::data.sc_cat_item.trusted_description" class="sc-item-description"&gt;&lt;/div&gt;
                  &lt;/div&gt;
                  &lt;div class="col-xs-12 col-sm-12 visible-xs visible-sm" ng-if="c.options.show_less_description === 'true'"&gt;
                     &lt;sc-toggle-data sn-data="::data.sc_cat_item.trusted_description"&gt;&lt;/sc-toggle-data&gt;
                  &lt;/div&gt;
               &lt;/div&gt;
            &lt;/div&gt;
         &lt;/div&gt;
         &lt;div class="b-b wrapper-md" ng-show="!data.no_fields" role="region" aria-label="${Form}"&gt;
            &lt;sp-cat-item item="::data.sc_cat_item" &gt;&lt;/sp-cat-item&gt;
            &lt;form&gt;
               &lt;!-- display view and model --&gt;
               &lt;sp-model form-model="::data.sc_cat_item" mandatory="c.mandatory"&gt;&lt;/sp-model&gt;
            &lt;/form&gt;
         &lt;/div&gt;
         &lt;div class="b-b wrapper-md" ng-if="::(data.sc_cat_item.content_type == 'external' || data.sc_cat_item.content_type == 'kb')"&gt;
            &lt;div ng-if="::data.sc_cat_item.content_type == 'external'" class="wrapper-md m-l-sm"&gt;
               &lt;a ng-href="{{::data.sc_cat_item.url}}" target={{::data.sc_cat_item.target}}&gt;${Go to Link:} {{::data.sc_cat_item.url}} ➚&lt;/a&gt;
            &lt;/div&gt;
            &lt;div ng-if="::data.sc_cat_item.content_type == 'kb'" class="wrapper-md m-l-sm"&gt;
               &lt;a  ng-href="?id=kb_article&amp;sys_id={{::data.sc_cat_item.kb_article}}"&gt;${Go to KB Article:} {{::data.sc_cat_item.kb_article_description}}&lt;/a&gt;
            &lt;/div&gt;
         &lt;/div&gt;
         &lt;!-- Bottom cart --&gt;
         &lt;div class="inline-cart" ng-if="::options.display_cart_on_right !== 'true'" role="region" aria-label="${Page Actions}"&gt;
            &lt;div ng-if="c.showCart()" class="wrapper-md b-b"&gt;
               &lt;div class="m-b text-right" ng-if="c.showPrice()" &gt;
                  &lt;b&gt;${Price}:&lt;/b&gt; {{data.sc_cat_item.price_display}}&lt;em ng-if="data.sc_cat_item.recurring_price" class="cat_item_price"&gt; {{data.sc_cat_item.price ? '+' : ''}} {{data.sc_cat_item.recurring_price_display + ' ' + data.sc_cat_item.recurring_price_frequency}}&lt;/em&gt;
               &lt;/div&gt;
               &lt;div class="m-b text-right" ng-if="c.showDeliveryTime()"&gt;
                  &lt;b&gt;${Delivery Time}:&lt;/b&gt; {{::data.sc_cat_item.estimated_delivery_time}}
               &lt;/div&gt;
               &lt;div ng-if="::c.allowOrder()" class="text-right"&gt;
                  &lt;select id="catItemQuantity"
                     title="${Quantity}"
                     ng-if="c.showQuantitySelector()"
                     ng-disabled="disableControls()"
                     class="m-r-xs sn-select-basic inline"
                     ng-model="c.quantity"
                     sn-select-width="65px"
                     aria-label="${Quantity}"&gt;
                     &lt;option ng-repeat="num in data.choiceListQuantity" value={{::num.value}}&gt;{{::num.label}}&lt;/option&gt;
                  &lt;/select&gt;
                  &lt;button tabindex="0" ng-if="c.showAddCartBtn()" name="add_to_cart" ng-disabled="disableControls()" ng-click="triggerAddToCart()" class="btn btn-default m-r-xs"&gt;
                  &lt;i class="fa fa fa-shopping-cart m-r-xs"&gt;&lt;/i&gt;
                  ${Add to Cart}
                  &lt;/button&gt;
                  &lt;button tabindex="0" ng-if="data.is_cart_item" name="update" ng-disabled="disableControls()" ng-click="triggerUpdateCart()" class="btn btn-default"&gt;
                  &lt;i class="fa fa fa-shopping-cart m-r-xs"&gt;&lt;/i&gt;
                  ${Update Cart}
                  &lt;/button&gt;
                  &lt;span class="form-group relative" ng-if="c.showAddToWishlist()"&gt;
                  &lt;button ng-if="!data.is_wishlist_item" name="add_to_wishlist" ng-click="triggerAddToWishlist()" ng-disabled="disableControls()" class="btn btn-default m-r-xs"&gt;
                  &lt;i class="icon icon-sp-wishlist m-r-xs" style="vertical-align: text-bottom;"&gt;&lt;/i&gt;
                  ${Add to Wish List}
                  &lt;/button&gt;
                  &lt;button ng-if="data.is_wishlist_item" name="update_wishlist" ng-click="triggerAddToWishlist()" ng-disabled="disableControls()" class="btn btn-default m-r-xs"&gt;
                  &lt;i class="icon icon-sp-wishlist m-r-xs" style="vertical-align: text-bottom;"&gt;&lt;/i&gt;
                  ${Update Wish List}
                  &lt;/button&gt;
                  &lt;/span&gt;
                  &lt;button ng-if="::c.showOrderNowButton()" tabindex="0" name="submit" ng-disabled="disableControls()" ng-click="triggerOnSubmit()" class="btn btn-primary" aria-live="assertive"&gt;{{submitButtonMsg}}&lt;/button&gt;
                  &lt;span ng-if="submitting" style="padding-left:4px"&gt;${Submitting...}&lt;/span&gt;
                  &lt;span ng-if="validating" style="padding-left:4px"&gt;${Validating...}&lt;/span&gt;
               &lt;/div&gt;
               &lt;div ng-show="hasMandatory(c.mandatory)" class="alert alert-info" style="margin-top: .5em" ng-if="c.options.show_field_validation_messages === 'true'" aria-live="assertive"&gt;
                  &lt;fieldset id="required_field_bottom"&gt;
                     &lt;legend id="required_information_bottom" ng-if="hasMandatory(c.mandatory)" aria-hidden="true"&gt;${Required information} &lt;/legend&gt;
                     &lt;span ng-repeat="f in c.mandatory"&gt;
                        &lt;span class="sr-only" id="req_info_bottom_{{::f.name}}"&gt;${Required information}&lt;/span&gt;
                        &lt;div for="req_info_bottom_{{::f.name}}" class="label sc-field-error-label" style="margin-right: .5em; display: inline-block;" ng-click="getFocus(f)" tabindex="0"&gt;{{::f.label}}&lt;/div&gt;
                     &lt;/span&gt;
                  &lt;/fieldset&gt;
               &lt;/div&gt;
            &lt;/div&gt;
         &lt;/div&gt;
       &lt;!-- &lt;div ng-if="c.showAttachments()" class="wrapper-md row no-margin" role="region" aria-label="${Attachments}"&gt;
            &lt;now-attachments-list template="sp_attachment_single_line" &gt;&lt;/now-attachments-list&gt;
            &lt;div ng-class="{'flex-center attachment-height': options.native_mobile == 'true', 'flex-end': options.native_mobile != 'true'}"&gt;
               &lt;label ng-if="!submitting &amp;&amp; !submitted" style="font-weight:normal;cursor:pointer;"&gt;
                 &lt;sp-attachment-button required="{{data.sc_cat_item.mandatory_attachment}}"&gt;&lt;/sp-attachment-button&gt;
                  &lt;span class="fa fa-asterisk mandatory" 
                     ng-if="data.sc_cat_item.mandatory_attachment" 
                     ng-class="{'mandatory-filled': data.sc_cat_item.mandatory_attachment &amp;&amp; (data.sc_cat_item.attachment_submitted || attachments.length &gt; 0)}"
                     style="vertical-align:super"&gt;&lt;/span&gt;
                  &lt;span&gt;${Add attachments}&lt;/span&gt;
               &lt;/label&gt;
            &lt;/div&gt;--&gt;
         &lt;/div&gt;
      &lt;/div&gt;
   &lt;/div&gt;
   &lt;!-- Right side content
      &lt;div class="col-sm-12 col-md-3 right-side-cart" ng-show="::options.display_cart_on_right === 'true'" ng-class="{'no-padder': options.native_mobile == 'true'}" role="region" aria-label="${Page Actions}"&gt;
        &lt;!-- Right side cart( If you are chaning anything here, please change in bottom cart section also) 
        &lt;div ng-class="{true:'sc-fixed', false:'' }[options.display_cart_on_right === 'true']"&gt;
          &lt;div ng-if="c.showCart()" class="panel panel-{{::options.color}} b" ng-class="{'wrapper-md': options.native_mobile != 'true', 'wrapper-sm': options.native_mobile == 'true'}"&gt;
            &lt;div ng-if="::c.allowOrder()" ng-class="{'form-group': options.native_mobile == 'true'}"&gt;
              &lt;select id="catItemQuantity"
                      title="${Quantity}"
                      ng-if="c.showQuantitySelector()"
                      ng-disabled="disableControls()"
                      class="m-b sn-select-basic"
                      ng-model="c.quantity"
                      aria-label="${Quantity}"&gt;
                &lt;option ng-repeat="num in data.choiceListQuantity" value={{::num.value}}&gt;{{::num.label}}&lt;/option&gt;
              &lt;/select&gt;
            &lt;/div&gt;
            &lt;div class="form-group relative" ng-if="c.options.native_mobile == 'true'"&gt;
              &lt;div class="" ng-if="c.showPrice()"&gt;
                &lt;b&gt;{{data.sc_cat_item.price_display}}&lt;/b&gt; &lt;em ng-if="data.sc_cat_item.recurring_price" class="cat_item_price"&gt; {{data.sc_cat_item.price ? '+' : ''}} {{data.sc_cat_item.recurring_price_display + ' ' + data.sc_cat_item.recurring_price_frequency}}&lt;/em&gt;
              &lt;/div&gt;
              &lt;div class="text-muted" ng-if="c.showDeliveryTime()"&gt;
                ${Delivery Time}: {{::data.sc_cat_item.estimated_delivery_time}}
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="form-group relative" ng-if="c.options.native_mobile != 'true'"&gt;
              &lt;div class="form-group" ng-if="c.showPrice()"&gt;
                &lt;b&gt;${Price}:&lt;/b&gt; {{data.sc_cat_item.price_display}}&lt;em ng-if="data.sc_cat_item.recurring_price" class="cat_item_price"&gt; {{data.sc_cat_item.price ? '+' : ''}} {{data.sc_cat_item.recurring_price_display + ' ' + data.sc_cat_item.recurring_price_frequency}}&lt;/em&gt;
              &lt;/div&gt;
              &lt;div class="form-group" ng-if="c.showDeliveryTime()"&gt;
                &lt;b&gt;${Delivery Time}:&lt;/b&gt; {{::data.sc_cat_item.estimated_delivery_time}}
              &lt;/div&gt;
              &lt;button tabindex="0" ng-if="c.showAddCartBtn()" name="add_to_cart" ng-disabled="disableControls()" ng-click="triggerAddToCart()" class="btn btn-default sc-btn form-control"&gt;
                &lt;i class="fa fa fa-shopping-cart sc-order-widget-btn pull-left"&gt;&lt;/i&gt;
                ${Add to Cart}
              &lt;/button&gt;
              &lt;button tabindex="0" ng-if="data.is_cart_item" name="update" ng-disabled="disableControls()" ng-click="triggerUpdateCart()" class="btn btn-default sc-btn form-control"&gt;
                &lt;i class="fa fa fa-shopping-cart sc-order-widget-btn pull-left"&gt;&lt;/i&gt;
                ${Update Cart}
              &lt;/button&gt;
            &lt;/div&gt;
            &lt;div class="form-group relative" ng-if="c.showAddToWishlist()"&gt;
              &lt;button ng-if="!data.is_wishlist_item" name="add_to_wishlist" ng-click="triggerAddToWishlist()" ng-disabled="disableControls()" class="btn btn-default sc-btn form-control"&gt;
                &lt;i class="icon icon-sp-wishlist sc-order-widget-btn pull-left" style="top:5px"&gt;&lt;/i&gt;
                ${Add to Wish List}
              &lt;/button&gt;
              &lt;button ng-if="data.is_wishlist_item" name="update_wishlist" ng-click="triggerAddToWishlist()" ng-disabled="disableControls()" class="btn btn-default sc-btn form-control"&gt;
                &lt;i class="icon icon-sp-wishlist sc-order-widget-btn pull-left" style="top:5px"&gt;&lt;/i&gt;
                ${Update Wish List}
              &lt;/button&gt;
            &lt;/div&gt;
            &lt;div class="form-group m-b-xs" ng-if="c.options.native_mobile != 'true'"&gt;
              &lt;button ng-if="::c.showOrderNowButton()" tabindex="0" name="submit" ng-disabled="disableControls()" ng-click="triggerOnSubmit()" class="btn btn-primary btn-block"&gt;{{submitButtonMsg}}&lt;/button&gt;
              &lt;span ng-if="submitting" style="padding-left:4px"&gt;${Submitting...}&lt;/span&gt;
              &lt;span ng-if="validating" style="padding-left:4px"&gt;${Validating...}&lt;/span&gt;
            &lt;/div&gt;
            &lt;div class="form-group m-b-xs flex-center" ng-if="c.options.native_mobile == 'true' &amp;&amp; 1==2"&gt;
              &lt;button tabindex="0" ng-if="c.showAddCartBtn()" name="add_to_cart" ng-disabled="disableControls()" ng-click="triggerAddToCart()" class="btn btn-default sc-btn native-btn rounded m-r-lg padder-xl"&gt;
                ${Add to Cart}
              &lt;/button&gt;
              &lt;button tabindex="0" ng-if="data.is_cart_item" name="update" ng-disabled="disableControls()" ng-click="triggerUpdateCart()" class="btn btn-default sc-btn native-btn rounded m-r-lg padder-xl"&gt;
                &lt;i class="fa fa fa-shopping-cart sc-order-widget-btn pull-left"&gt;&lt;/i&gt;
                ${Update Cart}
              &lt;/button&gt;
              &lt;div class="form-group m-b-xs"&gt;
                &lt;button ng-if="::c.showOrderNowButton()" tabindex="0" name="submit" ng-disabled="disableControls()" ng-click="triggerOnSubmit()" class="btn btn-primary rounded m-l-lg padder-xl"&gt;{{submitButtonMsg}}&lt;/button&gt;
                &lt;span ng-if="submitting" style="padding-left:4px"&gt;${Submitting...}&lt;/span&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
      
          &lt;div class="sc-item-error-messages" ng-if="c.options.show_field_validation_messages === 'true'"&gt;
            &lt;div class="row" ng-if="hasMandatory(c.mandatory)" class=" row alert alert-info-border" style="margin-top: .5em"&gt;
              &lt;div class="col-sm-12" aria-live="assertive"&gt;
                &lt;fieldset id="required_field"&gt;
                  &lt;legend id="required_information" ng-if="hasMandatory(c.mandatory)" aria-hidden="true"&gt;${Required information}&lt;/legend&gt;
                  &lt;span ng-repeat="f in c.mandatory" &gt;
                    &lt;span class="sr-only" id="req_info_top_{{::f.name}}"&gt;${Required information}&lt;/span&gt;
                    &lt;div for="req_info_top_{{::f.name}}" class="label sc-field-error-label" ng-click="getFocus(f)" tabindex="0"&gt;{{::f.label}}&lt;/div&gt;
                  &lt;/span&gt;
                &lt;/fieldset&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;--&gt;
   &lt;div ng-if="::!data.sc_cat_item" &gt;
      &lt;div class="panel panel-default"&gt;
         &lt;div class="panel-heading"&gt;
            &lt;h4 class="panel-title"&gt;${Item not found}&lt;/h4&gt;
         &lt;/div&gt;
         &lt;div class="panel-body wrapper"&gt;
            &lt;p&gt;${This item is not found or currently not available}&lt;/p&gt;
            &lt;p&gt;${Suggestions}:&lt;/p&gt;
            &lt;ul&gt;
               &lt;li&gt;${Try searching for the item}&lt;/li&gt;
               &lt;li&gt;${Go to the Service Catalog homepage}&lt;/li&gt;
            &lt;/ul&gt;
         &lt;/div&gt;
      &lt;/div&gt;
   &lt;/div&gt;
   &lt;div class="sr-only" aria-live="assertive"&gt;{{::c.status}}&lt;/div&gt;
&lt;/div&gt;
&lt;div ng-if="::!data.recordFound" class="alert alert-info"&gt;{{::m.invalidRecordMsg}}&lt;/div&gt;
&lt;div ng-if="::data.not_for_mobile"&gt;
   &lt;div class="wrapper-lg flex-center"&gt;
      ${We're sorry, this item isn't available on mobile}
   &lt;/div&gt;
   &lt;div class="flex-center"&gt;
      &lt;img src="not_viewable.png" width="300"/&gt;  
   &lt;/div&gt;
&lt;/div&gt;
&lt;now-message key="Added item to shopping cart" value="${Added item to shopping cart}"/&gt;
&lt;now-message key="Updated Item to shopping cart" value="${Updated Item to shopping cart}"/&gt;
&lt;now-message key="Attachment(s) are not added" value="${Attachment(s) are not added}"/&gt;
&lt;now-message key="Please wait, attachment deletion in progress" value="${Please wait, attachment deletion in progress}"/&gt;
&lt;now-message key="Leave page?" value="${Leave page?}"/&gt;
&lt;now-message key="Changes you made will be lost." value="${Changes you made will be lost.}"/&gt;
&lt;now-message key="Cancel" value="${Cancel}"/&gt;
&lt;now-message key="Leave" value="${Leave}"/&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>843244831</payload_hash>
<remote_update_set display_value="RE_SF_GA_RESENG_V1">cf83f395876f0910b7640f6c8bbb3523</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>souravdas</sys_created_by>
<sys_created_on>2022-05-18 10:19:18</sys_created_on>
<sys_id>4f83f395876f0910b7640f6c8bbb3524</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>180b834c6d20000001</sys_recorded_at>
<sys_updated_by>souravdas</sys_updated_by>
<sys_updated_on>2022-05-18 10:19:18</sys_updated_on>
<table/>
<target_name>Copy of RE Catalog Item</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>f54551efa557c5d003a1188b7427aac4</update_guid>
<update_guid_history>f54551efa557c5d003a1188b7427aac4:843244831,8c2dc467f5df89941118d7c1cd01ed6d:23412511,d5b748e3989b8994a9acfe78fe11cd56:-1483888601,107780a3225b8994563e2499f2201ed9:1590515303,00fb2b1b9f5f09949df00ce8e0736dfc:-2095564321,969897ea464bc110fe382a61117a6dec:-1933396637,5ba1e89c9a32451043c4eef3f4f3e1fa:-1547031659,5051a49c8b324510eae7dfee4d5561b9:-766812072,2001ac5c083245101c83564293ae01fb:1434318891,e0b06c5c09324510b57cbce89ce758c9:523219636,0e50e45cd2324510d83e6d6bd7cc8b30:536674448,0110205cb2324510b733d55a0a2d2459:-1874481454,138f1c1c20324510d9f07abdbd3db2fc:-1363348692,376f981c1a32451045c97d4fb7ba90e8:5001067,f53fd01c1d324510cecb1f0569a27697:-1694411220,f98e9cd83c3245109a38deeba25b40a2:-1060696679,106e9cd8b7324510c490f2496b55e951:-1504182159,7f3e18d843324510383225b0f840b1d9:183064753,f40e18d8a5324510f30c409f1bc2a253:762939151,5f8d50d885324510b0af3bbf4898de17:-817630020,ef0dd498603245108041985e106432e3:237080759,002a94184032451010eec0b05e6b32f7:137101294,830a50189e3245102d9c33b63c239aff:1111211683,f98810d48e3245109cf6b8e6504b638a:1196428138,27255014f0324510a7a65b9834bdf6a7:-1879870128,eb63d490b6324510dc6ddb038cbafe45:983884658,3073d4c4b836051047ab73cca7999c61:-1879870128,01929c84183605101bbc3afa71141494:-1926125322,e7625c4437360510f30cfa959ff7a20e:1847193314,fe503ffbe6a205104e07e4f6cdf50b38:-1645759293,2c9f63fb72a205103812c07f291681bf:-1689987148,454f6fbb3da205102ea334023a5309ed:-1899086532,83eee7bb00a20510df69cdb9515c84be:-1252307609,088d537b456205103d2965dcdfb0950b:-1483153303,c31d9b3b73620510d3b71db7b748dc4f:-1292180141,2fdcd73b06620510ef176e6ac45409dc:1322543679,db7cd33ba76205107aed3b535dee791c:-1399234393,3abbd3f7eb620510c673d04090ce695f:64070949,ae1ea63b4faec110d80e2760a59c4ecc:97084692,97fde23bbbaec110abdcb27582026bb6:1741362639,a4ad6ef713aec1100fa2a282e0e5131b:499962990,9d4de6f73faec110c7694138aa88110e:896820851,5b15daa79362c1105b9e03c629ce789e:1301645089,0cf35a67c062c110c1e3717e84d572b3:-1694411220</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Resource Engine">8d85ea9b1b5e8910d96475de034bcb5f</application>
<category>customer</category>
<comments/>
<name>sp_widget_5f7fd91287aac1104ad14007cebb35f9</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;sc&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, $uibModal, spUtil, spScUtil, i18n, $rootScope, $location, $timeout, $window, $document, $interval) {

    var c = this;
	 var c = this;
	var today_date = new Date();
    var today_date_str = formatDate(today_date, g_user_date_format); 
	var name,id,tracking,action,resource;
	if($scope.user.name){
		name = $scope.user.name;
		id = $scope.user.sys_id;
		console.log("id found"+$scope.user.name);
		console.log("No id found"+$location.$$search.keyword);
	}
	else{
		name = "guest";
		id =  "guest_id";
		console.log("No id found"+$scope.user.name);
		console.log("No id found"+$location.$$search.keyword);
	}
	


			console.log(c.data.typename.toString());
				tracking = c.data.typename.toString();
				resource = c.data.res_id.toString();
				action = c.data.action.toString();
				console.log("Achtype"+c.data.typename.toString());
		
// 		else {
// 		    tracking = c.data.cattypename.toString();
// 			action ="Search-By-Category";
// 			//console.log("No id found"+tracking);
// 			console.log("Achtype"+c.data.cattypename.toString());
			
		
		
		

// 	}
// 	tracking = c.data.archtypename.toString();
// 	action ="archetype";
// 	console.log("No id found"+tracking);
		
//console.log("Achtype"+c.data.archtypename.toString());

		
		
	
	
dataLayer.push(
{ event:"gtm.click",
  event: "ju_test",
  event: "ga_test",
	 'sf_user_type' :name,
	 'sf_unique-userid':id,
	 'tracking_category':tracking,
	 'user_action':action,
      'resource_id':resource,
	 'Current_Date':today_date_str
 });
	
    c.checkCategory = [];
    shareLocationInfo1();
    var modelCheck;
    $rootScope.$on('resourcesBasedOnDistance', function(event, data) { // Added By Sourav
        $timeout(function() {
            $scope.data.distancefilter = data;
        });
    });


    c.checkGoal = [];
    $scope.viewMoreLess = function(goal, check) {
        var index = c.checkGoal.indexOf(goal.goalSysId);
        if (!check) {

            c.checkGoal.push(goal.goalSysId);
            goal.defaultLen = goal.length;
        } else {
            c.checkGoal.splice(index, 1);
            goal.defaultLen = 2;
        }
    }

    $scope.expandCat = function(index, sys_id) {
        if (index == 0) {
            c.checkCategory[index] = sys_id;
        }
    }


    $scope.plusMinus = function(sysid, index, check) {
        if (index == 0) {
            c.checkCategory[index] = '';
        }
        if (!check &amp;&amp; index != 0) {
            c.checkCategory[index] = '';
        } else if (check) {
            c.checkCategory[index] = sysid;
        }
    }

    $rootScope.$on("itemDetailsCatHours1", function(event, w) {

        $timeout(function() {
            c.data.categorys = w.categorys;
            console.log(w);
            c.data.action = 'categoryselected';
            c.data.hoursValue = w.hoursDetail;
            c.data.distanceVal = w.distanceSel;
            c.data.changeInLoc = JSON.parse(w.changeInLoc);
            c.data.isLoaded = false;
            $scope.server.update().then(function() {
                if (c.data.isLoaded) {
                    var locInfo = {};
                    locInfo.notModal = true;
                    locInfo.catItmes = JSON.stringify(c.data.items);
//                     console.log('locInfo.catItmes from Archetype Detail Widget' + locInfo.catItmes);

                    $rootScope.$broadcast("DLT-location-share", locInfo);
                }
            });

        });
        /*$timeout(function() {

            var locInfo = {};
            locInfo.notModal = true;
            locInfo.catItmes = JSON.stringify(c.data.items);
            console.log('locInfo.catItmes from Archetype Detail Widget' + locInfo.catItmes);

            $rootScope.$broadcast("DLT-location-share", locInfo);
        }, 8000);*/


    });


    function shareLocationInfo1() {

        $rootScope.$emit("getItems.call", c.data.items);

    }

    //stored the cat_item array values in the rootscope variable
    $rootScope.cat_items = c.data.items;

    /*   $scope.hideItemWidget = !$scope.data.category_id;
    if ($scope.data.category) {
        if (!$scope.data.categories)
            $scope.data.categories = [];
        $scope.data.categories.forEach(function(category, index, categories) {
            categories[index].url = category.url + '&amp;catalog_id=' + $scope.data.catalog_id;
        });
        if ($scope.data.sc_catalog)
            $scope.data.categories.unshift({
                label: $scope.data.sc_catalog,
                url: '?id=' + $scope.data.sc_category_page + '&amp;catalog_id=' + $scope.data.catalog_id
            });
        if ($scope.data.show_popular_item) {
            if ($scope.data.all_catalog_msg)
                $scope.data.categories.unshift({
                    label: $scope.data.all_catalog_msg,
                    url: '?id=' + $scope.data.sc_category_page + '&amp;catalog_id=-1'
                });
            else
                $scope.data.categories.push({
                    label: $scope.data.all_cat_msg,
                    url: '#'
                });
        } else {
            if ($scope.data.all_catalog_msg) {
                $scope.data.categories.unshift({
                    label: $scope.data.all_catalog_msg,
                    url: '?id=' + $scope.data.sc_category_page + '&amp;catalog_id=-1'
                });
            }
            $scope.data.categories.push({
                label: $scope.data.category.title,
                url: '#'
            });
        }
        $timeout(function() {
            $rootScope.$broadcast('sp.update.breadcrumbs', $scope.data.categories);
        });
        spUtil.setSearchPage('sc');
    }
    $scope.showCategories = function() {
        $scope.hideItemWidget = true;
        $rootScope.$broadcast("$sp.service_catelog.show.categories_widget");
    }

    var listenerForCatItems = $scope.$on("$sp.service_catelog.show.items_widget", function() {
        $scope.hideItemWidget = false;
    });
  =============== Begin link handling ===============*/

    $scope.changeView = function(view) {
        spScUtil.setPreference('catalog-item-list-view', view)
        $scope.view = view;
    }

    spScUtil.getPreference('catalog-item-list-view', function(value) {
        $scope.view = value || 'card';
    });

    $scope.isTouchDevice = function() {
        return ('ontouchstart' in $window);
    }

    $scope.loadMore = function() {
        $scope.data.new_limit = $scope.data.limit + ($scope.options.limit_item || 9);
        $scope.stopLoader = false;
        $scope.server.update().then(function() {
            var old_limit = $scope.data.limit - ($scope.options.limit_item || 9);
            $scope.data.items[old_limit].highlight = true;
            $scope.stopLoader = true;
        });
    }

    $scope.onClick = function($event, item) {

        window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog Browse", "Item Clicked");
        var lp = getLinkParts(item);
        if (typeof lp == "string") {
            $window.open(lp, '_blank');

            return;
        }
        $event.stopPropagation();
        $event.preventDefault();
        var evt = {
            item: item,
            search: lp
        };
        // This will let a wrapper widget intercept and redirect somewhere else
        $scope.$emit($scope.options.click_event_name, evt);
    };

    function getLinkParts(item) {
        if (item.sys_class_name == 'sc_cat_item_content' &amp;&amp; item.content_type == 'external')
            return item.url;

        return {
            id: item.page,
            sys_id: item.content_type == 'kb' ? item.kb_article : item.sys_id,
            sysparm_category: $scope.data.category_id
            // referrer: (item.content_type != 'kb' &amp;&amp; $scope.data.show_popular_item) ? 'popular_items' : null
            //referrer: (item.content_type != 'kb' ) ? 'popular_items' : null
        };
    }
    c.openResourceDetail = function(item) {
        var lp = getLinkParts(item);
        if (typeof lp == "string")
            return lp;
        var urls = "?id=reseng_of_sc_cat_item&amp;sys_id=" + lp.sys_id;
        $window.open(urls);
    }

    $scope.getItemHREF = function(item) {
        var lp = getLinkParts(item);
        if (typeof lp == "string")
            return lp;
        return "?id=reseng_of_sc_cat_item&amp;sys_id=" + lp.sys_id + "&amp;sysparm_category=" + $scope.data.category_id + ($scope.data.catalog_id ? "&amp;catalog_id=" + $scope.data.catalog_id : "");
        //return "?id=re_of_sc_cat_item" + "&amp;sys_id=" + lp.sys_id ;
    }

    var unregister = $rootScope.$on($scope.options.click_event_name, function($event, o) {
        if ("url" in o) {
            console.log("inside if");
            $location.href = o.url;
        } else
            $location.search(o.search);
        //$location.search(o.sc_category);
    });

    if ($scope.options.isServiceWorkspace) {
        $window.postMessage({
            msg: 'CATALOG_ITEM_SET_TITLE',
            title: i18n.getMessage('Catalogs')
        }, $location.origin);
    }

    var mql;

    if ($window.matchMedia) {
        mql = $window.matchMedia('screen and (max-width: 768px)');
        mql.addListener(handleMatchMedia);
        handleMatchMedia(mql);
    }

    function handleMatchMedia(mql) {
        if (!mql.matches) {
            spScUtil.getPreference('catalog-item-list-view', function(value) {
                $scope.view = value || 'card';
                $scope.isMobile = false;
            });
        } else {
            $timeout(function() {
                $scope.view = 'card';
                $scope.isMobile = true;
            })
        }
    }

    //c.inplanvalue = false;
    c.createCase = function(cat_sysid, categoryId, locID) {
		console.log("conenct clicked");
		dataLayer.push(
		 { event:"gtm.click",
		   event: "ju_test",
		   event: "ga_test",
			 'sf_user_type' :name,
			 'sf_unique-userid':id,
			 'resource_id':resource,
			 'tracking_category':tracking,
			 'user_action':'connect-clicked',
			 'Current_Date':today_date_str

		 });
        $scope.server.get({
            cat_sys_id: cat_sysid,
			locId: locID
        }).then(function(response) {
            if (response.data) {
                //alert(cat_sysid+" "+categoryId);
                for (var i in $scope.data.categories) {
                    if ($scope.data.categories[i].sys_id == categoryId) {
                        for (var j in $scope.data.categories[i].goalDetails) {
                            for (var k in $scope.data.categories[i].goalDetails[j].goalItems) {
                                if ($scope.data.categories[i].goalDetails[j].goalItems[k].sys_id == cat_sysid) {
                                    //	alert(cat_sysid);
                                    $scope.data.categories[i].goalDetails[j].goalItems[k].resourceItem = true;
                                }
                            }
                        }
                    }
                }
            }
        })
    };




    c.addToFavorites = function(cat_sysid, categoryId) {
        $scope.server.get({
            addId: cat_sysid
        }).then(function(response) {
            if (response.data) {
                //alert('test');
                for (var i in $scope.data.categories) {
                    if ($scope.data.categories[i].sys_id == categoryId) {
                        for (var j in $scope.data.categories[i].goalDetails) {
                            for (var k in $scope.data.categories[i].goalDetails[j].goalItems) {
                                if ($scope.data.categories[i].goalDetails[j].goalItems[k].sys_id == cat_sysid) {
                                    $scope.data.categories[i].goalDetails[j].goalItems[k].addItem = true;
                                }
                            }
                        }
                    }
                }
            }
        })

    };

    c.removeFromFavorites = function(cat_sysid, categoryId) {
        $scope.server.get({
            removeId: cat_sysid
        }).then(function(response) {
            if (response.data) {
                for (var i in $scope.data.categories) {
                    if ($scope.data.categories[i].sys_id == categoryId) {
                        for (var j in $scope.data.categories[i].goalDetails) {
                            for (var k in $scope.data.categories[i].goalDetails[j].goalItems) {
                                if ($scope.data.categories[i].goalDetails[j].goalItems[k].sys_id == cat_sysid) {
                                    $scope.data.categories[i].goalDetails[j].goalItems[k].addItem = false;
                                }
                            }
                        }
                    }
                }
            }
        })
    };


    // Browse By Ctaegory and Search Keyword

    //c.inplanvalue = false;
    c.createCase1 = function(cat_sysid, categoryId, locID) {
		console.log("conenct clicked");
		dataLayer.push(
		 { event:"gtm.click",
		   event: "ju_test",
		   event: "ga_test",
			 'sf_user_type' :name,
			 'sf_unique-userid':id,
			 'resource_id':resource,
			 'tracking_category':tracking,
			 'user_action':'connect-clicked',
			 'Current_Date':today_date_str

		 });
		
        $scope.server.get({
            cat_sys_id: cat_sysid,
			locId: locID
        }).then(function(response) {
            if (response.data) {
                //alert(cat_sysid+" "+categoryId);
                for (var i in $scope.data.categories) {
                    if ($scope.data.categories[i].sys_id == categoryId) {
                        for (var j in $scope.data.categories[i].items) {

                            if ($scope.data.categories[i].items[j].sys_id == cat_sysid) {
                                $scope.data.categories[i].items[j].resourceItem = true;
                            }
                        }

                    }
                }
            }
        })
    };




    c.addToFavorites1 = function(cat_sysid, categoryId) {
        $scope.server.get({
            addId: cat_sysid
        }).then(function(response) {
            if (response.data) {
                //alert('test');
                for (var i in $scope.data.categories) {
                    if ($scope.data.categories[i].sys_id == categoryId) {
                        for (var j in $scope.data.categories[i].items) {

                            if ($scope.data.categories[i].items[j].sys_id == cat_sysid) {
                                $scope.data.categories[i].items[j].addItem = true;
                            }

                        }
                    }
                }
            }
        })

    };

    c.removeFromFavorites1 = function(cat_sysid, categoryId) {
        $scope.server.get({
            removeId: cat_sysid
        }).then(function(response) {
            if (response.data) {
                for (var i in $scope.data.categories) {
                    if ($scope.data.categories[i].sys_id == categoryId) {
                        for (var j in $scope.data.categories[i].items) {

                            if ($scope.data.categories[i].items[j].sys_id == cat_sysid) {
                                $scope.data.categories[i].items[j].addItem = false;
                            }
                        }

                    }
                }
            }
        })
    };
    //---------------------------------------------

    c.showConnectBtn = function() {
		console.log("conenct clicked");
		dataLayer.push(
		 { event:"gtm.click",
		   event: "ju_test",
		   event: "ga_test",
			 'sf_user_type' :name,
			 'sf_unique-userid':id,
			 'resource_id':"resource_id",
			 'tracking_category':tracking,
			 'user_action':'connect-clicked',
			 'Current_Date':today_date_str

		 });
        return c.data.loggedIn &amp;&amp; !c.data.inPlan;
    }

    /*
    	$scope.$on("$destroy", function() {
    		unregister();
    		listenerForCatItems();
    		if (mql)
    			mql.removeListener(handleMatchMedia);
    	});*/

    /*	$scope.$on('$destroy', function() {
       $interval.cancel(promise);
         });
    	*/
    $scope.startItemList = function() {
        $scope.stopLoader = true;

    }

    $scope.location = {
        displayValue: "",
        value: "",
        name: 'location'
    };
    //backUrl,
    /*if ((!c.data.locationCache || c.data.locationCache == 'undefined') &amp;&amp; c.data.sessionLocVal == '') {

        //Callfree();
    //} else {

        c.showSCwidget = true; //Added By Sourav

    }*/
    $scope.shareItems = function() {
        //alert(JSON.stringify(c.data.items));

        $timeout(function() {
            var locInfo = {};
            locInfo.val = $scope.location.value;
            locInfo.displayVal = $scope.location.displayValue;
            locInfo.catItmes = JSON.stringify(c.data.items);
            //$rootScope.$broadcast("DLT-location-share", locInfo);
        }, 6000);


    }

    /*function Callfree() {
        c.server.get({
            act: "Callfree"
        }).then(function(r) {


            c.openModal();

        });
    }
    c.openModal = function() {
        c.modalInstance = $uibModal.open({
            templateUrl: 'modalTemplate',
            backdrop: 'static',
            scope: $scope
        });

    }
    c.closeModal = function() {
        c.modalInstance.close();
    }
    c.closeModal1 = function() {
        c.modalInstance.close();
        $window.location.href = '/csm_re';

    }*/

    /* c.shareLocationInfo = function() {
        modelCheck = true;
        //ahemmed : Added for Mandatory field for sn-record-picker

        c.showSCwidget = false;
		var arr = document.getElementById('autofill').value;
		$scope.location = arr;
        if ($scope.location) {

            var locInfo = {};
            locInfo.val = $scope.location;
            locInfo.notModal = false;
            locInfo.catItmes = JSON.stringify(c.data.items);
            $rootScope.$broadcast("DLT-location-share", locInfo);

            $scope.data.inputloc = locInfo.val;
            spUtil.update($scope);

            c.data.sessionLocval = $scope.location.value;
            c.data.sessionLocdisplayval = $scope.location.displayValue;
            //$rootScope.$broadcast('showSCwidget', $scope.location.value);
            $scope.server.update().then(function() {

            });

            $timeout(function() { //Added By Sourav to Populate Distance on Resource Card

                //	$location.search('sys_id', c.data.sysID);// commented by Bharati
                if (c.data.catUrlSysId != '') {
                    //$location.search('map_id', c.data.sysID);
                    ////$location.search('catalog_id', c.data.catalog_id);
                    //$location.search('id', 're_category_page');
                } else {
                    //$location.search('map_id', c.data.sysID);
                    //$location.search('sys_id',c.data.catUrlSysId);
                    //$location.search('id', 're_category_page');
                }


            });

            $timeout(function() { //Added By Sourav
                c.showSCwidget = true;
            }, 3500);


        }
        c.closeModal();


    }*/

    c.showSCwidget = false;
    $rootScope.$on('locationSubmitted', function(event, obj) {
        c.locationValue = obj.loc;

        if (obj.submitted == true) {
            c.showSCwidget = true;
            console.log('submitted');
        }
    });

    //Added by shwetha
    c.createReferal = function(org, loc, res) {
        $window.open("?id=sc_cat_item&amp;sys_id=abb1e2351bfe8110d96475de034bcbc2&amp;organization=" + org + "&amp;location=" + loc + "&amp;resource=" + res + "&amp;page=resourceCard");
    }

    c.connectNLogged = function(selecteditem, a, locId) {
        $rootScope.selecteditem = selecteditem;
		$rootScope.selectedLo = locId;
        c.modalInstance1 = $uibModal.open({
            templateUrl: 'reseng_connectTemplate',
            backdrop: 'static',
            scope: $scope
        });
    }


    $scope.$on("closeModal", function(evt, data) {
        // handler code here
        c.modalInstance1.close();
    });

    $rootScope.cancelConnect = function() {
        c.modalInstance.close();
    }



    /*$rootScope.$on("evt1", function(evt, key) {
    	c.data.keywordItems = key.keywordSe;
    	c.data.categorys = key.category;
    	console.log("c.data.hoursValue "+ key.keywordSe);
    	 c.server.update();

    });*/

    // 	alert(c.data.hoursValue);

    /*=============== End link handling ===============*/

}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.toggle {&amp;#13;
  color: $gray-darker;&amp;#13;
  i:not(.active):hover {&amp;#13;
    color: $list-group-link-heading-color;&amp;#13;
  }&amp;#13;
}&amp;#13;
&amp;#13;
.fa {&amp;#13;
  border: 1px solid white;&amp;#13;
}&amp;#13;
&amp;#13;
.fa.active {&amp;#13;
  color: $primary;&amp;#13;
}&amp;#13;
.connect-background{&amp;#13;
  background-color:  #ffff;&amp;#13;
}&amp;#13;
&amp;#13;
.item-table {&amp;#13;
  background-color: #fff;&amp;#13;
  tr {&amp;#13;
    th {&amp;#13;
      padding: 16px 10px;&amp;#13;
    }&amp;#13;
    td {&amp;#13;
      padding: 16px 10px;&amp;#13;
      border: none;&amp;#13;
    }&amp;#13;
  }&amp;#13;
}&amp;#13;
&amp;#13;
.btn-loadmore {&amp;#13;
  margin-left: auto;&amp;#13;
  margin-right: auto;&amp;#13;
  display: block;&amp;#13;
  margin-bottom: 20px;&amp;#13;
}&amp;#13;
.open-today{&amp;#13;
  display: block;&amp;#13;
  padding: 20px 20px 20px 70px;&amp;#13;
  position: absolute;&amp;#13;
  margin-bottom: 75px&amp;#13;
}&amp;#13;
&amp;#13;
.th-row-data {&amp;#13;
  border-top: none !important;&amp;#13;
  font-weight: normal !important;&amp;#13;
  a {&amp;#13;
    color: $brand-primary-darker !important;&amp;#13;
  }&amp;#13;
}&amp;#13;
&amp;#13;
.btn-mid {&amp;#13;
  margin-right: 20px;&amp;#13;
  padding right: 20px;&amp;#13;
  padding: 30px 30px;&amp;#13;
}&amp;#13;
&amp;#13;
.dataLoader{&amp;#13;
  margin-left : auto;&amp;#13;
  margin-right : auto;&amp;#13;
  display : block;&amp;#13;
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id&gt;reseng_archetype_detail&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;RESENG ArcheType Detail &lt;/name&gt;&lt;option_schema&gt;[{"name":"click_event_name","default_value":"$sp.cat_item_list.click","section":"other","label":"Click event name","type":"string"},{"hint":"Number of items to display per page","name":"limit_item","default_value":"15","section":"other","label":"Number of items per page","type":"integer"},{"hint":"Show items from child categories along with the items of the present category","name":"show_items_from_child","section":"other","default_value":"false","label":"Show items from Child Categories","type":"boolean"},{"hint":"Popular Items that has been used","name":"popular_items_created","section":"Data","default_value":"6","label":"Popular Items used in","type":"choice","choices":[{"label":"Last 3 months","value":"3"},{"label":"Last 6 months","value":"6"},{"label":"Last 12 months","value":"12"},{"label":"Life time (Has performance implications)","value":"0"}]}]&lt;/option_schema&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles&gt;snc_external,snc_internal&lt;/roles&gt;&lt;script&gt;&lt;![CDATA[(function() {
    /*
Variables:
data.id -&gt; To get the page id of the URL.
data.categorys -&gt; An array to store the sys_id's of the category selected in RE Categories
data.hoursValue-&gt;
data.keywordItems -&gt; keyword for search .
data.cat_id -&gt; Sys_id of the category selected from the Browse By Category
data.catIdUrl-&gt; True if the sys_id of URL parameter is not empty.
data.items -&gt; All the items of all categories selected
data.changeInLoc -&gt;
	*/
   data.typename = '';
	data.res_id = '';
	data.action = '';
	if($sp.getParameter("Archetype")){
	//	console.log("Arche type");
		var archId = $sp.getParameter("Archetype");
		data.res_id = archId;
		data.action = 'sub-arch-type';
		var glarchtype = new GlideRecord('x_dnll4_reseng_arche_types');
		glarchtype.get(archId);
		data.typename = glarchtype.u_title.toString();
		//console.log(data.arctypename + "String line 18");
	}
	else if ($sp.getParameter("keyword")){
		var catId = $sp.getParameter("keyword");
		data.res_id = catId;
		data.action = 'search';
		data.typename =  data.res_id;
			//glcattype.title.toString();
		//console.log(data.cattypename + "String line 22");
	}
	else{
		var catId = $sp.getParameter("sys_id");
			data.res_id = catId;
			data.action = 'search-by-category';
			var glcattype = new GlideRecord('sc_category');
			glcattype.get(catId);
			data.typename =  data.res_id;
				//glcattype.title.toString();
			//console.log(data.cattypename + "String line 22");
	}
    var hoursCatItems = [];
    data.countItems = 0;
    data.id = $sp.getParameter("id");
    data.categorys = [];
    data.hoursValue = [];
    data.distanceVal = '';
    data.keywordItems = $sp.getParameter('keyword');
    data.cat_id = $sp.getParameter('sys_id');
    data.catIdCheck = global.JSUtil.notNil(data.cat_id);
    data.catIdUrl = global.JSUtil.notNil(data.cat_id) || global.JSUtil.notNil(data.keywordItems);

    data.items_shared = [];
    var catalogSysId = gs.getProperty("x_dnll4_reseng.Catalog ID");
    // data.changeInLoc = '';
    data.cache = gs.getSession().getClientData("cacheLocation");
    data.sessionLocVal = gs.getSession().getClientData("sessionLocval") || '';
    var catItems = [];

    /*
    if (input.sessionLocval &amp;&amp; input.sessionLocval != '' &amp;&amp; input) {
        if (input.sessionLocval != gs.getSession().getClientData("sessionLocval") &amp;&amp; (gs.getSession().getClientData("sessionLocval") == '' || gs.getSession().getClientData("sessionLocval") == undefined || gs.getSession().getClientData("sessionLocval") == null)) {
            data.sessionLocVal = gs.getSession().getClientData("sessionLocval") || '';
            gs.getSession().putClientData("sessionLocval", input.sessionLocval);
        }
        if (input.sessionLocdisplayval != gs.getSession().getClientData("sessionLocdispval") &amp;&amp; (gs.getSession().getClientData("sessionLocdispval") == '' || gs.getSession().getClientData("sessionLocdispval") == undefined || gs.getSession().getClientData("sessionLocdispval") == null))
            gs.getSession().putClientData("sessionLocdispval", input.sessionLocdisplayval);

    }*/
    /*if (!input) {

        data.locationCache = gs.getSession().getClientData("cacheLocation1");
    } else {
        data.locationCache = input.inputloc;

    }*/

    if (input &amp;&amp; input.action == 'categoryselected') {
        if (input &amp;&amp; input.categorys)
            data.categorys = input.categorys;
        if (input &amp;&amp; input.hoursValue)
            data.hoursValue = input.hoursValue;
        if (input &amp;&amp; input.distanceVal)
            data.distanceVal = input.distanceVal;
        if (input &amp;&amp; input.changeInLoc)
            data.locationCache = input.changeInLoc;

        if (global.JSUtil.notNil(data.keywordItems)) {
            var resLoc = new GlideRecord("x_dnll4_reseng_location_resource");
            resLoc.addEncodedQuery("u_resource.u_resource_nameLIKE" + data.keywordItems + "^ORu_phoneLIKE" + data.keywordItems.toString() + "^ORu_resource_descriptionLIKE" + data.keywordItems + "^ORu_resource.u_account.nameLIKE" + data.keywordItems+"^u_status=Active");
            resLoc.query();
            while (resLoc.next()) {
                if (global.JSUtil.notNil(resLoc.u_resource.u_catalog_item) &amp;&amp; catItems.indexOf(resLoc.u_resource.u_catalog_item.sys_id.toString()) == -1)
                    catItems.push(resLoc.u_resource.u_catalog_item.sys_id.toString());
            }
            console.log(catItems.length);
        }
        var catalogName = ''; //Added by Sourav

        data.show_popular_item = false;



        data.categories = [];

        data.items = [];
        data.locationCheckCheck = global.JSUtil.nil(data.locationCache);
        for (var i = 0; i &lt; data.categorys.length; i++) {

            data.category = {};


            var categoryId = data.categorys[i] + '';

            var categoryJS = new sn_sc.CatCategory(categoryId);
            data.category = {
                title: categoryJS.getTitle(),
                description: categoryJS.getDescription(),
                items: [],
                goalDetails: [],
                sys_id: categoryId

            };


            // 			var catalog = $sp.getCatalogs().value;
            var catalog = catalogSysId;
            console.log("catalog=" + catalog);
            var itemsInPage = 400;

            data.limit = itemsInPage;
            if (input &amp;&amp; input.startWindow) {
                data.endWindow = input.endWindow;
            } else {
                data.startWindow = 0;
                data.endWindow = 0;
            }

            data.startWindow = data.endWindow;
            data.endWindow = data.endWindow + itemsInPage;

            var itemGR = queryItems(catalog, categoryId);

            if (itemGR.hasNext()) {


                data.reqItem = [];
                data.reqItem = fetchItemDetails(itemGR, data.reqItem, categoryId);
                //console.log(JSON.stringify(data.reqItem)+"data.reqItem")
                console.log(data.reqItem.length + "data.reqItem");
            }
            var reqItems = data.reqItem;
            if (global.JSUtil.notNil(data.hoursValue)) {
                console.log('data.hours');
                hoursCatItems = new x_dnll4_reseng.Reseng_resourcePortalUtils().getResourcesPerHour(data.hoursValue, data.reqItem);

                data.reqItem = reqItems.filter(function(n) {

                    return hoursCatItems.indexOf(n) !== -1;
                });

            }
            data.countItems = data.countItems + data.reqItem.length;



            //***********************Goal Implementation as part of story STRY0010079*****************************

            var subArche = $sp.getParameter('Archetype');
            if (global.JSUtil.notNil(subArche)) {
                var catItemDet = data.reqItem;
                var goalDetails = [];
                var goals = [];

                var archeView = new GlideAggregate('x_dnll4_reseng_archetype_goal_taxonomy_resource_mapping');
                archeView.addEncodedQuery('arc_sys_id=' + subArche + '^goal_u_arche_types.u_record_type=1^goal_u_goal.u_domain=' + data.category.title);
                archeView.groupBy('goal_u_goal');
                archeView.query();
                while (archeView.next()) {
                    if (goals.indexOf(archeView.goal_u_goal.toString()) == -1) {
                        goals.push(archeView.goal_u_goal.toString());
                        var resources = [];

                        var goalDetail = {
                            goalTitle: archeView.goal_u_goal.u_title.getDisplayValue(),
                            goalItems: [],
                            goalSysId: archeView.goal_u_goal.toString()
                        };
                        var archeView2 = new GlideAggregate('x_dnll4_reseng_archetype_goal_taxonomy_resource_mapping');
                        archeView2.addEncodedQuery('arc_sys_id=' + subArche + '^goal_u_arche_types.u_record_type=1^goal_u_goal=' + archeView.goal_u_goal + '^goal_u_goal.u_domain=' + data.category.title);
                        archeView2.groupBy('res_u_resource');
                        archeView2.query();

                        while (archeView2.next()) {
                            //if(resources.indexOf(archeView2.res_u_resource.u_catalog_item.sys_id.toString()) == -1){
                            resources.push(archeView2.res_u_resource.u_catalog_item.toString());
                            //	}

                        }

                        data.reqItem = catItemDet.filter(function(n) {
                            console.log("resources= " + resources);
                            return resources.indexOf(n.sys_id) !== -1;

                        });
                        console.log(data.reqItem.length + "req item d");
                        goalDetail.goalItems = data.reqItem;
                        goalDetail.length = data.reqItem.length;
                        goalDetail.defaultLen = 2;

                        goalDetails.push(goalDetail);

                        data.items = data.items.concat(data.reqItem);

                    }

                }

                var goalArche = new GlideRecord('x_dnll4_reseng_m2m_arche_types_goals');
                goalArche.addEncodedQuery('u_arche_types.sys_id=' + $sp.getParameter('Archetype') + '^u_goal.u_domain=' + data.category.title);
                goalArche.query();
                while (goalArche.next()) {
                    if (goals.indexOf(goalArche.u_goal.toString()) == -1) {
                        var goalsAdd = {};
                        goalsAdd.goalItems = [];
                        goalsAdd.goalTitle = goalArche.u_goal.u_title.toString();
                        goalsAdd.defaultLen = 0;
                        goalsAdd.goalSysId = goalArche.u_goal.toString();
                        goalDetails.push(goalsAdd);
                    }
                }


                data.category.goalDetails = goalDetails;
                data.categories.push(data.category);

            } else if (global.JSUtil.notNil(data.cat_id) || global.JSUtil.notNil(data.keywordItems)) {

                data.items = data.items.concat(data.reqItem);
                //console.log("inside else if 242"+global.JSON.stringify(data.reqItem));
                data.category.items = data.reqItem;
                data.categories.push(data.category);
            }
        }

        //console.log(data.categories);
        if (data.items.length &gt; data.limit)
            data.show_more = true;

        //console.log("data.categories " + JSON.stringify(data.categories));

        data.all_catalog_msg = (($sp.getCatalogs().value + "").split(",")).length &gt; 1 ? gs.getMessage("All Catalogs") : "";


        data.isLoaded = true;
    }

    function fetchItemDetails(itemRecord, items, categoryId) {

        while (itemRecord.next()) {
            var resSysID;
            var catalogItemJS = new sn_sc.CatItem(itemRecord.getUniqueValue());

            var catItemDetails = catalogItemJS.getItemSummary();
            var item = {};
            item.name = catItemDetails.name;
            catalogName = item.name; //Added by Sourav
            item.short_description = catItemDetails.short_description;
            item.picture = catItemDetails.picture;
            item.price = catItemDetails.price;
            item.sys_id = catItemDetails.sys_id;
            //minal
            var citem = new GlideRecord('sc_cat_item');
            citem.get(item.sys_id.toString());
            var res = new GlideRecord('x_dnll4_reseng_resource');
            res.addQuery('u_catalog_item', citem.sys_id);
            res.addEncodedQuery('u_catalog_itemISNOTEMPTY');
            //res.addEncodedQuery("sys_created_on&lt;javascript:gs.dateGenerate('2022-01-01','00:00:00')");
            res.query();
            if (res.next()) {
                data.acc = res.u_account.getDisplayValue();
                item.org = res.u_account.toString();
                resSysID = res.sys_id;

            }
           /* var locResource = new GlideRecord('x_dnll4_reseng_location_resource');
            //locResource.addEncodedQuery("sys_created_on&lt;javascript:gs.dateGenerate('2022-01-01','00:00:00')");
            locResource.addQuery('u_resource', resSysID);
            locResource.addEncodedQuery('u_locationISNOTEMPTY^u_resourceISNOTEMPTY');
            locResource.query();
            if (locResource.next()) {
                item.loc = locResource.u_location.toString();
                item.resId = locResource.sys_id.toString();
            }

            item.showButton = false;
            var locRes = new GlideRecord('x_dnll4_reseng_location_resource');
            //locRes.addEncodedQuery("sys_created_on&lt;javascript:gs.dateGenerate('2022-01-01','00:00:00')");
            locRes.addEncodedQuery('u_locationISNOTEMPTY^u_resourceISNOTEMPTY');
            locRes.addQuery('u_resource', resSysID);
            locRes.addQuery('u_hide_connect', false);

            locRes.query();
            if (locRes.next()) {
                item.showButton = true;
            }*/
            //-----
            item.hasPrice = catItemDetails.show_price;
            item.page = 'reseng_of_sc_cat_item';
            item.type = catItemDetails.type;
            item.order = catItemDetails.order;
            item.sys_class_name = catItemDetails.sys_class_name;
            item.categoryId = categoryId;

            var arr = [];
            var obj;

/////Nearest Resource calculation/////
            var locationResource = new GlideRecord('x_dnll4_reseng_location_resource');
            locationResource.addEncodedQuery('u_locationISNOTEMPTY^u_resourceISNOTEMPTY^u_location.latitudeISNOTEMPTY^u_location.longitudeISNOTEMPTY^u_status=Active');
            locationResource.addQuery('u_resource.u_catalog_item', catItemDetails.sys_id.toString());
            locationResource.query();
            var arrayID = [];
            var arrayDist = [];
            while (locationResource.next()) {
                obj = {};
                var latitude = locationResource.u_location.latitude;
                var longitude = locationResource.u_location.longitude;
                var iploc = data.locationCache;
                var distanceinmiles = new x_dnll4_reseng.RESENG_DistanceUtils().calculatemiles(iploc.lat, iploc.lng, latitude, longitude);
                var dismil = Math.round(distanceinmiles);
				
                arrayID.push(locationResource.sys_id.toString());
                arrayDist.push(dismil);
            }
            var index = 0;
            var min = arrayDist[index];

            for (var i = 1; i &lt; arrayDist.length; i++) {
                if (arrayDist[i] &lt;= min) {
                    min = arrayDist[i];
                    index = i;
                }
            }
			item.showMiles = true;
			if(arrayDist[index]){
            item.distance = arrayDist[index];
			}else{
				item.distance = '';
				item.showMiles = false;
			}
			item.nearestLoc = arrayID[index];

/////Nearest Resource calculation/////
			var locResource = new GlideRecord('x_dnll4_reseng_location_resource');
            //locResource.addEncodedQuery("sys_created_on&lt;javascript:gs.dateGenerate('2022-01-01','00:00:00')");
            /*locResource.addQuery('u_resource', resSysID);
            locResource.addEncodedQuery('u_locationISNOTEMPTY^u_resourceISNOTEMPTY');*/
			locResource.get(arrayID[index]);
            locResource.query();
            if (locResource.next()) {
                item.loc = locResource.u_location.toString();
                item.resId = locResource.sys_id.toString();
            }

            item.showButton = false;
            var locRes = new GlideRecord('x_dnll4_reseng_location_resource');
            //locRes.addEncodedQuery("sys_created_on&lt;javascript:gs.dateGenerate('2022-01-01','00:00:00')");
            locRes.addQuery('sys_id',arrayID[index]);
            locRes.addQuery('u_resource', resSysID);
            locRes.addQuery('u_hide_connect', false);
            locRes.query();
            if (locRes.next()) {
                item.showButton = true;
            }


            // 			var resUtil = new x_dnll4_reseng.Reseng_resourcePortalUtils();
            var resUtil = new global.Reseng_resourcePortalUtilsGlobal();
            var location = new GlideRecord('x_dnll4_reseng_location_resource');
            //location.addEncodedQuery('u_locationISNOTEMPTY^u_resourceISNOTEMPTY^u_location.latitudeISNOTEMPTY^u_location.longitudeISNOTEMPTY');
            //location.addEncodedQuery("sys_created_on&lt;javascript:gs.dateGenerate('2022-01-01','00:00:00')");
            //location.addQuery('u_resource.u_catalog_item', catItemDetails.sys_id.toString());
            location.get(arrayID[index]);
            location.query();
            if (location.next()) {
                item.locSysId = location.u_location.toString();
                item.latitude = location.u_location.latitude;
                item.longitude = location.u_location.longitude;
				item.timezone = location.u_time_zone.getDisplayValue();
				
                if (global.JSUtil.notNil(location.u_phone))
                    item.phone = location.u_phone.toString();
                if (global.JSUtil.notNil(location.u_mondayopen)) {
                    //var mondayopen = resUtil.convertTimeZone(location.u_time_zone, location.u_mondayopen);
					var mondayopen = location.getDisplayValue("u_mondayopen");
                    var monopen = mondayopen.split(":");
                }
                if (global.JSUtil.notNil(location.u_mondayclose)) {
//                     var mondayclose = resUtil.convertTimeZone(location.u_time_zone, location.u_mondayclose);
					var mondayclose = location.getDisplayValue("u_mondayclose");
                    var monclose = mondayclose.split(":");
                }
                if (global.JSUtil.notNil(location.u_tuesdayopen)) {
//                     var tuesdayopen = resUtil.convertTimeZone(location.u_time_zone, location.u_tuesdayopen);
					var tuesdayopen = location.getDisplayValue("u_tuesdayopen");
                    var tuesopen = tuesdayopen.split(":");
                }
                if (global.JSUtil.notNil(location.u_tuesdayclose)) {
//                     var tuesdayclose = resUtil.convertTimeZone(location.u_time_zone, location.u_tuesdayclose);
					var tuesdayclose = location.getDisplayValue("u_tuesdayclose");
                    var tuesclose = tuesdayclose.split(":");
                }
                if (global.JSUtil.notNil(location.u_wednesdayopen)) {
//                     var wednesdayopen = resUtil.convertTimeZone(location.u_time_zone, location.u_wednesdayopen);
					var wednesdayopen = location.getDisplayValue("u_wednesdayopen");
                    var wedopen = wednesdayopen.split(":");
                }
                if (global.JSUtil.notNil(location.u_wednesdayclose)) {
//                     var wednesdayclose = resUtil.convertTimeZone(location.u_time_zone, location.u_wednesdayclose);
					var wednesdayclose = location.getDisplayValue("u_wednesdayclose");
                    var wedclose = wednesdayclose.split(":");
                }
                if (global.JSUtil.notNil(location.u_thursdayopen)) {
//                     var thursdayopen = resUtil.convertTimeZone(location.u_time_zone, location.u_thursdayopen);
					var thursdayopen = location.getDisplayValue("u_thursdayopen");
                    var thuopen = thursdayopen.split(":");
                }
                if (global.JSUtil.notNil(location.u_thursdayclose)) {
//                     var thursdayclose = resUtil.convertTimeZone(location.u_time_zone, location.u_thursdayclose);
					var thursdayclose = location.getDisplayValue("u_thursdayclose");
                    var thuclose = thursdayclose.split(":");
                }
                if (global.JSUtil.notNil(location.u_fridayopen)) {
//                     var fridayopen = resUtil.convertTimeZone(location.u_time_zone, location.u_fridayopen);
					var fridayopen = location.getDisplayValue("u_fridayopen");
                    var friopen = fridayopen.split(":");
                }
                if (global.JSUtil.notNil(location.u_fridayclose)) {
//                     var fridayclose = resUtil.convertTimeZone(location.u_time_zone, location.u_fridayclose);
					var fridayclose = location.getDisplayValue("u_fridayclose");
                    var friclose = fridayclose.split(":");
                }
                if (global.JSUtil.notNil(location.u_saturdayopen)) {
//                     var saturdayopen = resUtil.convertTimeZone(location.u_time_zone, location.u_saturdayopen);
					var saturdayopen = location.getDisplayValue("u_saturdayopen");
                    var satopen = saturdayopen.split(":");
                }
                if (global.JSUtil.notNil(location.u_saturdayclose)) {
//                     var saturdayclose = resUtil.convertTimeZone(location.u_time_zone, location.u_saturdayclose);
					var saturdayclose = location.getDisplayValue("u_saturdayclose");
                    var satclose = saturdayclose.split(":");
                }
                if (global.JSUtil.notNil(location.u_sundayopen)) {
//                     var sundayopen = resUtil.convertTimeZone(location.u_time_zone, location.u_sundayopen);
					var sundayopen = location.getDisplayValue("u_sundayopen");
                    var sunopen = sundayopen.split(":");
                }
                if (global.JSUtil.notNil(location.u_sundayclose)) {
//                     var sundayclose = resUtil.convertTimeZone(location.u_time_zone, location.u_sundayclose);
					var sundayclose = location.getDisplayValue("u_sundayclose");
                    var sunclose = sundayclose.split(":");
                }

                var dt = new GlideDateTime();
                var nowDay = dt.getDayOfWeekUTC();
                var now_date = resUtil.convertTimeZone(location.u_time_zone, dt);
// 				var now_date_time = dt.getTime();
// 				var now_date = now_date_time.getByFormat('hh:mm:ss');
                var now_time = now_date.split(":");
                if (nowDay == 1 &amp;&amp; global.JSUtil.notNil(monopen) &amp;&amp; global.JSUtil.notNil(monclose)) {
                    data.timeCal = resUtil.calculateTimeDiff(monopen[0], monclose[0], now_time[0]);
                    item.openToday = resUtil.convertDateToHourFormat(monopen[0], monopen[1]);
                    item.closeToday = resUtil.convertDateToHourFormat(monclose[0], monclose[1]);
                } else if (nowDay == 2 &amp;&amp; global.JSUtil.notNil(tuesopen) &amp;&amp; global.JSUtil.notNil(tuesclose)) {
                    data.timeCal = resUtil.calculateTimeDiff(tuesopen[0], tuesclose[0], now_time[0]);
                    item.openToday = resUtil.convertDateToHourFormat(tuesopen[0], tuesopen[1]);
                    item.closeToday = resUtil.convertDateToHourFormat(tuesclose[0], tuesclose[1]);
                } else if (nowDay == 3 &amp;&amp; global.JSUtil.notNil(wedopen) &amp;&amp; global.JSUtil.notNil(wedclose)) {
                    data.timeCal = resUtil.calculateTimeDiff(wedopen[0], wedclose[0], now_time[0]);
                    item.openToday = resUtil.convertDateToHourFormat(wedopen[0], wedopen[1]);
                    item.closeToday = resUtil.convertDateToHourFormat(wedclose[0], wedclose[1]);
                } else if (nowDay == 4 &amp;&amp; global.JSUtil.notNil(thuopen) &amp;&amp; global.JSUtil.notNil(thuclose)) {
                    data.timeCal = resUtil.calculateTimeDiff(thuopen[0], thuclose[0], now_time[0]);
                    item.openToday = resUtil.convertDateToHourFormat(thuopen[0], thuopen[1]);
                    item.closeToday = resUtil.convertDateToHourFormat(thuclose[0], thuclose[1]);
                } else if (nowDay == 5 &amp;&amp; global.JSUtil.notNil(friopen) &amp;&amp; global.JSUtil.notNil(friclose)) {
                    data.timeCal = resUtil.calculateTimeDiff(friopen[0], friclose[0], now_time[0]);
                    item.openToday = resUtil.convertDateToHourFormat(friopen[0], friopen[1]);
                    item.closeToday = resUtil.convertDateToHourFormat(friclose[0], friclose[1]);
                } else if (nowDay == 6 &amp;&amp; global.JSUtil.notNil(satopen) &amp;&amp; global.JSUtil.notNil(satclose)) {
                    data.timeCal = resUtil.calculateTimeDiff(satopen[0], satclose[0], now_time[0]);
                    item.openToday = resUtil.convertDateToHourFormat(satopen[0], satopen[1]);
                    item.closeToday = resUtil.convertDateToHourFormat(satclose[0], satclose[1]);
                } else if (nowDay == 7 &amp;&amp; global.JSUtil.notNil(sunopen) &amp;&amp; global.JSUtil.notNil(sunclose)) {
                    data.timeCal = resUtil.calculateTimeDiff(sunopen[0], sunclose[0], now_time[0]);
                    item.openToday = resUtil.convertDateToHourFormat(sunopen[0], sunopen[1]);
                    item.closeToday = resUtil.convertDateToHourFormat(sunclose[0], sunclose[1]);
                }
                data.openToday = item.openToday;
                data.closedToday = item.closeToday;
				data.timezone = item.timezone;
				
				if (global.JSUtil.notNil(locRes.u_sundayclose) &amp;&amp; (locRes.u_sundayclose.getDisplayValue() != '00:00:00')) {
//             sundayclose = resUtil.convertTimeZone(locRes.u_time_zone, locRes.u_sundayclose);
			sundayclose = locRes.getDisplayValue("u_sundayclose");
            sunclose = sundayclose.split(":");
        } 
		
        //Monday
        if ((location.u_mondayopen.getDisplayValue() != '00:00:00') &amp;&amp; global.JSUtil.notNil(monopen) &amp;&amp; global.JSUtil.notNil(monclose)) {

            data.monday = true;
        } else
            data.monday = false;

        //Tuesday
        if ((location.u_tuesdayopen.getDisplayValue() != '00:00:00') &amp;&amp; global.JSUtil.notNil(tuesopen) &amp;&amp; global.JSUtil.notNil(tuesclose)) {

            data.tuesday = true;
        } else
            data.tuesday = false;

        //Wednesday
        if ((location.u_wednesdayopen.getDisplayValue() != '00:00:00') &amp;&amp; global.JSUtil.notNil(wedopen) &amp;&amp; global.JSUtil.notNil(wedclose)) {

            data.wednesday = true;
        } else
            data.wednesday = false;

        //Thursday
        if ((location.u_thursdayopen.getDisplayValue() != '00:00:00') &amp;&amp; global.JSUtil.notNil(thuopen) &amp;&amp; global.JSUtil.notNil(thuclose)) {

            data.thursday = true;
        } else
            data.thursday = false;

        //Friday
        if ((location.u_fridayopen.getDisplayValue() != '00:00:00') &amp;&amp; global.JSUtil.notNil(friopen) &amp;&amp; global.JSUtil.notNil(friclose)) {

            data.friday = true;
        } else
            data.friday = false;

        //Saturday
        if ((location.u_saturdayopen.getDisplayValue() != '00:00:00') &amp;&amp; global.JSUtil.notNil(satopen) &amp;&amp; global.JSUtil.notNil(satclose)) {

            data.saturday = true;
        } else
            data.saturday = false;

        //Sunday
        if ((location.u_sundayopen.getDisplayValue() != '00:00:00') &amp;&amp; global.JSUtil.notNil(sunopen) &amp;&amp; global.JSUtil.notNil(sunclose)) {
            data.sunday = true;
        } else
            data.sunday = false;
				
		var gdt1 = new GlideDateTime();
        var today = gdt1.getDayOfWeekUTC();
        if (today == 1)
            item.showTimings = data.monday;
        else if (today == 2)
            item.showTimings = data.tuesday;
        else if (today == 3)
            item.showTimings = data.wednesday;
        else if (today == 4)
            item.showTimings = data.thursday;
        else if (today == 5)
            item.showTimings = data.friday;
        else if (today == 6)
            item.showTimings = data.saturday;
        else
            item.showTimings = data.sunday;


                //Added By Sourav
                //var iploc = new GlideRecord('cmn_location');
                //iploc.addQuery('sys_id', data.locationCache);
                //iploc.query();
                //if (iploc.next()) {
                /*var iploc = data.locationCache;
                var distanceinmiles = new x_dnll4_reseng.RESENG_DistanceUtils().calculatemiles(iploc.lat, iploc.lng, item.latitude, item.longitude);
                var dismil = Math.round(distanceinmiles);
                item.distance = dismil;*/
                //}
            }





            data.showCB = [];
            data.showCB = new x_dnll4_reseng.Reseng_ConnectUtils().connectInplan();
            if (data.showCB.indexOf(catItemDetails.sys_id) === -1) {
                item.resourceItem = false;
            } else {
                item.resourceItem = true;
            }
            data.addButton = [];
            data.addButton = new x_dnll4_reseng.RESENG_AddToFavouritesUtils().checkResource();
            if (data.addButton.indexOf(catItemDetails.sys_id) == -1) {
                item.addItem = false;
            } else {
                item.addItem = true;
            }
            var distanceCheck = false;
            var kewordCheck = false;

            //Added for Distance Filter
            // Added by shalu------Story STRY0013234
            // 			if ((data.distanceVal != 'all'&amp;&amp; data.distanceVal !=undefined &amp;&amp; data.distanceVal!='' &amp;&amp; item.distance != undefined  &amp;&amp; item.distance != '') || global.JSUtil.notNil(data.keywordItems)) {
            if (global.JSUtil.notNil(data.keywordItems)) {
                if (catItems.indexOf(item.sys_id.toString()) != -1) {
                    if ((data.distanceVal != 'all' &amp;&amp; data.distanceVal != undefined &amp;&amp; data.distanceVal != '' &amp;&amp; item.distance != undefined &amp;&amp; item.distance != '')) {

                        if (!(item.distance &gt; data.distanceVal)) {
                            distanceCheck = true;
                        } else
                            distanceCheck = false;
                    } else if (data.distanceVal == 'all') {
                        distanceCheck = true;
                    }
                    // 				if (data.distanceVal != 'all' &amp;&amp; data.distanceVal !=undefined &amp;&amp; data.distanceVal!='' &amp;&amp; item.distance != undefined  &amp;&amp; item.distance != '') {

                    // 					if (!(item.distance &gt; data.distanceVal))	{	
                    // 						distanceCheck = true;				
                    // 					}
                    // 					else 
                    // 						kewordCheck = false;
                    // 				}

                    // 				if (kewordCheck || distanceCheck) {
                    // 					items.push(item);

                    // 				}


                    // 			} else {
                    // 				items.push(item);
                    // 				//	data.items.push(item);
                    // 			}



                }

            } else if (data.distanceVal != 'all' &amp;&amp; data.distanceVal != undefined &amp;&amp; data.distanceVal != '' &amp;&amp; item.distance != undefined &amp;&amp; item.distance != '' &amp;&amp; global.JSUtil.nil(data.keywordItems)) {
                if (!(item.distance &gt; data.distanceVal)) {
                    distanceCheck = true;
                } else
                    distanceCheck = false;
            } else {
                distanceCheck = true;
            }

            if (distanceCheck) {
                items.push(item);
            }

        }
        return items;
    }

    function queryItems(catalog, categoryId) {

        var scRecord = '';

        scRecord = new sn_sc.CatalogSearch().search(catalog, categoryId, '', false, false);

        scRecord.addQuery('sys_class_name', 'NOT IN', 'sc_cat_item_wizard');
        scRecord.addEncodedQuery('hide_sp=false^ORhide_spISEMPTY^visible_standalone=true');
        scRecord.addQuery('sc_catalogs', catalog);
        scRecord.orderBy('order');
        scRecord.orderBy('name');
        scRecord.query();

        return scRecord;
    }


    //	console.log(data.items);

    data.loggedIn = gs.getUser().hasRole('sn_customerservice.consumer');
    data.cploggedIn = gs.getUser().hasRole('sn_customerservice.customer') &amp;&amp; !gs.getUser().hasRole('admin');


    //Added By Sourav for Connect Functionality	
    if (input &amp;&amp; input.cat_sys_id != undefined) {
        var resourceSys = new x_dnll4_reseng.Reseng_ConnectUtils().queryCatItem(input.cat_sys_id, input.locId);
        gs.addInfoMessage(resourceSys);
    }
    //ADDED BY SHWETHA - Add to favorites
    if (input &amp;&amp; input.addId != undefined) {
        var addResource = new x_dnll4_reseng.RESENG_AddToFavouritesUtils().addToFavourites(input.addId);
        gs.addInfoMessage(addResource);
    }
    if (input &amp;&amp; input.removeId != undefined) {
        var removeResource = new x_dnll4_reseng.RESENG_AddToFavouritesUtils().removeFromFavourites(input.removeId);
        gs.addInfoMessage(removeResource);
    }

    //             data.reg_widget = $sp.getWidget("reseng_registration_connect");
    data.reg_widget = $sp.getWidget("reseng_registration_connect_global");


    var cat_sys_id = [];
    console.log(typeof data.reqItem);
    if (data.reqItem != undefined &amp;&amp; data.reqItem != null) {
        for (var j = 0; j &lt; data.reqItem.length; j++) {
            cat_sys_id.push(data.reqItem[j].sys_id);
        }
    }
    //console.log('catItmes from Archetype Detail Widget' + JSON.stringify(data.items));
    gs.getSession().putClientData("sessionLocalItemArray", cat_sys_id.toString());



})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;souravdas&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-04-01 09:03:34&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;5f7fd91287aac1104ad14007cebb35f9&lt;/sys_id&gt;&lt;sys_mod_count&gt;171&lt;/sys_mod_count&gt;&lt;sys_name&gt;RESENG ArcheType Detail &lt;/sys_name&gt;&lt;sys_package display_value="Resource Engine" source="x_dnll4_reseng"&gt;8d85ea9b1b5e8910d96475de034bcb5f&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Resource Engine"&gt;8d85ea9b1b5e8910d96475de034bcb5f&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_5f7fd91287aac1104ad14007cebb35f9&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;jecherian&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-05-12 12:16:06&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div ng-if = "c.showSCwidget" &gt;
  &lt;div class="m-t-sm " ng-class="{'hidden-xs' : hideItemWidget, 'm-l-sm': !isMobile}"&gt;
    &lt;h4 ng-if="data.error"&gt;{{data.error}}&lt;/h4&gt;
    &lt;div ng-init="spSearch.targetCatalog()" role="tabpanel" aria-labelledby="{{data.category_id &amp;&amp; data.category_id != -1 ? 'tab_' + data.category_id : null}}" id="tabpanel_{{data.category_id}}"&gt;
      &lt;div class="row"&gt;
        &lt;div class="col-xs-9"&gt;
          &lt;a ng-click="showCategories()" class="visible-xs m-b-sm pointer" aria-label="${All Categories}"&gt;
            &lt;i class="fa fa-chevron-left m-r-xs"&gt;&lt;/i&gt; ${All Categories}
          &lt;/a&gt;
          &lt;h2 class="h4 m-t-none break-word" aria-label="{{data.category.title}} ${Category}" role="heading" aria-level="2"&gt;&lt;/h2&gt;   
        &lt;/div&gt; 
        &lt;div class="col-xs-3" ng-if="!isMobile"&gt;
          &lt;div role="tablist" class="pull-right padder-t-sm text-lg toggle" ng-show="!data.error &amp;&amp; data.items.length &gt; 0"&gt;
            &lt;i class="fa fa-th" ng-click="changeView('card')" aria-label="${Card View}" ng-class="{'active' : view == 'card'}" role="tab" aria-selected="{{view == 'card'}}" uib-tooltip="${Card View}" tooltip-placement="top" tooltip-enable="!isTouchDevice()" tooltip-append-to-body="true" aria-label="${Card View}" tabindex="0"&gt;&lt;/i&gt;
            &lt;span class="m-l-sm m-r-sm " aria-hidden="true"&gt; | &lt;/span&gt;
            &lt;i class="fa fa-list-ul" ng-click="changeView('grid')" aria-label="${Grid View}" ng-class="{'active' : view == 'grid'}" role="tab" aria-selected="{{view == 'grid'}}" uib-tooltip="${Grid View}" tooltip-placement="top" tooltip-enable="!isTouchDevice()" tooltip-append-to-body="true" aria-label="${Grid View}" tabindex="0"&gt;&lt;/i&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!--  &lt;div class="row"&gt;
&lt;div class="col-sm-6 col-md-4" ng-if="!data.items.length &amp;&amp; !data.error"&gt;
${No items in category}
&lt;/div&gt;
&lt;/div&gt; --&gt;
      &lt;div ng-if="!c.data.isLoaded"&gt;
        &lt;img  style="margin-left : auto; margin-right : auto; display: block;" src="dataLoader.svg"/&gt;
      &lt;/div&gt;
&lt;div ng-if="c.data.isLoaded"&gt;
      &lt;div ng-if="data.catIdUrl"&gt;
        
        &lt;div&gt;&lt;h2 class="h4 m-t-none m-b-xs text-overflow-ellipsis"&gt; Displaying {{data.countItems}} results.&lt;/h2&gt;&lt;/div&gt;
        &lt;div class="row" ng-repeat="category in data.categories track by $index"&gt;
          &lt;div class="table table-striped item-table" ng-if="view == 'grid'" &gt;

            &lt;div&gt;
              &lt;table class="table table-striped item-table"&gt;
                &lt;tbody&gt;
                  &lt;tr ng-repeat="item in category.items"&gt;
                    &lt;th headers="id-header-item id-item-{{item.sys_id}}" scope="row" class="th-row-data"&gt;
                      &lt;div&gt;
                        &lt;!--&lt;img ng-src="{{item.picture}}?t=small" ng-if="item.picture" alt="" class="m-r-sm m-b-sm item-image pull-left"/&gt; --&gt;
                        &lt;!--&lt;a target="{{item.target}}" ng-href="{{getItemHREF(item)}}" ng-click="onClick($event, item)"&gt; --&gt;
                        &lt;a ng-href="{{getItemHREF(item)}}" ng-click="c.openResourceDetail(item)"&gt;
                          &lt;span&gt;{{item.name}}&lt;/span&gt;
                          &lt;span ng-if="item.content_type == 'external'"&gt;&lt;span class="sr-only"&gt;${External Link}&lt;/span&gt;  ➚&lt;/span&gt;
                        &lt;/a&gt;
                      &lt;/div&gt;
                    &lt;/th&gt;
                    &lt;td headers="id-header-description id-item-{{item.sys_id}}" class="break-word"&gt;{{item.short_description}}&lt;/td&gt;
                    &lt;td headers="id-header-price id-item-{{item.sys_id}}"&gt;{{item.price}}&lt;/td&gt;
                  &lt;/tr&gt;
                &lt;/tbody&gt;
              &lt;/table&gt;
            &lt;/div&gt;


          &lt;/div&gt;

          &lt;div ng-if="view == 'card'"&gt;

            &lt;div class="col-md-12 col-md-4" ng-repeat="item in category.items track by $index"&gt;
              &lt;div class="panel panel-{{options.color}} b"&gt;
                &lt;!-- &lt;a target="{{item.target}}" ng-href="{{getItemHREF(item)}}" ng-click="onClick($event, item)" class="panel-body block" sn-focus="{{item.highlight}}"&gt; --&gt;
                &lt;div style="height:19rem;background:var(--c-REGrey,#f5f8fc);"class="overflow-100"&gt;
                  &lt;!--&lt;a target="{{item.target}}" ng-href="{{getItemHREF(item)}}" ng-click="onClick($event, item)"&gt; --&gt;
                        &lt;a href="javascript:void(0)" ng-click="c.openResourceDetail(item)"&gt;
                    &lt;h3 class="h4 m-t-none m-b-xs text-overflow-ellipsis" title="{{item.name}}" style="padding:15px 0px 0px 20px; font-size:22px;"&gt;{{item.name}}&lt;span ng-if="item.content_type == 'external'" aria-label="${External Link}"&gt; ➚&lt;/span&gt;&lt;/h3&gt;
                  &lt;/a&gt;
                  &lt;img ng-src="{{item.picture}}?t=small" ng-if="item.picture" alt="{{item.name}}" class="m-r-sm m-b-sm item-image pull-left" /&gt;
                  &lt;div style="padding:0px 0px 0px 20px; font-size:large;"class="text-muted item-short-desc break-word" aria-hidden="{{item.name !== null}}" role="presentation"&gt;
                    {{item.short_description}}
                    &lt;!--ADDEDD BY SHWETHA --&gt;
                    &lt;span ng-show="{{item.showButton}}"&gt;&lt;button ng-if="data.cploggedIn" style="float: right;margin:0px 5px 5px 0px;width: 170px;background-color: var(--c-REBlue,#1D7988);" class="btn btn-primary" ng-click="c.createReferal(item.org, item.loc, item.resId)"&gt;${Refer}&lt;/button&gt;&lt;/span&gt;
                  &lt;/div&gt;
                  &lt;div ng-if="item.showMiles" style="padding:0px 0px 0px 20px; font-size:20px" class="text-muted item-short-desc break-word" aria-hidden="{{item.name !== null}}"&gt;{{item.distance}}&amp;nbsp &lt;span style="font-size:1.5rem;"&gt;Miles&lt;/span&gt;&lt;/div&gt;
                  &lt;div class="text-muted break-word"&gt;
                    &amp;nbsp; &lt;a href="tel:{{item.phone}}"&gt;&lt;i style="padding:3rem 0px 0px 20px;font-size:22px"class="fa fa-phone"&gt;&lt;/i&gt;&amp;nbsp; &amp;nbsp;&lt;span style="font-size:1.8rem;"&gt;{{item.phone}}&lt;/span&gt;&lt;/a&gt;
                    &lt;span ng-show="{{item.showButton}}"&gt;
                      &lt;button ng-if="!data.loggedIn &amp;&amp; !data.cploggedIn"  style="float: right;padding:0.7rem 8rem;margin-right:1rem;background-color: white;color: var(--c-REBlue,#1D7988);border-color:grey;font-size:16px" class="btn btn-primary" ng-click="c.connectNLogged(item.sys_id,item.categoryId,item.nearestLoc)"&gt;${Connect}&lt;/button&gt;  
                      &lt;!-- c.inplanvalue() --&gt;           
                      &lt;button  ng-if="item.resourceItem &amp;&amp; data.loggedIn" name="in_plan" style="float: right;padding:0.7rem 8.4rem;margin-right:1rem;background-color: white;color:light-grey;border-color:grey; cursor:context-menu;font-size:16px" class="btn btn-light" title="In Plan" disabled &gt; ${In Plan} &lt;/button&gt;
                      &lt;button ng-if="data.loggedIn &amp;&amp; !item.resourceItem" style="float: right;padding:0.7rem 8rem;margin-right:1rem;background-color: white;color: var(--c-REBlue,#1D7988);border-color:grey;font-size:16px" class="btn btn-primary btn-mid" ng-click="c.createCase1(item.sys_id,item.categoryId,item.nearestLoc)"&gt;${Connect}&lt;/button&gt; 
                      &lt;!--ADDEDD BY SHWETHA --&gt;
                      &lt;!--&lt;input ng-if="data.cploggedIn &amp;&amp; !item.addItem" style="float: right;width: 130px;" ng-click="c.addToFavorites(item.sys_id)" type="button" value="Add to Favorites" class="btn btn-light"&gt;
&lt;input ng-if="data.cploggedIn &amp;&amp; item.addItem" style="float: right;width: 130px;" ng-click="c.removeFromFavorites(item.sys_id)" type="button" value="Remove from Favorites" class="btn btn-light"&gt;--&gt;

                      &lt;button ng-if="data.cploggedIn &amp;&amp; !item.addItem" style="width: 170px;margin:0px 5px 5px 0px;float:right; background-color: white;color: var(--c-REBlue,#1D7988);border-color:grey;" ng-click="c.addToFavorites1(item.sys_id,item.categoryId)" class="btn"&gt;${Add to Favorites}&lt;/button&gt;
                      &lt;button ng-if="data.cploggedIn &amp;&amp; item.addItem" style="width: 170px;margin:0px 5px 5px 0px;float:right; background-color: white;color: var(--c-REBlue,#1D7988);border-color:grey;" ng-click="c.removeFromFavorites1(item.sys_id,item.categoryId)" class="btn btn-light"&gt;${Remove from Favorites}&lt;/button&gt;
                    &lt;/span&gt;
                  &lt;/div&gt;
                  &lt;!--&lt;div class="text-muted break-word open-today"&gt;&lt;span ng-if="item.openToday" &gt;&amp;nbsp&lt;i class="fa fa-clock-o"&gt;&lt;/i&gt;Today {{item.openToday}} - {{item.closeToday}}&lt;/span&gt;&lt;/div&gt;--&gt;
                  &lt;!--&lt;div style="padding:0px 0px 0px 20px;font-size:1.5rem;" class="text-muted break-word open-today"&gt;&lt;span ng-if="data.timeCal &amp;&amp; item.openToday" &gt;&amp;nbsp;&lt;i class="fa fa-clock-o"&gt;&lt;/i&gt;Open - Closes {{item.closeToday}}&lt;/span&gt;&lt;/div&gt;--&gt;
                  &lt;div style="padding:0px 0px 0px 20px;font-size:1.5rem;"class="text-muted break-word open-today"&gt;
                    &lt;span ng-if="!data.timeCal &amp;&amp; item.openToday &amp;&amp; item.showTimings" &gt;&amp;nbsp;&lt;i class="fa fa-clock-o"&gt;&lt;/i&gt;Open {{item.openToday}} to {{item.closeToday}} {{item.timezone}}&lt;/span&gt;
                    &lt;span ng-if="!item.showTimings"&gt;&amp;nbsp;&lt;i class="fa fa-clock-o"&gt;&lt;/i&gt;Closed Today&lt;/span&gt;
                  &lt;/div&gt;
                  &lt;div&gt;
                  &lt;/div&gt;
                  &lt;!--connect button functionality --&gt;
                &lt;/div&gt;
                &lt;span class="sr-only"&gt;{{item.short_description}}&lt;/span&gt;

              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div ng-init="shareItems()"&gt;
      &lt;/div&gt;
      &lt;!--------------------------------------------Goal Implementation-----------------------------------------------&gt;

      &lt;div ng-if="!data.catIdUrl" ng-init="sendItemBroadcast()"&gt;
        &lt;div class="row" ng-repeat="category in data.categories track by $index" ng-init = "expandCat($index,category.sys_id)"&gt;

          &lt;h2  class="h4 m-t-none break-word" style="color: #1D7988;border-bottom: 0;border-top-color: #1D7988;border-top: 3px solid; font-weight: 600;font-size: 20px;margin-bottom: 20px;" role="heading"&gt; {{category.title}}&lt;button ng-value="category.sys_id"  style="float: right;background:white;margin:0;border: 0px;" class="btn2"&gt;
            &lt;span ng-click="plusMinus(category.sys_id,$index,true)"&gt;&lt;i ng-if="c.checkCategory[$index]!=category.sys_id" class="fa fa-plus" aria-hidden="true"&gt;&lt;/i&gt;&lt;/span&gt;
            &lt;span ng-click="plusMinus(category.sys_id,$index,false)"&gt;&lt;i ng-if="c.checkCategory[$index]==category.sys_id" class="fa fa-minus" aria-hidden="true"&gt;&lt;/i&gt;&lt;/span&gt;

            &lt;/button&gt;&lt;/h2&gt;


          &lt;div ng-if="c.checkCategory[$index]==category.sys_id"&gt;
            &lt;div ng-repeat = "goal in category.goalDetails track by $index"&gt; 
              &lt;h4 style="font-size:22px;"&gt;
                {{goal.goalTitle}}
                &lt;!--added by akhil--&gt;
                &lt;div ng-if="goal.goalItems.length == 0" style=""&gt;&lt;h5&gt;
                  Contact the 211 call center for additional assistance
                  &lt;/h5&gt;&lt;/div&gt;
                &lt;span ng-if="goal.goalItems.length &gt; 2" style="float:right"&gt;
                  &lt;a href="javascript:void(0);" style="font-size:15px;" ng-if="c.checkGoal.includes(goal.goalSysId)" ng-click="viewMoreLess(goal,true)"&gt;View Less&lt;/a&gt;
                  &lt;a href="javascript:void(0);" style="font-size:15px;" ng-if="!c.checkGoal.includes(goal.goalSysId)" ng-click="viewMoreLess(goal,false)"&gt;View All&lt;/a&gt;
                &lt;/span&gt;
                &lt;!-- &lt;span ng-if="goal.goalItems.length != 0" style="float:right"&gt;
&lt;a href="javascript:void(0);" style="font-size:15px;" ng-if="c.checkGoal[$parent.$parent.$index]==goal.goalSysId" ng-click="viewMoreLess(goal,$parent.$parent.$index,true)"&gt;View Less&lt;/a&gt;
&lt;a href="javascript:void(0);" style="font-size:15px;" ng-if="c.checkGoal[$parent.$parent.$parent.$index]!=goal.goalSysId" ng-click="viewMoreLess(goal,$parent.$parent.$parent.$index,false)"&gt;View All&lt;/a&gt;
&lt;/span&gt; --&gt;

              &lt;/h4&gt;
              &lt;div class="table table-striped item-table" ng-if="view == 'grid'" &gt;

                &lt;div&gt;
                  &lt;table class="table table-striped item-table"&gt;
                    &lt;tbody&gt;
                      &lt;tr ng-repeat="item in goal.goalItems | orderBy: 'distance' | limitTo: goal.defaultLen"&gt;
                        &lt;th headers="id-header-item id-item-{{item.sys_id}}" scope="row" class="th-row-data"&gt;
                          &lt;div&gt;
                            &lt;!--&lt;img ng-src="{{item.picture}}?t=small" ng-if="item.picture" alt="" class="m-r-sm m-b-sm item-image pull-left"/&gt; --&gt;
                            &lt;!--&lt;a target="{{item.target}}" ng-href="{{getItemHREF(item)}}" ng-click="onClick($event, item)"&gt; --&gt;
                        &lt;a href="javascript:void(0)" ng-click="c.openResourceDetail(item)"&gt;
                        &lt;!--&lt;a href="javascript:void(0)" target="_blank" ng-click="c.openResourceDetail(item)"&gt;--&gt;
                              &lt;span&gt;{{item.name}}&lt;/span&gt;
                              &lt;span ng-if="item.content_type == 'external'"&gt;&lt;span class="sr-only"&gt;${External Link}&lt;/span&gt;  ➚&lt;/span&gt;
                            &lt;/a&gt;
                          &lt;/div&gt;
                        &lt;/th&gt;
                        &lt;td headers="id-header-description id-item-{{item.sys_id}}" class="break-word"&gt;{{item.short_description}}&lt;/td&gt;
                        &lt;td headers="id-header-price id-item-{{item.sys_id}}"&gt;{{item.price}}&lt;/td&gt;
                      &lt;/tr&gt;
                    &lt;/tbody&gt;
                  &lt;/table&gt;
                &lt;/div&gt;


              &lt;/div&gt;

              &lt;div ng-if="view == 'card'"&gt;

                &lt;div class="col-md-12 col-md-4" ng-repeat="item in goal.goalItems | orderBy: 'distance' | limitTo:goal.defaultLen track by $index"&gt;
                  &lt;div class="panel panel-{{options.color}} b"&gt;
                    &lt;!-- &lt;a target="{{item.target}}" ng-href="{{getItemHREF(item)}}" ng-click="onClick($event, item)" class="panel-body block" sn-focus="{{item.highlight}}"&gt; --&gt;
                    &lt;div style="height:19rem;background:var(--c-REGrey,#f5f8fc);"class="overflow-100"&gt;
                    &lt;!--&lt;a target="{{item.target}}" ng-href="{{getItemHREF(item)}}" ng-click="onClick($event, item)"&gt; --&gt;
                        &lt;a href="javascript:void(0)" ng-click="c.openResourceDetail(item)"&gt;
                        &lt;h3 class="h4 m-t-none m-b-xs text-overflow-ellipsis" title="{{item.name}}" style="padding:15px 0px 0px 20px; font-size:22px;"&gt;{{item.name}}&lt;span ng-if="item.content_type == 'external'" aria-label="${External Link}"&gt; ➚&lt;/span&gt;&lt;/h3&gt;
                      &lt;/a&gt;
                      &lt;img ng-src="{{item.picture}}?t=small" ng-if="item.picture" alt="{{item.name}}" class="m-r-sm m-b-sm item-image pull-left" /&gt;
                      &lt;div style="padding:0px 0px 0px 20px; font-size:large;"class="text-muted item-short-desc break-word" aria-hidden="{{item.name !== null}}" role="presentation"&gt;
                        {{item.short_description}}
                        &lt;!--ADDEDD BY SHWETHA --&gt;
                        &lt;span ng-show="{{item.showButton}}"&gt;&lt;button ng-if="data.cploggedIn" style="float: right;margin:0px 5px 5px 0px;width: 170px;background-color: var(--c-REBlue,#1D7988);" class="btn btn-primary" ng-click="c.createReferal(item.org, item.loc, item.resId)"&gt;${Refer}&lt;/button&gt;&lt;/span&gt;
                      &lt;/div&gt;
                      &lt;div style="padding:0px 0px 0px 20px; font-size:20px" class="text-muted item-short-desc break-word" aria-hidden="{{item.name !== null}}"&gt;{{item.distance}}&amp;nbsp &lt;span style="font-size:1.5rem;"&gt;Miles&lt;/span&gt;&lt;/div&gt;
                      &lt;div class="text-muted break-word"&gt;
                        &amp;nbsp; &lt;a href="tel:{{item.phone}}"&gt;&lt;i style="padding:3rem 0px 0px 20px;font-size:22px"class="fa fa-phone"&gt;&lt;/i&gt;&amp;nbsp; &amp;nbsp;&lt;span style="font-size:1.8rem;"&gt;{{item.phone}}&lt;/span&gt;&lt;/a&gt;
                        &lt;span ng-show="{{item.showButton}}"&gt;
                          &lt;button ng-if="!data.loggedIn &amp;&amp; !data.cploggedIn"  style="float: right;padding:0.7rem 8rem;margin-right:1rem;background-color: white;color: var(--c-REBlue,#1D7988);border-color:grey;font-size:16px" class="btn btn-primary" ng-click="c.connectNLogged(item.sys_id,item.categoryId,item.nearestLoc)"&gt;${Connect}&lt;/button&gt;  
                          &lt;!-- c.inplanvalue() --&gt;           
                          &lt;button  ng-if="item.resourceItem &amp;&amp; data.loggedIn" name="in_plan" style="float: right;padding:0.7rem 8.4rem;margin-right:1rem;background-color: white;color:light-grey;border-color:grey; cursor:context-menu;font-size:16px" class="btn btn-light" title="In Plan" disabled &gt; ${In Plan} &lt;/button&gt;
                          &lt;button ng-if="data.loggedIn &amp;&amp; !item.resourceItem" style="float: right;padding:0.7rem 8rem;margin-right:1rem;background-color: white;color: var(--c-REBlue,#1D7988);border-color:grey;font-size:16px" class="btn btn-primary btn-mid" ng-click="c.createCase(item.sys_id,item.categoryId,item.nearestLoc)"&gt;${Connect}&lt;/button&gt; 
                          &lt;!--ADDEDD BY SHWETHA --&gt;
                          &lt;!--&lt;input ng-if="data.cploggedIn &amp;&amp; !item.addItem" style="float: right;width: 130px;" ng-click="c.addToFavorites(item.sys_id)" type="button" value="Add to Favorites" class="btn btn-light"&gt;
&lt;input ng-if="data.cploggedIn &amp;&amp; item.addItem" style="float: right;width: 130px;" ng-click="c.removeFromFavorites(item.sys_id)" type="button" value="Remove from Favorites" class="btn btn-light"&gt;--&gt;

                          &lt;button ng-if="data.cploggedIn &amp;&amp; !item.addItem" style="width: 170px;margin:0px 5px 5px 0px;float:right; background-color: white;color: var(--c-REBlue,#1D7988);border-color:grey;" ng-click="c.addToFavorites(item.sys_id,item.categoryId)" class="btn"&gt;${Add to Favorites}&lt;/button&gt;
                          &lt;button ng-if="data.cploggedIn &amp;&amp; item.addItem" style="width: 170px;margin:0px 5px 5px 0px;float:right; background-color: white;color: var(--c-REBlue,#1D7988);border-color:grey;" ng-click="c.removeFromFavorites(item.sys_id,item.categoryId)" class="btn btn-light"&gt;${Remove from Favorites}&lt;/button&gt;
                        &lt;/span&gt;
                      &lt;/div&gt;
                      &lt;!--&lt;div class="text-muted break-word open-today"&gt;&lt;span ng-if="item.openToday" &gt;&amp;nbsp&lt;i class="fa fa-clock-o"&gt;&lt;/i&gt;Today {{item.openToday}} - {{item.closeToday}}&lt;/span&gt;&lt;/div&gt;--&gt;
                    &lt;!--  &lt;div style="padding:0px 0px 0px 20px;font-size:1.5rem;" class="text-muted break-word open-today"&gt;&lt;span ng-if="data.timeCal &amp;&amp; item.openToday" &gt;&amp;nbsp;&lt;i class="fa fa-clock-o"&gt;&lt;/i&gt;Open - Closes {{item.closeToday}}&lt;/span&gt;&lt;/div&gt;--&gt;
                      &lt;div style="padding:0px 0px 0px 20px;font-size:1.5rem;"class="text-muted break-word open-today"&gt;
                        &lt;span ng-if="!data.timeCal &amp;&amp; item.openToday &amp;&amp; item.showTimings" &gt;&amp;nbsp;&lt;i class="fa fa-clock-o"&gt;&lt;/i&gt;Open {{item.openToday}} to {{item.closeToday}} {{item.timezone}}&lt;/span&gt;
                        &lt;span ng-if="!item.showTimings"&gt;&amp;nbsp;&lt;i class="fa fa-clock-o"&gt;&lt;/i&gt;Closed Today&lt;/span&gt;
                      &lt;/div&gt;
                      &lt;div&gt;
                      &lt;/div&gt;
                      &lt;!--connect button functionality --&gt;
                    &lt;/div&gt;
                    &lt;span class="sr-only"&gt;{{item.short_description}}&lt;/span&gt;

                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;now-message key="Catalogs" value="${Catalogs}"/&gt;
 &lt;!-- &lt;pre&gt;{{data.categories | json}}&lt;/pre&gt; --&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>-2102006780</payload_hash>
<remote_update_set display_value="RE_SF_GA_RESENG_V1">cf83f395876f0910b7640f6c8bbb3523</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>souravdas</sys_created_by>
<sys_created_on>2022-05-18 10:19:18</sys_created_on>
<sys_id>8b83f395876f0910b7640f6c8bbb3524</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>180b8329d880000001</sys_recorded_at>
<sys_updated_by>souravdas</sys_updated_by>
<sys_updated_on>2022-05-18 10:19:18</sys_updated_on>
<table/>
<target_name>RESENG ArcheType Detail </target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>1bb499aba257c5d07de32ecc6a9ec9f3</update_guid>
<update_guid_history>1bb499aba257c5d07de32ecc6a9ec9f3:-2102006780,9cae01a76d93c5d0748dca7de15cc6aa:2003093124,023e45a31293c5d08bf1c96da6a28765:1409428068,65ed456f8a53c5d043d2ca0686843250:595830980,7f9d4d2f2753c5d071ace1bb0cff526a:1109657732,055d85ab1a53c5d0940abf59b66583bc:1434087704,317bc9679413c5d088987cbbd5b8d724:787173477,cdfa8567a513c5d09e2b9f4e57530f70:2047002195,e77a8923c913c5d005985e51a996c952:913255461,f098c5eb675b8d946305e5708f8a3f96:1824037079,09c70d2b3f9f85d0b09724c6088e2d45:1754641599,c036896364d78d944abcad78f27ff47e:2087628084,19e2056b93db85d03bced8bcd19241d2:1028934620,1296206bbe1b0d94e8a2a180dfffb9c1:-176011233,3846e863dc1b0d9408f5375c4c10446b:1028934620,78d564e7e3d70d94300c20d0c29c4ff9:1028934620,6885ec6340d70d94476d00279266acef:-176011233,c325a823c2d70d948e77909b83c9371b:1864521533,e043e023ea570d94b159a55285e84dd6:-885668238,5e135ce7b957c994b17fc7d66066a275:1301849135,9fc298e37457c9941a4cc0f689b759b3:-919182369,f782d463b157c994eef29c6708b09ed8:1301849135,49329ceb8017c994990eaa1c19817dc0:682423074,d971d8efc7d3c9943c34bf30d1039995:-481285116,2330502f6193c994dd4216d0ba6e6ae2:-1291591294,9c10dc63d193c994d59a2306cb75d940:1655904894,274fcceb8353c994aae9fa23108132e6:-695525782,0a3d4cab62df8994de0c0ba95b6fd7d9:-730628987,8f5988af3ddb8994b570b9efa75a5411:-945367020,02a88cebea9b8994b238a0ead68f475a:2115577868,ff08c86ba69b89942e796c9263804b36:840429188,5c6dfbdbc0df49940f6b46e26e41b41f:152616856,354c379f749f49940d2f432481cd753a:200267026,9e0c7f1fe19f49940ab43b78a88f1bdf:-1472028290,d5dbf75beb9f4994711283cae20a9c98:-752065198,0e5bfb534f9f49949e783acd2e0b6f50:2058677846,e7faf79bb85f49944bcaa1feb0cbcad5:1773566308,1eda339bff5f499434d09331ca965fe0:2081820374,88aa37df9e1f499421ed6bcf8722349e:-1025695252,d8c9335b461f4994389b98fa26226805:-621817236,fe49ff13e11f49943310840459670394:698993725,2f987b17f5db49948a2817f4b4451022:298627596,80887b13c7db499490652ca56acc6941:-1430019028,8738f7134edb4994a34e46c86df42115:-1247065548,1ef77fdb5c9b499459e6335db4d2d9e3:572083948,3d47f313929b499454d0b99d42bbfe68:121236080,5822bb9fe4d3499430c62401f7805152:2135860446,62e0371b53d34994f6773a1d62831dc7:-1217049470,13c1501f20d3c9542dad9299207df63b:-1359775491,0c540f07141b85549b2aca049a8ec201:1028934620,68e3c707cc1b8554fc8b48bd7fbd7c6e:-1332495605,4d218b4bf057855415c88b22b2a60138:-737148774,464e32cfa0938554c67ce6b955d261f5:-200165599,efbb7a8f7edf45542ea55933043fe83a:-1478759282,fa2bf24fa5df45548a9ae14326af507e:-2031975227,96384d614ad789d01180c918afe8551c:-1478759282,21574521c1d789d0e6bad50041cac9ac:-1012185611,fe058de93e9789d0f842b7bc9a63db97:-673921796,0ce34d692a9789d0b3694ee530951079:-639040365,1d83c9297e9789d0f1e2ba6e2dfa58ca:-1418815342,10030da5439789d01e0a3a5b2fdc85e5:-250339605,73c181a5ba9789d0ab8034eced13f70e:1796885937,4591c165649789d05d88059865a30331:-155457965,99d08925649789d0708eae9409bf6cf7:-1566120358,0ca089a1b09789d0206a48df43a76370:1278700872,1d7f7c612c9789d006f011677067d72c:1628594536,bc2f78211f9789d028ff0cfc91b63ba5:1680867699,3c6e70ed695789d0bbe7b09a66af944c:-646727132,3b7af0a9025789d06adfe8a830ed3c3e:-866021939,03f93029265789d06a075f64b3324cfb:589910189,321e98d558d709d0fe764ae52dc72131:979202334,5dfb98d17dd709d00173d154d7777650:1234206445,0ac10855691709d0518b86b90afd8377:1124830671,2e20d77c6cd385d04db692ab67ce1a30:1505307324,675f2c1cde1f41d054277374167e7fe2:-519870714,2bcd45dfd307c9900b29c44c92815c3a:513284998,1214b33274c745108657606048567f71:-226091044,8732276eb78bc1104ab7d8aa4798caa8:1854479070,48a236aae907c1108857fd3fc8d46e8a:1674119972,7481722a1c07c1102a30ad798fe076e4:-697643160,31c03aa66c07c1108e1bfa2cacd7c561:-1611966569,7f4feea24607c110b2c81c6b9a8c16f7:2066285742,ce3ee6225007c1108b17b179356490e0:-733939925,b7c8aaa614c3c11089f0223cf10fe9f2:273870088,4b0fb6de51cb41107ecb9e02e4f196c9:-2010869196,542ee2d2f98b4110c6f311a66ddd7fc7:-70583577,c09d6292cb8b411091510a1790433785:167906811,b11aaed6ea4b41106665a94fbe93c8fa:-1565258934,1d5962565f4b411071ca55ba2954b500:1021985308,551c1a5ed0c7411045a5594bf3cfb314:1452042869,1dbbd25ecbc7411087be666dcb429768:-1095225724,4dfa161edec741102f83dee2ec044f3a:-662355388,16aa1edab3c7411043030eb1ccfb7774:-456783279,983a12dadac741107027fc113346f4fb:1431649059,5cb99e5ad1c74110d7d47e174da0f4e6:1715337632,ea799e5a59c741101f37c1b64cc39b7c:-67970382,48a8d21a9bc741108ec2c8c7efda1bfb:1471370674,68781e965ac74110b24faa039a8a0d5c:1420531129,0777569647c74110f836b645d8b5b05b:1639221969,41271296d3c74110633ef960af6cb8d6:2078238234,c1075a565ec74110ce5dd44e93edbcf3:466686158,94361a16aac741108e00cc19a97fa763:2078238234,82b5dad212c741100846b661311ecc79:583398876,d5451a927cc741107463586851eca895:-1472987851,08e412924dc74110c88c5ca84e1c23ee:501135222,9b945a523cc74110f7fcbf8844304bc1:-1070286955,1724d2125dc741109d89afcd2c6173c4:837812834,dfd396de7b87411030acda17e992db64:350162664,1223169e7d874110c0d01a9972660f26:-1835921699,c2f2de5ef7874110241592176518d382:-405064108,97f0065e950741107dfacdc0e91083bd:837812834,72a00a1e28074110d8327cc4f3ffbb23:-405064108,847f399ae3074110e04e103aa1f701b8:349677129,412f319a43074110b9d1ace7679eec07:-812978706,65de7d1a950741106348a37637e1e86d:-393119909,9b0e7dd603074110798891d088ac4884:294905885,daad3d96570741109ff0dc144bf876c0:-414789683,522dbd560707411098b2a340f8b99c64:-1662640101,aabcfd167e0741104c0d0698bfc7f8dd:1178836031,001cf9d2540741106e3fe2ba68cbe3c0:115205274,120b7952a90741106bc084c2c736d906:263279770,73cab552760741105fecb96a5fe940c3:-155755345,a559b142abc301d06c2eaa10354dee7b:837812834,43f87d0275c301d0dfade56346597d9b:1163208472,7f47318e928301d0d35ec0f00ab35da8:-624964720,1f76790e0e8301d07049468ad5182645:1826003418,88fea102ff8301d04f3b0efa16db6220:837812834,b5d3258e6b0301d0157782273b38e31d:-624964720,56436d4ee50301d07a1d0664d8f29e05:1013872802,ed13694e2e0301d0194e044a61c06c5d:-1745872829,99f2614e080301d0f772a5d4aa64f3a6:-1580136733,efb2614e860301d09e7ce38547e6569c:32374762,3912edcac20301d0823cf7323d3bc74f:-1927061801,951f5d46690301d00d88ef65b880291f:1740171086,a92ebc4e660fcd909a8c1c24f0f8f8ef:936686186,0dfd704e3f0fcd9071fa6418169caaae:-1607458521,d68d300e880fcd90970fef8c1e55b1e3:-1357969900,8fdcbccae70fcd901a26673b82935b82:-2026139383,bee5fc8eaecbcd90d527200c2665b82e:1490016055,4365348e69cbcd906abf64ea96bad47d:1978701218,f1353c4e32cbcd9002ffe794224e85e5:-523418063,38c178c692cbcd90ee79ed015226065a:-545561963,2680b4462bcbcd90c7660a28edf619bb:1195659960,eb50f04698cbcd905acf79847c3196b7:-1879042696,e6efecc2d4cbcd90fc5f56ba6c26a3a9:755978747,57ca640e0b8bcd90c1681518fbf1adab:-1303667414,a34a6c8a058bcd905c81422086f7b11c:2044125830,326ececddd8f49905eea4f60e418b1f2:-356450582,06edc28d6b8f49904fd11cbb6ae485fa:-1977091808,b44cce0d598f4990102f4c47e6b4a386:-1012645038,f30c4ec9db8f49904d5aff2c063877a0:-1119926060,e66b8689018f49908a8a4d2f1dae4e84:1820462906,757a0289348f4990067c7c201cb4ad63:-1395325866,a53a8a09ed8f4990459e98d77ee78e46:-1822598312,0a29cec5588f49908b33d033106f40d5:986415202,8b73cec5384f4990a8e2da718d7de890:1309036661,a5f206c58a4f49909c128ff8e67db39d:-2001872746,6d62ce85b84f4990c0c6e2abc3f16c4c:-740859050,2b7d394d780f4990a4a6a1fc3b2d100d:-73303258,9fbcb10d970f499040faad83aaf45d6f:776439045,ac2cb1c9df0f499013504ed1d7c7c91e:-1851292495,7ca07f207cc3c590ea98ce8231c80695:866982625,d451e3d8a3874590b4ec8ff56f8a308f:-1482212136,2379dc77107e019099e962f5ac8942cb:380342247,27f510ffd23e01909c7ee049ef83b45c:-2143974425,048916f6b176c950b8d497bec8bddb33:-1489258072,e6f81eb6aa76c950fedfd4aa100a7f66:1606779764,7d781e767376c950f439c0d4eb179930:569000368,3d07dab21476c95092fff3a3ae6f5b9e:1492427523,f32696722776c95096908702d4a6a303:-512330171,e0155afe9236c95087e73e2b590c3513:1085720925,ff5492bebc36c950005bd53deb21d82c:-418310955,843492be6b36c950ab90362af686f022:1815513381,beface7e31f2c950d2fc5b368f9b59c9:-2041480414,21aac67e8bf2c95002fe05384c6db326:999994530,650879b6dc72c9509653a61eb240e301:-2041480414,c5b731b68472c9501d45d10f33426bd8:-639502671,6916f1f20b72c950aa14739dacb01e95:-708541253,4e0579727c72c950a8917a62efdaa2f6:1876422623,88a4fd32a872c950507a3f0ff9f4b6a5:1169977306,88e3b1fe1c32c950c64aa2360beea289:1791935735,0782f9b6aafe45108871938931d36d57:937576151,d331f1769bfe45108bc82770b33ab17b:937576151,af70f936defe45107afd3b62ab608a8a:603763517,d54d55363ebe4510cd8db5cdfebefed9:943220058,3afb59f238be4510d82c5671b0db18e0:-114102498,9879b8ae21fe05105da84d04f3f0081a:937576151,864934aefafe0510e702d3351ac2f060:-2088064871,b45f25f6f832c950038c6002f13c8eae:-316257182,5ca96d7efafe8950c4a3d36390585bc2:-69674626,6698a53e46fe8950dfc767665fd1d306:-1026730424,8778613efbfe895001431120f0976ba0:-2047627042,f36055e60dfa8910504c5ceba0198b74:2131394877,0a7f016638fa89103373f819e88d5301:-1137829631,eece45265cfa89100bd9441534bada91:1791935735,368e01263dfa891089006a81d1bf94aa:-342712513,6e2e09e27efa891009f6fe18f7457b5c:-748040431,8c1e49e20efa8910071191bd9e4d4ab0:837780002,056b81eec2ba8910de7b15e813f119a6:1791935735,b07a056ed1ba89102218c45ee26397e7:-1886837196,7e2ac16eeaba8910628218b2ab4a8bac:2112374644,66d9452ef6ba89105f89e0ceea2cddf1:-804945743,7c99812ea1ba8910488f35b73332957a:445766395,7b390deab0ba8910145864564b4516ae:1423644849,ca8605a6a0ba891048eab36407b36491:1003493088,4a36496637ba891063cc5a1b5ecaf4db:50194972,9fc34d6225ba891063920903b316c9c2:-358076656,5ef24122d7ba8910c2b8a29518b667b7:-355907074,876245ee0d7a89101f6fb1e97c1a7937:-847585067,240281aed97a89108d679568f966ef48:-86843021,dbabfce2517a89105c2c0deb9a874314:953073427,f43b7ca20c7a8910fc4f93f1407873e1:1683156063,5fe13b4ae632c5506b68329e3dd9802e:1791935735,4c06e639adfe811012c7b2ecc0cacf8c:937576151,4061fd20933a851032e69914b13330b7:-887069041,9e2045282fbe4510748724bc54633e02:640247886,60cffce47dbe4510be65b0ff4fe42aea:-1173032309,23bb7c2445be4510c4b35aed8ead6945:1508920847,4f3bb4243abe4510926aef405de4d171:-1964977707,8179b028f4368510112af7ba7525d785:-892078004,6e5e81d458f24510aadc9ca7af771ba7:-980297774,9a0e4d942df245105f544c5f25e681fc:1509920146,ccc04598c6b24510b180fe5897f7f3f4:-296970218,74500d5840b24510ba49278548962bc0:1677358871,a44b3cd04eb245103620e101445f274c:301550173,39e9789098b245109f11f232632090bb:282640171,f23aa454c8724510910850d0b7a8a197:-875084144,39de40dc75fe05105031f6533f8f087b:-856174142,eca44c948efe05102e7ea70525a3dea7:1708371701,e9ee7b8099fe051099f7e0d36928b168:1284867110,8ddfc80407360510d2e406c4f9ee028f:1265957108,070a27b75ca20510c201d2e19a1c0f5e:1284867110,2f79eb77b7a20510135e451c28ca01fb:-606798238,50b0eb3f7b6205101d96eca8f92682cd:-1718289677,23aa57b78b620510fd1b44670ed8f24c:912127986,04e91b77f2620510c102e585e7e6a5bd:1568531584,9ba95777f4620510ab157295de2b8da2:-1320282396,14e89b3771620510a06e820dce5f2e47:-381630022,60eb477bd82205108be585a9fe0b2295:1574211355,349b8f3bc2220510e70eea78d1ed0798:-955849427,055b8b3b39220510f42b3b658362d926:658573679,371b4b3be0220510da3415a9bad909c0:1635492291,14fa4b3b7a220510f2ab5ca3a332d486:-194060930,8dcac73bab220510b6aaeee237acfe27:1502729821,ab8a073b1a220510675c24eb97d169f3:629601688,8cd90ff73b220510885a7d3f10afa74e:-1812843356,0d99c7f778220510f4aa3de8f669c658:547143763,591943f7d3220510d6f96f8fc9b0fdfd:1781272438,49b70b779f220510caeb98a70e59696f:291227862,4ad68737bc220510f708917aa62a0836:-1857502564,b3ff3e7bddeec110611923b082848ab0:-1423308522,b9cfba7bc9eec11016437316d0b47514:-1583892691,e93bf01ff26281105ff15d977c0aae61:1372684084,3406e9561eaac1108bde57e718469b87:541073409,a9c5295676aac110ceeb9bbd43b5352e:1611918002,11b36dd29caac110ec19616d0a01b4ac:-352296195,9c43a9d2dbaac11076b0f4281b4da7a6:301922552,e1c225d29aaac110fe684838617003ca:-401142547,36622d92bcaac11095bab5093e1963c5:1589527959,589f1d1299aac1104c6490fb21a41b2d:995362692,d37fd91254aac110391ab9c764f71efc:122432550</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Resource Engine">8d85ea9b1b5e8910d96475de034bcb5f</application>
<category>customer</category>
<comments/>
<name>sp_header_footer_497d63251b228110d96475de034bcbfc</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_header_footer"&gt;&lt;sp_header_footer action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function ($rootScope, $scope, snRecordWatcher, spUtil, $location, $uibModal, cabrillo, $timeout,$window) {
	$scope.userID = $scope.user.sys_id;
	var c=this;
	if (cabrillo.isNative())
		$scope.isViewNative = true;
	/*
	$scope.dynamicOpenPopUp = function() {
		if ($scope.data.useChatWidgetForCSM) {
			$scope.toggleChat();
		} else {
			$scope.openPopUp();
		}
	};
		//Show VA Chat
	var MOBILE_DEVICE_SCREEN_WIDTH = 767;
	$scope.mobileDevice = $scope.data.isMobile || ($(window).width() &lt; MOBILE_DEVICE_SCREEN_WIDTH);
	$scope.showChat = $scope.mobileDevice;
	$scope.toggleChat = function () {
		$scope.showChat = !$scope.showChat;
		$('a#va_chat').toggleClass('inactive-chat active-chat');
		if($scope.showChat &amp;&amp; $('div.conversation-region.open').length&lt;=0){
			$scope.$$postDigest(function(){
				$('div.conversation-button-container button.help-button').trigger('click');
			});
		}
	};

	$scope.openPopUp = function(evt) {
		$(evt.target).blur();
		var queue_id;
		if ($scope.data.queueType == "connect") {
			queue_id = $scope.data.connect_support_queue_id;
		} else {
			queue_id = $scope.data.interaction_queue_id;
		}
		var url ="CustomerServiceChat.do?portal=csm&amp;queue_id="+queue_id+"&amp;user_id="+$scope.userID+"&amp;live_agent_only="+$scope.data.live_agent_only;
		var popup = window.open (url, "popup", "width=450, height=600");
	};
	*/
	$scope.openAgreement = function() {
		$window.open(c.data.url);
	}
	
	$scope.openLogin = function () {
			var portal=c.data.portal_url_suffix ;
		var locationPath=$window.location.pathname;
		var locationSearch=$window.location.search;
		  var login_page=c.data.portal_login_page;
			$location.url('/'+portal+'?id='+login_page);
		  $scope.$on('$locationChangeStart', function (event, next, current) {
				var nextIsLogin=false;
				var nextUrl=new URL(next);
				nextUrl=nextUrl.search.split('id=')[1];
				if(nextUrl &amp;&amp; nextUrl==login_page)
				    nextIsLogin=true;
		     if(!c.data.isLoggedIn &amp;&amp; nextIsLogin)
		         $window.sessionStorage.setItem('navBackUri',locationPath+locationSearch);
			});
		/* Redirecting to login page when login link on header is clicked, for the SP login widget to get new look according to STRY50124975
		$scope.modalInstance = $uibModal.open({
			templateUrl: 'csm_stock_header_template',
			scope: $scope
		});
		*/
	};

	$rootScope.$on('sp.avatar_changed', function() {
		$scope.userID = "";
		$timeout(function(){
			$scope.userID = $scope.user.sys_id;
		});
	});

	$scope.isHomepage = function() {
		if (!$scope.page.id)
			return true;

		if ($scope.page.id == $scope.portal.homepage_dv)
			return true;

		return false;
	};

}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.navbar {&amp;#13;
  transition: 250ms opacity ease-in-out;&amp;#13;
  -webkit-transition: 250ms opacity ease-in-out;&amp;#13;
  border: 0;&amp;#13;
  border-bottom: 0px solid $sp-navbar-divider-color;&amp;#13;
}&amp;#13;
&amp;#13;
.navbar-fade {&amp;#13;
  opacity: 0.4;&amp;#13;
}&amp;#13;
&amp;#13;
.navbar-inverse .navbar-toggle {&amp;#13;
  border-color: rgba(255, 255, 255, 0.25);&amp;#13;
}&amp;#13;
&amp;#13;
header[role="banner"],&amp;#13;
.nav &amp;gt; li &amp;gt; a {&amp;#13;
  max-height: 60px;&amp;#13;
}&amp;#13;
&amp;#13;
@media screen and (max-width: 768px){&amp;#13;
  .nav &amp;gt; li &amp;gt; a {&amp;#13;
    padding-right: 0.5rem;&amp;#13;
    padding-left: 0.5rem;&amp;#13;
  }&amp;#13;
} &amp;#13;
&amp;#13;
.navbar-brand {&amp;#13;
  max-height: 60px;&amp;#13;
  padding: 0;&amp;#13;
  padding-bottom: 0.5rem;&amp;#13;
}&amp;#13;
&amp;#13;
.navbar-brand img, .navbar-brand span {&amp;#13;
  margin-left:50px;&amp;#13;
  margin-right:50px;&amp;#13;
  margin-top: $sp-logo-margin-y;&amp;#13;
  margin-bottom: $sp-logo-margin-y;&amp;#13;
  display: block;&amp;#13;
  max-height: $sp-logo-max-height;&amp;#13;
  max-width: $sp-logo-max-width;&amp;#13;
  position: relative;&amp;#13;
  top: 50%;&amp;#13;
  -webkit-transform: translateY(-50%);&amp;#13;
  -ms-transform: translateY(-50%);&amp;#13;
  transform: translateY(-50%);&amp;#13;
}&amp;#13;
.breadcrumb-container {&amp;#13;
  background-color: $panel-bg;&amp;#13;
}&amp;#13;
&amp;#13;
/* for mobile app */&amp;#13;
.navbar-inverse.is-native {&amp;#13;
  background-color: #405060;&amp;#13;
}&amp;#13;
&amp;#13;
nav{&amp;#13;
 margin-bottom: 0px;&amp;#13;
 border-radius: 0px;&amp;#13;
}&amp;#13;
&amp;#13;
.navbar-right {&amp;#13;
  padding-right: 0px;&amp;#13;
  padding-left: 7px;&amp;#13;
}&amp;#13;
&amp;#13;
.navbar-nav {&amp;#13;
  margin: 0px;&amp;#13;
  .visible-xs-block a {&amp;#13;
    overflow: hidden;&amp;#13;
  }&amp;#13;
}&amp;#13;
&amp;#13;
@media screen and (min-width: 768px) {&amp;#13;
  .navbar-right {&amp;#13;
    display: flex !important;&amp;#13;
  }&amp;#13;
} &amp;#13;
&amp;#13;
.search-widget{&amp;#13;
  padding-top: 1.5rem;&amp;#13;
  padding-bottom: 0.5rem;&amp;#13;
&amp;#13;
}&amp;#13;
&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;reseng_csm_stock_header&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function(scope, element) {
    scope.$on('$locationChangeStart', function() {
		$('#sp-nav-bar.in').removeClass('in').addClass('collapse').attr("aria-expanded", "false");
		$("[data-target='#sp-nav-bar']").attr("aria-expanded", "false");
	});
	$(element).on('click.nav','.navbar-collapse.in',function(e) {
		var target = $(e.target);
		if (target.is('a')) {
			// collapse mobile nav if clicked an anchor
			$(this).removeClass('in').addClass('collapse');
			return;
		}

		if (target.parent().hasClass("toggle-dropdown")) {
			// collapse mobile nav if parent has toggle-dropdown class
			$(this).removeClass('in').addClass('collapse');
			return;
		}

		// if neither target nor parent is an anchor, do nothing
		if (!target.parent().is('a'))
			return;

		// collapse mobile nav if target is part of a submenu
		if (target.parents("ul.dropdown-menu").length &gt; 0)
			$(this).removeClass('in').addClass('collapse');
	});
}]]&gt;&lt;/link&gt;&lt;name&gt;RESENG CSM Stock Header&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[// Defines the support queue ID that will be linked to by the Live Chat link in header
data.isLoggedIn = gs.isLoggedIn();
data.portal = $sp.getPortalRecord();

data.portal_url_suffix = data.portal.getValue("url_suffix") + '';
console.log("porta= "+data.portal_url_suffix);
data.portal_login_page = $sp.getDisplayValue('login_page') || 'csm_login';
data.isMobile = gs.isMobile();
// data.connect_support_queue_id = $sp.getValue('sp_chat_queue');
data.login_page = $sp.getValue('login_page');
var menu = $sp.getValue("sp_rectangle_menu");
data.menu = $sp.getWidgetFromInstance(menu);
if (data.menu &amp;&amp; data.menu.data) {
    data.menu.data.replace = true;
    // Hide login if menu already has link to login
    data.hasLogin = false;
    if (data.menu.data.menu.items) {
        for (var i in data.menu.data.menu.items) {
            var item = data.menu.data.menu.items[i];
            if (item.type == 'page' &amp;&amp; item.sp_page == data.login_page)
                data.hasLogin = true;
        }
    }
}

//data.userAgreement = '?id=user_agreement';
data.userAgreement = '?id=reseng_user_agreement';
data.changePassword = '';

if (gs.getUser().hasRole('sn_customerservice.customer')) //&amp;&amp; !gs.getUser().hasRole('admin')
{
    data.cpUser = true;

    //Added By Sourav for CP Admin

    var orga = gs.getUser().getCompanyID();
	
    data.cpRefInbx = '?id=reseng_cp_my_lists&amp;table=sn_customerservice_referral&amp;view=re_referral_partner&amp;target_page_id=reseng_cp_resource&amp;filter=u_organization_referred_to%3D' + orga + '%5Eu_sourceANYTHING%5Eu_resourceANYTHING%5EstateIN1,2,4%5Eu_location_requestedANYTHING&amp;sel=referral_inbox';
    data.cpACDetails = '?id=reseng_cp_my_lists&amp;table=customer_contact&amp;view=re_contact_view&amp;target_page_id=csm_ticket&amp;sel=account_details';
    data.cpHelp = '?id=reseng_faq_screen';

}

// Added By Sourav for Residents
else if ((gs.getUser().hasRole('sn_customerservice.consumer'))) //|| !gs.getUser().hasRole('admin'))
{
    data.residentUser = true;

    var resUserID = gs.getUserID();

    data.resMyPlan = '?id=reseng_my_lists&amp;table=sn_customerservice_referral&amp;view=mobile&amp;target_page_id=reseng_mycart_to_catitem&amp;filter=consumer.user%3D' + resUserID + '%5Eactive%3Dtrue%5Estate!%3D5&amp;sel=my_plan';

    data.resAccDetails = '?id=reseng_my_lists&amp;table=sn_customerservice_referral&amp;view=csp&amp;target_page_id=csm_ticket&amp;sel=account_details';
    data.cpHelp = '?id=reseng_faq_screen';
    data.resPrivacySettings = '?id=reseng_my_lists&amp;table=sn_customerservice_consent&amp;view=re_consent&amp;target_page_id=csm_ticket&amp;sel=privacy_settings';

}


/*
var qsConfig = $sp.getValue("quick_start_config");
var qsConfigJson = qsConfig ? JSON.parse(qsConfig)[0] : {};
data.loginWidget = $sp.getWidgetFromInstance('login-modal-customerservice');
data.typeahead = $sp.getWidgetFromInstance('typeahead-search');

/*data.queueType = "connect";
var liveAgent = new GlideRecord("sys_cs_live_agent_setup");
liveAgent.query();
if (liveAgent.next()) {
    data.queueType = liveAgent.getValue("csm_fulfiller");
}
//data.isVAActive = GlidePluginManager.isActive('com.glide.cs.chatbot');

// changes data.live_agent_only to true to allow only live agent
data.live_agent_only = false;
if (!data.live_agent_only) {
    data.live_agent_only = !data.isVAActive;
}

data.useChatWidgetForCSM = false;
var chatW = new GlideRecord("sp_widget");
chatW.addQuery("id", "sn-va-sp-widget");
chatW.query();
if (chatW.next()) {
    data.useChatWidgetForCSM = true;
    var contactUrl = "";
    var accountUrl = "";
    var cc = new GlideRecord('customer_contact');
    cc.addQuery("sys_id", gs.getUserID());
    cc.query();
    if (cc.next()) {
        contactUrl = "&amp;sysparm_liveagent_interaction_contact=" + cc.getUniqueValue();
        accountUrl = "&amp;sysparm_liveagent_interaction_account=" + cc.getValue("account");
    }
    var liveAgentUrl = data.live_agent_only ? "&amp;sysparm_live_agent_only=true" : "";
    var csmQueue;
    if (data.queueType == 'connect') {
        csmQueue = data.connect_support_queue_id;
    }
    var va_parms = "sysparm_portal=csm&amp;sysparm_liveagent_application=csm&amp;sysparm_liveagent_queue=" + csmQueue + contactUrl + accountUrl + liveAgentUrl;

    data.va_chat = $sp.getWidget('sn-va-sp-widget', {
        va_url_params: va_parms
    });
} */
data.typeAheadSearch = $sp.getWidget('reseng_search_keyword');
// data.typeAheadSearch = $sp.getWidget('typeahead-search', options.typeahead_search);]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;static&gt;false&lt;/static&gt;&lt;sys_class_name&gt;sp_header_footer&lt;/sys_class_name&gt;&lt;sys_created_by&gt;shalu3&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-03-30 11:28:22&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;497d63251b228110d96475de034bcbfc&lt;/sys_id&gt;&lt;sys_mod_count&gt;17&lt;/sys_mod_count&gt;&lt;sys_name&gt;RESENG CSM Stock Header&lt;/sys_name&gt;&lt;sys_package display_value="Resource Engine" source="x_dnll4_reseng"&gt;8d85ea9b1b5e8910d96475de034bcb5f&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Resource Engine"&gt;8d85ea9b1b5e8910d96475de034bcb5f&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_header_footer_497d63251b228110d96475de034bcbfc&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;shkariya&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-05-12 05:28:42&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;!-- Google Tag Manager --&gt;

  &lt;script&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PSW8Q5M');&lt;/script&gt; 
  &lt;!-- End Google Tag Manager --&gt;


&lt;div&gt;
  &lt;nav class="navbar-inverse" ng-class="::{'navbar':!isViewNative, 'is-native': isViewNative}"
       role="navigation"&gt;
    &lt;div ng-show="::!isViewNative" class="navbar-header"&gt;
      &lt;a class="navbar-brand" ng-if="::!portal.logo" href="?id={{::portal.homepage_dv}}"&gt;&lt;span&gt;{{::portal.title}}&lt;/span&gt;&lt;/a&gt;
      &lt;a class="navbar-brand navbar-brand-logo" ng-if="::portal.logo" href="?id={{::portal.homepage_dv}}" aria-label="${Go to homepage}"&gt;
        &lt;img ng-src="{{::portal.logo}}" title="Community Connect" role="presentation" /&gt;
      &lt;/a&gt;

      &lt;button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#sp-nav-bar"&gt;
        &lt;span class="sr-only" aria-label="${Toggle navigation}"&gt;&lt;/span&gt;
        &lt;span class="icon-bar"&gt;&lt;/span&gt;
        &lt;span class="icon-bar"&gt;&lt;/span&gt;
        &lt;span class="icon-bar"&gt;&lt;/span&gt;
      &lt;/button&gt;
    &lt;/div&gt;

    &lt;div sp-navbar-toggle="" class="collapse navbar-right" id="sp-nav-bar"&gt;
      &lt;span class = "right search-widget"&gt;
    &lt;sp-widget widget="data.typeAheadSearch" /&gt;
  &lt;/span&gt;
      &lt;!-- Include The Menu --&gt;
      &lt;sp-widget widget="data.menu"&gt;&lt;/sp-widget&gt;
      &lt;ul ng-if="::(!user.logged_in &amp;&amp; page.id != portal.login_page_dv &amp;&amp; !data.hasLogin)" class="nav navbar-nav"&gt;
        &lt;li&gt;&lt;a href ng-click="openLogin()"&gt;${Login}&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
      &lt;ul ng-if="::user.logged_in" class="nav navbar-nav"&gt;
        &lt;!-- chat, avatar, and logout --&gt;
        &lt;!-- Since we are uptaking new SP Chat flaoting widget, this menu item is not needed.
        &lt;li ng-if="::data.connect_support_queue_id"&gt;&lt;a href ng-click="dynamicOpenPopUp()"&gt;${Chat}&lt;/a&gt;
        &lt;div ng-if="!data.isMobile" ng-show="showChat"&gt;
            &lt;sp-widget widget="::data.va_chat"&gt;&lt;/sp-widget&gt;
        &lt;/div&gt;
        &lt;/li&gt;
		--&gt;
        &lt;li class="dropdown hidden-xs"&gt;
          &lt;a href="javascript:void(0)" class="dropdown-toggle" data-toggle="dropdown"&gt;
            &lt;span class="navbar-avatar"&gt;&lt;sn-avatar class="avatar-small-medium" primary="userID" /&gt;&lt;/span&gt;
            &lt;span class="visible-lg-inline"&gt;{{::user.name}}&lt;/span&gt;
          &lt;/a&gt;
          &lt;ul class="dropdown-menu"&gt;
            &lt;li&gt;&lt;a ng-href="?id=csm_profile&amp;sys_id={{::user.sys_id}}"&gt;${Profile}&lt;/a&gt;&lt;/li&gt;
            
            &lt;!-- Added By Sourav for RE CP Admins --&gt;
            &lt;li ng-show = "{{data.cpUser}}"&gt;&lt;a href = {{::data.cpRefInbx}}&gt; ${Referral Inbox} &lt;/a&gt; &lt;/li&gt;
            &lt;li ng-show = "{{data.cpUser}}"&gt;&lt;a href = {{::data.cpACDetails}}&gt; ${Account Details} &lt;/a&gt;&lt;/li&gt;
            &lt;li ng-show = "{{data.cpUser}}"&gt;&lt;a href = {{::data.cpHelp}}&gt; ${Help} &lt;/a&gt;&lt;/li&gt; 
                        
            
             &lt;!-- Added By Sourav for RE Residents --&gt;
            &lt;li ng-show = "{{data.residentUser}}"&gt;&lt;a href = {{::data.resMyPlan}}&gt; ${My Plan} &lt;/a&gt; &lt;/li&gt;
            &lt;li ng-show = "{{data.residentUser}}"&gt;&lt;a href = {{::data.resAccDetails}}&gt; ${Account Details} &lt;/a&gt;&lt;/li&gt;
            &lt;li ng-show = "{{data.residentUser}}"&gt;&lt;a href = {{::data.cpHelp}}&gt; ${Help} &lt;/a&gt;&lt;/li&gt;
            &lt;li ng-show = "{{data.residentUser}}"&gt;&lt;a href = {{::data.resPrivacySettings}}&gt; ${Privacy Settings} &lt;/a&gt;&lt;/li&gt;
            
             &lt;!-- Added By Sourav for All Users --&gt;
            &lt;li&gt;&lt;a href = {{::data.userAgreement}}&gt; ${User Agreement} &lt;/a&gt;&lt;/li&gt;
            &lt;!--  &lt;li&gt; &lt;a href = {{::data.changePassword}}&gt; ${Change Password} &lt;/a&gt;&lt;/li&gt; In SNow under profile we have option to change password --&gt;
            &lt;li&gt;&lt;a href="{{::portal.logoutUrl}}"&gt;${Logout}&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        
        &lt;li class="visible-xs-block"&gt;&lt;a ng-href="?id=user_profile&amp;sys_id={{::user.sys_id}}"&gt;&lt;span class="navbar-avatar"&gt;&lt;sn-avatar class="avatar-small-medium" primary="userID" /&gt;&lt;/span&gt;{{::user.name}}&lt;/a&gt;&lt;/li&gt;
        &lt;li class="visible-xs-block"&gt;&lt;a href="{{::portal.logoutUrl}}"&gt;${Logout}&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/nav&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_header_footer&gt;&lt;/record_update&gt;</payload>
<payload_hash>1475138954</payload_hash>
<remote_update_set display_value="RE_SF_GA_RESENG_V1">cf83f395876f0910b7640f6c8bbb3523</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>souravdas</sys_created_by>
<sys_created_on>2022-05-18 10:19:18</sys_created_on>
<sys_id>c783f395876f0910b7640f6c8bbb3524</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>180b6bda1b40000001</sys_recorded_at>
<sys_updated_by>souravdas</sys_updated_by>
<sys_updated_on>2022-05-18 10:19:18</sys_updated_on>
<table/>
<target_name>RESENG CSM Stock Header</target_name>
<type>Header | Footer</type>
<update_domain>global</update_domain>
<update_guid>3377b317729b499461dfdd5bc33dc0a7</update_guid>
<update_guid_history>3377b317729b499461dfdd5bc33dc0a7:1475138954,3ae3fb5be49749944a8c2f9d32ee0e69:-1564253389,2f101013a293c95410f067a2a339e07e:955693338,49337f504e4b4590282514eebf0be064:-806861310,ac9381fedb3e4510e09b69723cf11cfb:-1392122690,3ca60c2d787a4110ed1ee0ba16c3a05a:-2045165045,fd18119f11628110f5573b6e1144adb3:-222566508,c8cb595282aec1101989e45a2cbc3a11:722084053,231bdd1250aec110f0f9278c10344b54:-1979807748,f935cd5e032ac110fb654584f9ca7db3:1100638401,0a64055ed72ac110ee2b832be659a96c:-1987410258,a69ef0d6682ec110df8f2267264a3d2e:-1823459024,266df856232ec1107c7dcdade9e14522:1558945754,04983452402ec110ce8a48d33ec78099:638375030,10867ff18a6a8110be5b6677a855e2d9:1388717081,01467bf1396a8110952fefeaec70fcd1:-2073238572,c69d272577228110b6f4397ecab1f3ab:1373941876,0d7d63254122811010e2661440877bfe:-1176101570</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
</unload>
